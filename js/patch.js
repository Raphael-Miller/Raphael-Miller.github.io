var CABLES=function(t){var e={};function i(s){if(e[s])return e[s].exports;var r=e[s]={i:s,l:!1,exports:{}};return t[s].call(r.exports,r,r.exports,i),r.l=!0,r.exports}return i.m=t,i.c=e,i.d=function(t,e,s){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:s})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var s=Object.create(null);if(i.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)i.d(s,r,function(e){return t[e]}.bind(null,r));return s},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=0)}([function(t,e,i){t.exports=i(1)},function(t,e,i){"use strict";i.r(e);var s={};i.r(s),i.d(s,"base64Chars",(function(){return h})),i.d(s,"base64lookup",(function(){return l})),i.d(s,"b64encTypesArray",(function(){return c})),i.d(s,"b64decTypedArray",(function(){return u}));var r={};i.r(r),i.d(r,"shuffleArray",(function(){return d})),i.d(r,"shortId",(function(){return E})),i.d(r,"uuid",(function(){return b})),i.d(r,"generateUUID",(function(){return A})),i.d(r,"simpleId",(function(){return x})),i.d(r,"smoothStep",(function(){return v})),i.d(r,"smootherStep",(function(){return I})),i.d(r,"clamp",(function(){return O})),i.d(r,"map",(function(){return R})),i.d(r,"cacheBust",(function(){return P})),i.d(r,"basename",(function(){return N})),i.d(r,"jsonp",(function(){return F})),i.d(r,"ajaxSync",(function(){return C})),i.d(r,"ajax",(function(){return M})),i.d(r,"request",(function(){return w})),i.d(r,"UTILS",(function(){return g}));var n={};i.r(n),i.d(n,"easeExpoIn",(function(){return Y})),i.d(n,"easeExpoOut",(function(){return W})),i.d(n,"easeExpoInOut",(function(){return z})),i.d(n,"easeCubicIn",(function(){return X})),i.d(n,"easeCubicOut",(function(){return K})),i.d(n,"easeCubicInOut",(function(){return j})),i.d(n,"ANIM",(function(){return H})),i.d(n,"Anim",(function(){return Q})),i.d(n,"TL",(function(){return q}));var o={};i.r(o),i.d(o,"PatchConnectionReceiver",(function(){return Ut})),i.d(o,"PatchConnectionSender",(function(){return Bt})),i.d(o,"PatchConnectorBroadcastChannel",(function(){return Lt}));const h="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",a=new Uint8Array(256);for(let t=0;t<h.length;t++)a[h.charCodeAt(t)]=t;const l=a,c=function(t){t.buffer&&(t=t.buffer);let e,i=new Uint8Array(t),s=i.length,r="";for(e=0;e<s;e+=3)r+=h[i[e]>>2],r+=h[(3&i[e])<<4|i[e+1]>>4],r+=h[(15&i[e+1])<<2|i[e+2]>>6],r+=h[63&i[e+2]];return s%3==2?r=r.substring(0,r.length-1)+"=":s%3==1&&(r=r.substring(0,r.length-2)+"=="),r},u=function(t){let e,i,s,r,n,o=.75*t.length,h=t.length,a=0;"="===t[t.length-1]&&(o--,"="===t[t.length-2]&&o--);let c=new ArrayBuffer(o),u=new Uint8Array(c);for(e=0;e<h;e+=4)i=l[t.charCodeAt(e)],s=l[t.charCodeAt(e+1)],r=l[t.charCodeAt(e+2)],n=l[t.charCodeAt(e+3)],u[a++]=i<<2|s>>4,u[a++]=(15&s)<<4|r>>2,u[a++]=(3&r)<<6|63&n;return c};class _{constructor(t){this._logs=[],this.initiator=t}stack(t){console.error("["+this.initiator+"] ",t),console.log((new Error).stack)}groupCollapsed(t){console.groupCollapsed("["+this.initiator+"] "+t)}table(t){console.table(t)}groupEnd(){console.groupEnd()}error(t){console.error("["+this.initiator+"]",...arguments)}info(t){console.error("["+this.initiator+"]",...arguments)}warn(t){console.warn("["+this.initiator+"]",...arguments)}verbose(){(CABLES.UI&&CABLES.UI.logFilter.shouldPrint(this.initiator,...arguments)||!CABLES.logSilent)&&console.log("["+this.initiator+"]",...arguments)}log(t){(CABLES.UI&&CABLES.UI.logFilter.shouldPrint(this.initiator,...arguments)||!CABLES.logSilent)&&console.log("["+this.initiator+"]",...arguments)}userInteraction(t){}}const p=function(){this._log=new _("eventtaget"),this._eventCallbacks={},this._logName="",this._logEvents=!1,this._listeners={},this.addEventListener=this.on=function(t,e,i){const s={id:(i||"")+CABLES.uuid(),name:t,cb:e};return this._eventCallbacks[t]?this._eventCallbacks[t].push(s):this._eventCallbacks[t]=[s],this._listeners[s.id]=s,s.id},this.hasEventListener=function(t,e){if(t&&!e)return!!this._listeners[t];if(this._log.warn("old eventtarget function haseventlistener!"),t&&e&&this._eventCallbacks[t]){return-1!=this._eventCallbacks[t].indexOf(e)}},this.removeEventListener=this.off=function(t,e){if(null==t)return;if(!e){const e=this._listeners[t];if(!e)return;let i=!0;for(;i;){i=!1;let s=-1;for(let r=0;r<this._eventCallbacks[e.name].length;r++)0===this._eventCallbacks[e.name][r].id.indexOf(t)&&(i=!0,s=r);-1!==s&&(this._eventCallbacks[e.name].splice(s,1),delete this._listeners[t])}return}this._log.stack(" old function signature: removeEventListener! use listener id");let i=null;for(let s=0;s<this._eventCallbacks[t].length;s++)this._eventCallbacks[t][s].cb==e&&(i=s);null!==i?delete this._eventCallbacks[i]:this._log.warn("removeEventListener not found "+t)},this.logEvents=function(t,e){this._logEvents=t,this._logName=e},this.emitEvent=function(t,e,i,s,r,n,o){if(this._logEvents&&console.log("[event] ",this._logName,t,this._eventCallbacks),this._eventCallbacks[t])for(let h=0;h<this._eventCallbacks[t].length;h++)this._eventCallbacks[t][h]&&this._eventCallbacks[t][h].cb(e,i,s,r,n,o);else this._logEvents&&console.log("[event] has no event callback",t,this._eventCallbacks)}},g={float32Concat:function(t,e){t instanceof Float32Array||(t=new Float32Array(t)),e instanceof Float32Array||(e=new Float32Array(e));const i=new Float32Array(t.length+e.length);return i.set(t),i.set(e,t.length),i}},d=function(t){for(let e=t.length-1;e>0;e--){const i=Math.floor(Math.seededRandom()*(e+1)),s=t[e];t[e]=t[i],t[i]=s}return t},f={},m=function(){let t=Math.random().toString(36).substr(2,9);return f.hasOwnProperty(t)&&(t=m()),f[t]=!0,t},E=m,T=function(){let t=(new Date).getTime();return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,e=>{const i=(t+16*Math.random())%16|0;return t=Math.floor(t/16),("x"==e?i:3&i|8).toString(16)})},b=T,A=T;let y=0;const x=function(){return y++,y},v=function(t){const e=Math.max(0,Math.min(1,(t-0)/1));return t=e*e*(3-2*e)},I=function(t){const e=Math.max(0,Math.min(1,(t-0)/1));return t=e*e*e*(e*(6*e-15)+10)},O=function(t,e,i){return Math.min(Math.max(t,e),i)},R=function(t,e,i,s,r,n){if(t>=i)return r;if(t<=e)return s;let o=!1;const h=Math.min(e,i),a=Math.max(e,i);h!=e&&(o=!0);let l=!1;const c=Math.min(s,r),u=Math.max(s,r);c!=s&&(l=!0);let _=0,p=0;return _=o?(a-t)*(u-c)/(a-h):(t-h)*(u-c)/(a-h),p=l?u-_:_+c,n?1==n?s+(t=Math.max(0,Math.min(1,(p-s)/(r-s))))*t*(3-2*t)*(r-s):2==n?s+(t=Math.max(0,Math.min(1,(p-s)/(r-s))))*t*t*(t*(6*t-15)+10)*(r-s):p:p};Math.randomSeed=1,Math.seededRandom=function(t,e){0===Math.randomSeed&&(Math.randomSeed=999*Math.random()),t=t||1,e=e||0,Math.randomSeed=(9301*Math.randomSeed+49297)%233280;return e+Math.randomSeed/233280*(t-e)},g.arrayWriteToEnd=function(t,e){for(let e=1;e<t.length;e++)t[e-1]=t[e];t[t.length-1]=e},g.isNumeric=function(t){return!isNaN(parseFloat(t))&&isFinite(t)},g.isArray=function(t){return"[object Array]"===Object.prototype.toString.call(t)},String.prototype.endl=function(){return this+"\n"},String.prototype.startsWith=function(t){return 0===this.indexOf(t)},String.prototype.endsWith=function(t){return this.match(t+"$")==t};const P=function(t){return t.indexOf("?")>-1?t+="&":t+="?",t+"cb="+CABLES.uuid()},N=function(t){let e="";if(!t)return"";const i=(t+"").split("/");if(i.length>0){let t=i[i.length-1].split("?");e=t[0],t=e.split("."),e=t[0]}return e};let S=null;const F=function(t,e){S=S||0,S++;const i=S;CABLES["jsonpFunc"+i]=function(t){e(!1,t)};let s="?";t.indexOf(s)>-1&&(s="&");const r=document.createElement("script");r.setAttribute("src",t+s+"callback=CABLES.jsonpFunc"+i),document.body.appendChild(r)},C=function(t,e,i,s,r){w({url:t,cb:e,method:i,data:s,contenttype:r,sync:!0})},M=function(t,e,i,s,r,n,o={}){w({url:t,cb:e,method:i,data:s,contenttype:r,sync:!1,jsonP:n,headers:o})},w=function(t){let e;t.hasOwnProperty("asynch")||(t.asynch=!0);try{e=new XMLHttpRequest}catch(t){}if(e.onreadystatechange=function(){4==e.readyState&&t.cb&&(200==e.status||0==e.status?t.cb(!1,e.responseText,e):t.cb(!0,e.responseText,e))},e.addEventListener("progress",t=>{}),e.open(t.method?t.method.toUpperCase():"GET",t.url,!t.sync),"object"==typeof t.headers){const i=Object.keys(t.headers);for(let s=0;s<i.length;s++){const r=i[s],n=t.headers[r];e.setRequestHeader(r,n)}}t.post||t.data?(e.setRequestHeader("Content-type",t.contenttype?t.contenttype:"application/x-www-form-urlencoded"),e.send(t.data||t.post)):e.send()};window.performance=window.performance||{offset:Date.now(),now:function(){return Date.now()-this.offset}};const U={EASINGS:["linear","absolute","smoothstep","smootherstep","Cubic In","Cubic Out","Cubic In Out","Expo In","Expo Out","Expo In Out","Sin In","Sin Out","Sin In Out","Quart In","Quart Out","Quart In Out","Quint In","Quint Out","Quint In Out","Back In","Back Out","Back In Out","Elastic In","Elastic Out","Bounce In","Bounce Out"],EASING_LINEAR:0,EASING_ABSOLUTE:1,EASING_SMOOTHSTEP:2,EASING_SMOOTHERSTEP:3,EASING_BEZIER:4,EASING_CUBIC_IN:5,EASING_CUBIC_OUT:6,EASING_CUBIC_INOUT:7,EASING_EXPO_IN:8,EASING_EXPO_OUT:9,EASING_EXPO_INOUT:10,EASING_SIN_IN:11,EASING_SIN_OUT:12,EASING_SIN_INOUT:13,EASING_BACK_IN:14,EASING_BACK_OUT:15,EASING_BACK_INOUT:16,EASING_ELASTIC_IN:17,EASING_ELASTIC_OUT:18,EASING_BOUNCE_IN:19,EASING_BOUNCE_OUT:21,EASING_QUART_IN:22,EASING_QUART_OUT:23,EASING_QUART_INOUT:24,EASING_QUINT_IN:25,EASING_QUINT_OUT:26,EASING_QUINT_INOUT:27},B={OP_PORT_TYPE_VALUE:0,OP_PORT_TYPE_FUNCTION:1,OP_PORT_TYPE_OBJECT:2,OP_PORT_TYPE_TEXTURE:2,OP_PORT_TYPE_ARRAY:3,OP_PORT_TYPE_DYNAMIC:4,OP_PORT_TYPE_STRING:5,OP_VERSION_PREFIX:"_v"},L={PORT_DIR_IN:0,PORT_DIR_OUT:1},k={PACO_CLEAR:0,PACO_VALUECHANGE:1,PACO_OP_DELETE:2,PACO_UNLINK:3,PACO_LINK:4,PACO_LOAD:5,PACO_OP_CREATE:6,PACO_OP_ENABLE:7,PACO_OP_DISABLE:8},D=function(t,e,i,s){p.apply(this),this.data={},this._log=new _("core_port"),this.direction=L.PORT_DIR_IN,this.id=A(),this.parent=t,this.links=[],this.value=0,this.name=e,this.type=i||B.OP_PORT_TYPE_VALUE,this.uiAttribs=s||{},this.anim=null,this._oldAnimVal=-5711,this.defaultValue=null,this._uiActiveState=!0,this.ignoreValueSerialize=!1,this.onLinkChanged=null,this.crashed=!1,this._valueBeforeLink=null,this._lastAnimFrame=-1,this._animated=!1,this.onValueChanged=null,this.onTriggered=null,this.onUiActiveStateChange=null,this.changeAlways=!1,this._warnedDeprecated=!1,this._useVariableName=null,this._tempLastUiValue=null,Object.defineProperty(this,"val",{get(){return this._log.warn("val getter deprecated!",this),this._log.stack("val getter deprecated"),this._warnedDeprecated=!0,this.get()},set(t){this._log.warn("val setter deprecated!",this),this._log.stack("val setter deprecated"),this.setValue(t),this._warnedDeprecated=!0}})};D.prototype.getValueForDisplay=function(){let t=String(this.value);return t.length>100&&(t=t.substring(0,100)),t},D.prototype.onAnimToggle=function(){},D.prototype._onAnimToggle=function(){this.onAnimToggle()},D.prototype.remove=function(){this.removeLinks(),this.parent.removePort(this)},D.prototype.setUiAttribs=function(t){let e=!1;this.uiAttribs||(this.uiAttribs={});for(const i in t)this.uiAttribs[i]!=t[i]&&(e=!0),this.uiAttribs[i]=t[i];e&&this.emitEvent("onUiAttrChange",t)},D.prototype.getUiAttribs=function(){return this.uiAttribs},D.prototype.getUiAttrib=function(t){return this.uiAttribs&&this.uiAttribs.hasOwnProperty(t)?this.uiAttribs[t]:null},D.prototype.get=function(){return this._animated&&this._lastAnimFrame!=this.parent.patch.getFrameNum()&&(this._lastAnimFrame=this.parent.patch.getFrameNum(),this.value=this.anim.getValue(this.parent.patch.timer.getTime()),this._oldAnimVal=this.value,this.forceChange()),this.value},D.prototype.set=D.prototype.setValue=function(t){if(void 0!==t&&this.parent.enabled&&!this.crashed&&(t!==this.value||this.changeAlways||this.type==B.OP_PORT_TYPE_TEXTURE||this.type==B.OP_PORT_TYPE_ARRAY)){if(this._animated)this.anim.setValue(this.parent.patch.timer.getTime(),t);else{try{this.value=t,this.forceChange()}catch(t){this.crashed=!0,this.setValue=function(t){},this.onTriggered=function(){},this._log.error("onvaluechanged exception cought",t),this._log.error(t.stack),this._log.warn("exception in: "+this.parent.name),this.parent.patch.isEditorMode()&&gui.showOpCrash(this.parent),this.parent.patch.emitEvent("exception".ex,this.parent),this.parent.onError&&this.parent.onError(t)}this.parent&&this.parent.patch&&this.parent.patch.isEditorMode()&&this.type==B.OP_PORT_TYPE_TEXTURE&&gui.texturePreview().updateTexturePort(this)}if(this.direction==L.PORT_DIR_OUT)for(let t=0;t<this.links.length;++t)this.links[t].setValue()}},D.prototype.updateAnim=function(){this._animated&&(this.value=this.get(),(this._oldAnimVal!=this.value||this.changeAlways)&&(this._oldAnimVal=this.value,this.forceChange()),this._oldAnimVal=this.value)},D.args=function(t){return(t+"").replace(/[/][/].*$/gm,"").replace(/\s+/g,"").replace(/[/][*][^/*]*[*][/]/g,"").split("){",1)[0].replace(/^[^(]*[(]/,"").replace(/=[^,]+/g,"").split(",").filter(Boolean)},D.prototype.forceChange=function(){this.onValueChanged||this.onChange,this.emitEvent("change",this.value,this),this.onChange?this.onChange(this,this.value):this.onValueChanged&&this.onValueChanged(this,this.value)},D.prototype.getTypeString=function(){return this.type==B.OP_PORT_TYPE_VALUE?"Number":this.type==B.OP_PORT_TYPE_FUNCTION?"Trigger":this.type==B.OP_PORT_TYPE_OBJECT?"Object":this.type==B.OP_PORT_TYPE_DYNAMIC?"Dynamic":this.type==B.OP_PORT_TYPE_ARRAY?"Array":this.type==B.OP_PORT_TYPE_STRING?"String":"Unknown"},D.prototype.deSerializeSettings=function(t){if(t&&(t.animated&&this.setAnimated(t.animated),t.useVariable&&this.setVariableName(t.useVariable),t.anim)){this.anim||(this.anim=new Q),t.anim.loop&&(this.anim.loop=t.anim.loop);for(const e in t.anim.keys)this.anim.keys.push(new H.Key(t.anim.keys[e]))}},D.prototype.getSerialized=function(){const t={};if(t.name=this.getName(),this.ignoreValueSerialize||0!==this.links.length||this.type==B.OP_PORT_TYPE_OBJECT&&this.value&&this.value.tex||(t.value=this.value),this._useVariableName&&(t.useVariable=this._useVariableName),this._animated&&(t.animated=!0),this.anim&&(t.anim=this.anim.getSerialized()),"file"==this.uiAttribs.display&&(t.display=this.uiAttribs.display),this.direction==L.PORT_DIR_OUT&&this.links.length>0){t.links=[];for(const e in this.links)!this.links[e].ignoreInSerialize&&this.links[e].portIn&&this.links[e].portOut&&t.links.push(this.links[e].getSerialized())}return t},D.prototype.shouldLink=function(){return!0},D.prototype.removeLinks=function(){let t=0;for(;this.links.length>0;){if(t++,t>5e3){this._log.warn("could not delete links... / infinite loop"),this.links.length=0;break}this.links[0].remove()}},D.prototype.removeLink=function(t){for(const e in this.links)this.links[e]==t&&this.links.splice(e,1);this.direction==L.PORT_DIR_IN&&(this.type==B.OP_PORT_TYPE_VALUE?this.setValue(this._valueBeforeLink||0):this.setValue(this._valueBeforeLink||null)),this.onLinkChanged&&this.onLinkChanged(),this.emitEvent("onLinkChanged")},D.prototype.getName=function(){return this.name},D.prototype.addLink=function(t){this._valueBeforeLink=this.value,this.links.push(t),this.onLinkChanged&&this.onLinkChanged(),this.emitEvent("onLinkChanged")},D.prototype.getLinkTo=function(t){for(const e in this.links)if(this.links[e].portIn==t||this.links[e].portOut==t)return this.links[e]},D.prototype.removeLinkTo=function(t){for(const e in this.links)if(this.links[e].portIn==t||this.links[e].portOut==t)return this.links[e].remove(),this.onLinkChanged&&this.onLinkChanged(),void this.emitEvent("onLinkChanged")},D.prototype.isLinkedTo=function(t){for(const e in this.links)if(this.links[e].portIn==t||this.links[e].portOut==t)return!0;return!1},D.prototype.trigger=function(){if(0===this.links.length)return;if(!this.parent.enabled)return;let t=null;try{for(let e=0;e<this.links.length;++e)this.links[e].portIn&&(t=this.links[e].portIn,t.parent.patch.pushTriggerStack(t),t._onTriggered(),t.parent.patch.popTriggerStack()),this.links[e]&&this.links[e].activity()}catch(e){this.parent.enabled=!1,this.parent.patch.isEditorMode()&&(this.parent.patch.emitEvent("exception",e,t.parent),this.parent.patch.emitEvent("opcrash",t),t.parent.onError&&t.parent.onError(e)),this._log.warn("exception!"),this._log.error("ontriggered exception cought",e),this._log.error(e.stack),this._log.warn("exception in: "+t.parent.name)}},D.prototype.call=function(){this._log.warn("call deprecated - use trigger() "),this.trigger()},D.prototype.execute=function(){this._log.warn("### execute port: "+this.getName(),this.goals.length)},D.prototype.setVariableName=function(t){this._useVariableName=t},D.prototype.getVariableName=function(){return this._useVariableName},D.prototype.setVariable=function(t){this.setAnimated(!1);const e={useVariable:!1};this._variableIn&&(this._variableIn.removeListener(this.set.bind(this)),this._variableIn=null),t?(this._variableIn=this.parent.patch.getVar(t),this._variableIn?(this.type==B.OP_PORT_TYPE_OBJECT?this._variableIn.addListener(()=>{this.set(null),this.set(this._variableIn.getValue())}):this._variableIn.addListener(this.set.bind(this)),this.set(this._variableIn.getValue())):this._log.warn("PORT VAR NOT FOUND!!!",t),this._useVariableName=t,e.useVariable=!0,e.variableName=this._useVariableName):(e.variableName=this._useVariableName=null,e.useVariable=!1),this.setUiAttribs(e)},D.prototype._handleNoTriggerOpAnimUpdates=function(t){let e=!1;for(let t=0;t<this.parent.portsIn.length;t++)if(this.parent.portsIn.type==B.OP_PORT_TYPE_FUNCTION){e=!0;break}e||(t?this._notriggerAnimUpdate=this.parent.patch.on("onRenderFrame",()=>{this.updateAnim()}):this.parent.patch.removeEventListener(this._notriggerAnimUpdate))},D.prototype.setAnimated=function(t){this._animated!=t&&(this._animated=t,this._animated&&!this.anim&&(this.anim=new Q),this._onAnimToggle()),this._handleNoTriggerOpAnimUpdates(t),this.setUiAttribs({isAnimated:this._animated})},D.prototype.toggleAnim=function(t){this._animated=!this._animated,this._animated&&!this.anim&&(this.anim=new Q),this.setAnimated(this._animated),this._onAnimToggle(),this.setUiAttribs({isAnimated:this._animated})},D.prototype.getType=function(){return this.type},D.prototype.isLinked=function(){return this.links.length>0},D.prototype.isBoundToVar=function(){return null!=this._useVariableName},D.prototype.isAnimated=function(){return this._animated},D.prototype.isHidden=function(){return this.uiAttribs.hidePort},D.prototype._onTriggered=function(t){this.parent.updateAnims(),this.parent.enabled&&this.onTriggered&&this.onTriggered(t)},D.prototype._onSetProfiling=function(t){this.parent.patch.profiler.add("port",this),this.setValue(t),this.parent.patch.profiler.add("port",null)},D.prototype._onTriggeredProfiling=function(){this.parent.enabled&&this.onTriggered&&(this.parent.patch.profiler.add("port",this),this.onTriggered(),this.parent.patch.profiler.add("port",null))},D.prototype.onValueChange=function(t){this.onChange=t},D.prototype.getUiActiveState=function(){return this._uiActiveState},D.prototype.setUiActiveState=function(t){this._uiActiveState=t,this.onUiActiveStateChange&&this.onUiActiveStateChange()},D.prototype.hidePort=function(){this._log.warn("op.hideport() is deprecated, do not use it!")},D.portTypeNumberToString=function(t){return t==B.OP_PORT_TYPE_VALUE?"value":t==B.OP_PORT_TYPE_FUNCTION?"function":t==B.OP_PORT_TYPE_OBJECT?"object":t==B.OP_PORT_TYPE_ARRAY?"array":t==B.OP_PORT_TYPE_STRING?"string":t==B.OP_PORT_TYPE_DYNAMIC?"dynamic":"unknown"};class V extends D{constructor(t,e,i,s,r){super(t,e,i,s),this.indexPort=r,this.indexPort.set=t=>{const e=s.values;if(!e)return;let i=Math.floor(t);i=Math.min(i,e.length-1),i=Math.max(i,0),this.indexPort.setValue(i),this.set(e[i]),this.parent.patch.isEditorMode()&&window.gui&&gui.patchView.isCurrentOp(this.parent)&&gui.opParams.show(this.parent)}}setUiAttribs(t){const e=t.hidePort;t.hidePort=!0,super.setUiAttribs(t),void 0!==e&&this.indexPort.setUiAttribs({hidePort:e})}}class G extends V{setUiAttribs(t){if(this.indexPort.isLinked())for(const e in t)"greyout"!=e||t[e]||(t[e]="true");super.setUiAttribs(t)}}const H={Key:function(t){this.time=0,this.value=0,this.ui=null,this.onChange=null,this._easing=0,this.cb=null,this.cbTriggered=!1;this.setEasing(U.EASING_LINEAR),this.set(t)}};H.Key.linear=function(t,e,i){return parseFloat(e.value)+parseFloat(i.value-e.value)*t},H.Key.easeLinear=function(t,e){return H.Key.linear(t,this,e)},H.Key.easeAbsolute=function(t,e){return this.value};const Y=function(t){return Math.pow(2,10*(t-1))};H.Key.easeExpoIn=function(t,e){return t=Y(t),H.Key.linear(t,this,e)};const W=function(t){return t=1-Math.pow(2,-10*t)};H.Key.easeExpoOut=function(t,e){return t=W(t),H.Key.linear(t,this,e)};const z=function(t){return(t*=2)<1?t=.5*Math.pow(2,10*(t-1)):(t--,t=.5*(2-Math.pow(2,-10*t))),t};H.Key.easeExpoInOut=function(t,e){return t=z(t),H.Key.linear(t,this,e)},H.Key.easeSinIn=function(t,e){return t=-1*Math.cos(t*Math.PI/2)+1,H.Key.linear(t,this,e)},H.Key.easeSinOut=function(t,e){return t=Math.sin(t*Math.PI/2),H.Key.linear(t,this,e)},H.Key.easeSinInOut=function(t,e){return t=-.5*(Math.cos(Math.PI*t)-1),H.Key.linear(t,this,e)};const X=function(t){return t*=t*t};H.Key.easeCubicIn=function(t,e){return t=X(t),H.Key.linear(t,this,e)},H.Key.easeInQuint=function(t,e){return t*=t*t*t*t,H.Key.linear(t,this,e)},H.Key.easeOutQuint=function(t,e){return t=(t-=1)*t*t*t*t+1,H.Key.linear(t,this,e)},H.Key.easeInOutQuint=function(t,e){return(t/=.5)<1?t*=.5*t*t*t*t:t=.5*((t-=2)*t*t*t*t+2),H.Key.linear(t,this,e)},H.Key.easeInQuart=function(t,e){return t*=t*t*t,H.Key.linear(t,this,e)},H.Key.easeOutQuart=function(t,e){return t=-1*((t-=1)*t*t*t-1),H.Key.linear(t,this,e)},H.Key.easeInOutQuart=function(t,e){return(t/=.5)<1?t*=.5*t*t*t:t=-.5*((t-=2)*t*t*t-2),H.Key.linear(t,this,e)},H.Key.bounce=function(t){return(t/=1)<1/2.75?t*=7.5625*t:t=t<2/2.75?7.5625*(t-=1.5/2.75)*t+.75:t<2.5/2.75?7.5625*(t-=2.25/2.75)*t+.9375:7.5625*(t-=2.625/2.75)*t+.984375,t},H.Key.easeInBounce=function(t,e){return H.Key.linear(H.Key.bounce(t),this,e)},H.Key.easeOutBounce=function(t,e){return H.Key.linear(H.Key.bounce(t),this,e)},H.Key.easeInElastic=function(t,e){let i=1.70158,s=0,r=1;return 0===t?t=0:1==(t/=1)?t=1:(s||(s=.3),r<Math.abs(1)?(r=1,i=s/4):i=s/(2*Math.PI)*Math.asin(1/r),t=-r*Math.pow(2,10*(t-=1))*Math.sin((1*t-i)*(2*Math.PI)/s)+0),H.Key.linear(t,this,e)},H.Key.easeOutElastic=function(t,e){let i=1.70158,s=0,r=1;return 0===t?t=0:1==(t/=1)?t=1:(s||(s=.3),r<Math.abs(1)?(r=1,i=s/4):i=s/(2*Math.PI)*Math.asin(1/r),t=r*Math.pow(2,-10*t)*Math.sin((1*t-i)*(2*Math.PI)/s)+1+0),H.Key.linear(t,this,e)},H.Key.easeInBack=function(t,e){const i=1.70158;return t=t*t*((i+1)*t-i),H.Key.linear(t,this,e)},H.Key.easeOutBack=function(t,e){const i=1.70158;return t=(t=t/1-1)*t*((i+1)*t+i)+1,H.Key.linear(t,this,e)},H.Key.easeInOutBack=function(t,e){let i=1.70158;return t=(t/=.5)<1?t*t*((1+(i*=1.525))*t-i)*.5:.5*((t-=2)*t*((1+(i*=1.525))*t+i)+2),H.Key.linear(t,this,e)};const K=function(t){return t=--t*t*t+1};H.Key.easeCubicOut=function(t,e){return t=K(t),H.Key.linear(t,this,e)};const j=function(t){return(t*=2)<1?t*=.5*t*t:t=.5*((t-=2)*t*t+2),t};H.Key.easeCubicInOut=function(t,e){return t=j(t),H.Key.linear(t,this,e)},H.Key.easeSmoothStep=function(t,e){const i=Math.max(0,Math.min(1,t));return t=i*i*(3-2*i),H.Key.linear(t,this,e)},H.Key.easeSmootherStep=function(t,e){const i=Math.max(0,Math.min(1,(t-0)/1));return t=i*i*i*(i*(6*i-15)+10),H.Key.linear(t,this,e)},H.Key.prototype.setEasing=function(t){this._easing=t,this._easing==U.EASING_ABSOLUTE?this.ease=H.Key.easeAbsolute:this._easing==U.EASING_SMOOTHSTEP?this.ease=H.Key.easeSmoothStep:this._easing==U.EASING_SMOOTHERSTEP?this.ease=H.Key.easeSmootherStep:this._easing==U.EASING_CUBIC_IN?this.ease=H.Key.easeCubicIn:this._easing==U.EASING_CUBIC_OUT?this.ease=H.Key.easeCubicOut:this._easing==U.EASING_CUBIC_INOUT?this.ease=H.Key.easeCubicInOut:this._easing==U.EASING_EXPO_IN?this.ease=H.Key.easeExpoIn:this._easing==U.EASING_EXPO_OUT?this.ease=H.Key.easeExpoOut:this._easing==U.EASING_EXPO_INOUT?this.ease=H.Key.easeExpoInOut:this._easing==U.EASING_SIN_IN?this.ease=H.Key.easeSinIn:this._easing==U.EASING_SIN_OUT?this.ease=H.Key.easeSinOut:this._easing==U.EASING_SIN_INOUT?this.ease=H.Key.easeSinInOut:this._easing==U.EASING_BACK_OUT?this.ease=H.Key.easeOutBack:this._easing==U.EASING_BACK_IN?this.ease=H.Key.easeInBack:this._easing==U.EASING_BACK_INOUT?this.ease=H.Key.easeInOutBack:this._easing==U.EASING_ELASTIC_IN?this.ease=H.Key.easeInElastic:this._easing==U.EASING_ELASTIC_OUT?this.ease=H.Key.easeOutElastic:this._easing==U.EASING_ELASTIC_INOUT?this.ease=H.Key.easeElasticInOut:this._easing==U.EASING_BOUNCE_IN?this.ease=H.Key.easeInBounce:this._easing==U.EASING_BOUNCE_OUT?this.ease=H.Key.easeOutBounce:this._easing==U.EASING_QUART_OUT?this.ease=H.Key.easeOutQuart:this._easing==U.EASING_QUART_IN?this.ease=H.Key.easeInQuart:this._easing==U.EASING_QUART_INOUT?this.ease=H.Key.easeInOutQuart:this._easing==U.EASING_QUINT_OUT?this.ease=H.Key.easeOutQuint:this._easing==U.EASING_QUINT_IN?this.ease=H.Key.easeInQuint:this._easing==U.EASING_QUINT_INOUT?this.ease=H.Key.easeInOutQuint:(this._easing=U.EASING_LINEAR,this.ease=H.Key.easeLinear)},H.Key.prototype.trigger=function(){this.cb(),this.cbTriggered=!0},H.Key.prototype.setValue=function(t){this.value=t,null!==this.onChange&&this.onChange()},H.Key.prototype.set=function(t){t&&(t.e&&this.setEasing(t.e),t.cb&&(this.cb=t.cb,this.cbTriggered=!1),t.b,t.hasOwnProperty("t")&&(this.time=t.t),t.hasOwnProperty("time")&&(this.time=t.time),t.hasOwnProperty("v")?this.value=t.v:t.hasOwnProperty("value")&&(this.value=t.value)),null!==this.onChange&&this.onChange()},H.Key.prototype.getSerialized=function(){const t={};return t.t=this.time,t.v=this.value,t.e=this._easing,t},H.Key.prototype.getEasing=function(){return this._easing};const Q=function(t){t=t||{},this.keys=[],this.onChange=null,this.stayInTimeline=!1,this.loop=!1,this._log=new _("Anim"),this.defaultEasing=t.defaultEasing||U.EASING_LINEAR,this.onLooped=null,this._timesLooped=0,this._needsSort=!1};Q.prototype.forceChangeCallback=function(){null!==this.onChange&&this.onChange()},Q.prototype.hasEnded=function(t){return 0===this.keys.length||this.keys[this.keys.length-1].time<=t},Q.prototype.isRising=function(t){if(this.hasEnded(t))return!1;const e=this.getKeyIndex(t);return this.keys[e].value<this.keys[e+1].value},Q.prototype.clearBefore=function(t){const e=this.getValue(t),i=this.getKeyIndex(t);this.setValue(t,e),i>1&&this.keys.splice(0,i)},Q.prototype.clear=function(t){let e=0;t&&(e=this.getValue(t)),this.keys.length=0,t&&this.setValue(t,e),null!==this.onChange&&this.onChange()},Q.prototype.sortKeys=function(){this.keys.sort((t,e)=>parseFloat(t.time)-parseFloat(e.time)),this._needsSort=!1},Q.prototype.getLength=function(){return 0===this.keys.length?0:this.keys[this.keys.length-1].time},Q.prototype.getKeyIndex=function(t){let e=0;for(let i=0;i<this.keys.length;i++)if(t>=this.keys[i].time&&(e=i),this.keys[i].time>t)return e;return e},Q.prototype.setValue=function(t,e,i){let s=!1;for(const r in this.keys)if(this.keys[r].time==t){s=this.keys[r],this.keys[r].setValue(e),this.keys[r].cb=i;break}s||this.keys.push(new H.Key({time:t,value:e,e:this.defaultEasing,cb:i})),this.onChange&&this.onChange(),this._needsSort=!0},Q.prototype.getSerialized=function(){const t={keys:[]};t.loop=this.loop;for(const e in this.keys)t.keys.push(this.keys[e].getSerialized());return t},Q.prototype.getKey=function(t){const e=this.getKeyIndex(t);return this.keys[e]},Q.prototype.getNextKey=function(t){let e=this.getKeyIndex(t)+1;return e>=this.keys.length&&(e=this.keys.length-1),this.keys[e]},Q.prototype.isFinished=function(t){return this.keys.length<=0||t>this.keys[this.keys.length-1].time},Q.prototype.isStarted=function(t){return!(this.keys.length<=0)&&t>=this.keys[0].time},Q.prototype.getValue=function(t){if(0===this.keys.length)return 0;if(this._needsSort&&this.sortKeys(),t<this.keys[0].time)return this.keys[0].value;const e=this.keys.length-1;if(this.loop&&t>this.keys[e].time){t/this.keys[e].time>this._timesLooped&&(this._timesLooped++,this.onLooped&&this.onLooped()),t=(t-this.keys[0].time)%(this.keys[e].time-this.keys[0].time),t+=this.keys[0].time}const i=this.getKeyIndex(t);if(i>=e)return this.keys[e].cb&&!this.keys[e].cbTriggered&&this.keys[e].trigger(),this.keys[e].value;const s=parseInt(i,10)+1,r=this.keys[i],n=this.keys[s];if(r.cb&&!r.cbTriggered&&r.trigger(),!n)return-1;const o=(t-r.time)/(n.time-r.time);return r.ease||this.log._warn("has no ease",r,n),r.ease(o,n)},Q.prototype.addKey=function(t){void 0===t.time?this.log.warn("key time undefined, ignoring!"):(this.keys.push(t),null!==this.onChange&&this.onChange())},Q.prototype.easingFromString=function(t){return"linear"==t?U.EASING_LINEAR:"absolute"==t?U.EASING_ABSOLUTE:"smoothstep"==t?U.EASING_SMOOTHSTEP:"smootherstep"==t?U.EASING_SMOOTHERSTEP:"Cubic In"==t?U.EASING_CUBIC_IN:"Cubic Out"==t?U.EASING_CUBIC_OUT:"Cubic In Out"==t?U.EASING_CUBIC_INOUT:"Expo In"==t?U.EASING_EXPO_IN:"Expo Out"==t?U.EASING_EXPO_OUT:"Expo In Out"==t?U.EASING_EXPO_INOUT:"Sin In"==t?U.EASING_SIN_IN:"Sin Out"==t?U.EASING_SIN_OUT:"Sin In Out"==t?U.EASING_SIN_INOUT:"Back In"==t?U.EASING_BACK_IN:"Back Out"==t?U.EASING_BACK_OUT:"Back In Out"==t?U.EASING_BACK_INOUT:"Elastic In"==t?U.EASING_ELASTIC_IN:"Elastic Out"==t?U.EASING_ELASTIC_OUT:"Bounce In"==t?U.EASING_BOUNCE_IN:"Bounce Out"==t?U.EASING_BOUNCE_OUT:"Quart Out"==t?U.EASING_QUART_OUT:"Quart In"==t?U.EASING_QUART_IN:"Quart In Out"==t?U.EASING_QUART_INOUT:"Quint Out"==t?U.EASING_QUINT_OUT:"Quint In"==t?U.EASING_QUINT_IN:"Quint In Out"==t?U.EASING_QUINT_INOUT:void 0},Q.prototype.createPort=function(t,e,i){const s=t.inDropDown(e,U.EASINGS);return s.set("linear"),s.defaultValue="linear",s.onChange=function(){this.defaultEasing=this.easingFromString(s.get()),i&&i()}.bind(this),s},Q.slerpQuaternion=function(t,e,i,s,r,n){Q.slerpQuaternion.q1||(Q.slerpQuaternion.q1=quat.create(),Q.slerpQuaternion.q2=quat.create());const o=i.getKeyIndex(t);let h=o+1;if(h>=i.keys.length&&(h=i.keys.length-1),o==h)quat.set(e,i.keys[o].value,s.keys[o].value,r.keys[o].value,n.keys[o].value);else{const a=i.keys[o].time,l=(t-a)/(i.keys[h].time-a);quat.set(Q.slerpQuaternion.q1,i.keys[o].value,s.keys[o].value,r.keys[o].value,n.keys[o].value),quat.set(Q.slerpQuaternion.q2,i.keys[h].value,s.keys[h].value,r.keys[h].value,n.keys[h].value),quat.slerp(e,Q.slerpQuaternion.q1,Q.slerpQuaternion.q2,l)}return e};const q=H;q.Anim=Q;const J=function(t){p.apply(this),this.id=CABLES.uuid(),this.portIn=null,this.portOut=null,this.scene=t,this.activityCounter=0,this.ignoreInSerialize=!1};J.prototype.setValue=function(t){void 0===t?this._setValue():this.portIn.set(t)},J.prototype.activity=function(){this.activityCounter++},J.prototype._setValue=function(){if(!this.portOut)return void this.remove();const t=this.portOut.get();t==t&&(this.portIn.type!=B.OP_PORT_TYPE_FUNCTION&&this.activity(),(this.portIn.get()!==t||this.portIn.changeAlways)&&this.portIn.set(t))},J.prototype.getOtherPort=function(t){return t==this.portIn?this.portOut:this.portIn},J.prototype.remove=function(){this.portIn&&this.portIn.removeLink(this),this.portOut&&this.portOut.removeLink(this),this.scene&&this.scene.emitEvent("onUnLink",this.portIn,this.portOut,this),!this.portIn||this.portIn.type!=B.OP_PORT_TYPE_OBJECT&&this.portIn.type!=B.OP_PORT_TYPE_ARRAY||(this.portIn.set(null),this.portIn.links.length>0&&this.portIn.set(this.portIn.links[0].getOtherPort(this.portIn).get())),this.portIn&&this.portIn.parent._checkLinksNeededToWork(),this.portOut&&this.portOut.parent._checkLinksNeededToWork(),this.portIn=null,this.portOut=null,this.scene=null},J.prototype.link=function(t,e){if(!J.canLink(t,e))return console.warn("[core_link] cannot link ports!",t,e),!1;t.direction==L.PORT_DIR_IN?(this.portIn=t,this.portOut=e):(this.portIn=e,this.portOut=t),t.addLink(this),e.addLink(this),this.setValue(),t.onLink&&t.onLink(this),e.onLink&&e.onLink(this),t.parent._checkLinksNeededToWork(),e.parent._checkLinksNeededToWork()},J.prototype.getSerialized=function(){const t={};return t.portIn=this.portIn.getName(),t.portOut=this.portOut.getName(),t.objIn=this.portIn.parent.id,t.objOut=this.portOut.parent.id,t},J.canLinkText=function(t,e){if(t.direction==e.direction){let t="(out)";return e.direction==L.PORT_DIR_IN&&(t="(in)"),"can not link: same direction "+t}return t.parent==e.parent?"can not link: same op":t.type!=B.OP_PORT_TYPE_DYNAMIC&&e.type!=B.OP_PORT_TYPE_DYNAMIC&&t.type!=e.type?"can not link: different type":t?e?t.direction==L.PORT_DIR_IN&&t.isAnimated()||e.direction==L.PORT_DIR_IN&&e.isAnimated()?"can not link: is animated":t.isLinkedTo(e)?"ports already linked":t.canLink&&!t.canLink(e)||e.canLink&&!e.canLink(t)?"Incompatible":"can link":"can not link: port 2 invalid":"can not link: port 1 invalid"},J.canLink=function(t,e){return!!t&&(!!e&&((t.direction!=L.PORT_DIR_IN||!t.isAnimated())&&((e.direction!=L.PORT_DIR_IN||!e.isAnimated())&&(!t.isHidden()&&!e.isHidden()&&(!t.isLinkedTo(e)&&(t.direction!=e.direction&&((t.type==e.type||t.type==B.OP_PORT_TYPE_DYNAMIC||e.type==B.OP_PORT_TYPE_DYNAMIC)&&(t.type==B.OP_PORT_TYPE_DYNAMIC||e.type==B.OP_PORT_TYPE_DYNAMIC||t.parent!=e.parent&&(!(t.canLink&&!t.canLink(e))&&!(e.canLink&&!e.canLink(t)))))))))))};const Z=function(){if(p.apply(this),this._log=new _("core_op"),this.data={},this.storage={},this.objName="",this.portsOut=[],this.portsIn=[],this.portsInData=[],this.opId="",this.uiAttribs={},this.enabled=!0,this.patch=arguments[0],this.name=arguments[1],this._needsLinkedToWork=[],this._needsParentOp=null,this._shortOpName="",this.hasUiErrors=!1,this._uiErrors={},arguments[1]){if(this._shortOpName=arguments[1].split(".")[arguments[1].split(".").length-1],this._shortOpName.indexOf(B.OP_VERSION_PREFIX)>0){const t=this._shortOpName.split(B.OP_VERSION_PREFIX)[1];this._shortOpName=this._shortOpName.substring(0,this._shortOpName.length-(B.OP_VERSION_PREFIX+t).length)}this.uiAttribs.title=this._shortOpName}this.id=arguments[2]||b(),this.onAddPort=null,this.onCreate=null,this.onResize=null,this.onLoaded=null,this.onDelete=null,this.onUiAttrChange=null,this.onError=null,this._eventCallbacks={},this._instances=null,this.preRender=null,this.init=null};{Z.prototype.clearUiAttrib=function(t){const e={name:null};this.uiAttrib(e)},Z.prototype.getTitle=function(){return this.uiAttribs&&this.uiAttribs.title||this.name},Z.prototype.setTitle=function(t){const e=this.name!=t;this.name=t,this.uiAttr({title:t}),e&&this.fireEvent("onTitleChange",t)};const t=function(t){if(t){(t.error||t.warning||t.hint)&&this._log.warn("old ui error/warning attribute in "+this.name+", use op.setUiError !",t),"object"!=typeof t&&this._log.error("op.uiAttrib attribs are not string"),this.uiAttribs||(this.uiAttribs={});for(const e in t)this.uiAttribs[e]=t[e];t.title&&t.title!=this.name&&this.setTitle(t.title),this.fireEvent("onUiAttribsChange",t)}};Z.prototype.setUiAttrib=t,Z.prototype.uiAttr=t,Z.prototype.getName=function(){return this.uiAttribs.name?this.uiAttribs.name:this.objName.split(".")},Z.prototype.addOutPort=function(t){return t.direction=L.PORT_DIR_OUT,t.parent=this,this.portsOut.push(t),this.fireEvent("onPortAdd",t),t},Z.prototype.hasDynamicPort=function(){let t=0;for(t=0;t<this.portsIn.length;t++){if(this.portsIn[t].type==B.OP_PORT_TYPE_DYNAMIC)return!0;if("dyn"==this.portsIn[t].getName())return!0}for(t=0;t<this.portsOut.length;t++){if(this.portsOut[t].type==B.OP_PORT_TYPE_DYNAMIC)return!0;if("dyn"==this.portsOut[t].getName())return!0}return!1},Z.prototype.addInPort=function(t){if(!(t instanceof D))throw new Error("parameter is not a port!");return t.direction=L.PORT_DIR_IN,t.parent=this,this.portsIn.push(t),this.fireEvent("onPortAdd",t),t},Z.prototype.inFunction=Z.prototype.inTrigger=function(t,e){const i=this.addInPort(new D(this,t,B.OP_PORT_TYPE_FUNCTION));return void 0!==e&&i.set(e),i},Z.prototype.inFunctionButton=Z.prototype.inTriggerButton=function(t,e){const i=this.addInPort(new D(this,t,B.OP_PORT_TYPE_FUNCTION,{display:"button"}));return void 0!==e&&i.set(e),i},Z.prototype.inFunctionButton=Z.prototype.inUiTriggerButtons=function(t,e){const i=this.addInPort(new D(this,t,B.OP_PORT_TYPE_FUNCTION,{display:"buttons"}));return void 0!==e&&i.set(e),i},Z.prototype.inValueFloat=Z.prototype.inValue=Z.prototype.inFloat=function(t,e){const i=this.addInPort(new D(this,t,B.OP_PORT_TYPE_VALUE));return void 0!==e&&(i.set(e),i.defaultValue=e),i},Z.prototype.inValueBool=Z.prototype.inBool=function(t,e){const i=this.addInPort(new D(this,t,B.OP_PORT_TYPE_VALUE,{display:"bool"}));return void 0!==e&&(i.set(e),i.defaultValue=i.get()),i},Z.prototype.inValueString=function(t,e){const i=this.addInPort(new D(this,t,B.OP_PORT_TYPE_VALUE,{type:"string"}));return i.value="",void 0!==e&&(i.set(e),i.defaultValue=e),i},Z.prototype.inString=function(t,e){const i=this.addInPort(new D(this,t,B.OP_PORT_TYPE_STRING,{type:"string"}));return e=e||"",i.value=e,i.set(e),i.defaultValue=e,i},Z.prototype.inValueText=function(t,e){const i=this.addInPort(new D(this,t,B.OP_PORT_TYPE_VALUE,{type:"string",display:"text"}));return i.value="",void 0!==e&&(i.set(e),i.defaultValue=e),i},Z.prototype.inTextarea=function(t,e){const i=this.addInPort(new D(this,t,B.OP_PORT_TYPE_STRING,{type:"string",display:"text"}));return i.value="",void 0!==e&&(i.set(e),i.defaultValue=e),i},Z.prototype.inStringEditor=function(t,e,i,s=!0){const r=this.addInPort(new D(this,t,B.OP_PORT_TYPE_STRING,{type:"string",display:"editor",editorSyntax:i,hideFormatButton:s}));return r.value="",void 0!==e&&(r.set(e),r.defaultValue=e),r},Z.prototype.inValueEditor=function(t,e,i,s=!0){const r=this.addInPort(new D(this,t,B.OP_PORT_TYPE_VALUE,{type:"string",display:"editor",editorSyntax:i,hideFormatButton:s}));return r.value="",void 0!==e&&(r.set(e),r.defaultValue=e),r},Z.prototype.inValueSelect=Z.prototype.inDropDown=function(t,e,i,s){let r=null;if(s){const i=new D(this,t,B.OP_PORT_TYPE_VALUE,{display:"dropdown",hidePort:!0,type:"string",values:e});r=this.addInPort(i)}else{const s=new D(this,t+" index",B.OP_PORT_TYPE_VALUE,{increment:"integer",hideParam:!0}),n=this.addInPort(s),o=new G(this,t,B.OP_PORT_TYPE_VALUE,{display:"dropdown",hidePort:!0,type:"string",values:e},n);if(s.onLinkChanged=function(){o.setUiAttribs({greyout:s.isLinked()})},r=this.addInPort(o),void 0!==i){r.set(i);const t=e.findIndex(t=>t==i);n.setValue(t),r.defaultValue=i,n.defaultValue=t}}return r},Z.prototype.inSwitch=function(t,e,i,s){let r=null;if(s){const i=new D(this,t,B.OP_PORT_TYPE_STRING,{display:"switch",hidePort:!0,type:"string",values:e});r=this.addInPort(i)}else{const s=new D(this,t+" index",B.OP_PORT_TYPE_VALUE,{increment:"integer",hideParam:!0}),n=this.addInPort(s),o=new V(this,t,B.OP_PORT_TYPE_STRING,{display:"switch",hidePort:!0,type:"string",values:e},n);if(s.onLinkChanged=function(){o.setUiAttribs({greyout:s.isLinked()})},r=this.addInPort(o),void 0!==i){r.set(i);const t=e.findIndex(t=>t==i);n.setValue(t),r.defaultValue=i,n.defaultValue=t}}return r},Z.prototype.inValueInt=Z.prototype.inInt=function(t,e){const i=this.addInPort(new D(this,t,B.OP_PORT_TYPE_VALUE,{increment:"integer"}));return void 0!==e&&(i.set(e),i.defaultValue=e),i},Z.prototype.inFile=function(t,e,i){const s=this.addInPort(new D(this,t,B.OP_PORT_TYPE_VALUE,{display:"file",type:"string",filter:e}));return void 0!==i&&(s.set(i),s.defaultValue=i),s},Z.prototype.inUrl=function(t,e,i){const s=this.addInPort(new D(this,t,B.OP_PORT_TYPE_STRING,{display:"file",type:"string",filter:e}));return void 0!==i&&(s.set(i),s.defaultValue=i),s},Z.prototype.inTexture=function(t,e){const i=this.addInPort(new D(this,t,B.OP_PORT_TYPE_OBJECT,{display:"texture",objType:"texture",preview:!0}));return void 0!==e&&i.set(e),i},Z.prototype.inObject=function(t,e,i){const s=this.addInPort(new D(this,t,B.OP_PORT_TYPE_OBJECT,{objType:i}));return void 0!==e&&s.set(e),s},Z.prototype.inGradient=function(t,e){const i=this.addInPort(new D(this,t,B.OP_PORT_TYPE_VALUE,{display:"gradient",hidePort:!0}));return void 0!==e&&i.set(e),i},Z.prototype.inArray=function(t,e){const i=this.addInPort(new D(this,t,B.OP_PORT_TYPE_ARRAY));return void 0!==e&&i.set(e),i},Z.prototype.inValueSlider=Z.prototype.inFloatSlider=function(t,e,i,s){const r={display:"range"};null!=i&&null!=s&&(r.min=i,r.max=s);const n=this.addInPort(new D(this,t,B.OP_PORT_TYPE_VALUE,r));return void 0!==e&&(n.set(e),n.defaultValue=e),n},Z.prototype.outFunction=Z.prototype.outTrigger=function(t,e){const i=this.addOutPort(new D(this,t,B.OP_PORT_TYPE_FUNCTION));return void 0!==e&&i.set(e),i},Z.prototype.outValue=Z.prototype.outNumber=function(t,e){const i=this.addOutPort(new D(this,t,B.OP_PORT_TYPE_VALUE));return void 0!==e&&i.set(e),i},Z.prototype.outValueBool=Z.prototype.outBool=function(t,e){const i=this.addOutPort(new D(this,t,B.OP_PORT_TYPE_VALUE,{display:"bool"}));return void 0!==e?i.set(e):i.set(0),i},Z.prototype.outValueString=function(t,e){const i=this.addOutPort(new D(this,t,B.OP_PORT_TYPE_VALUE,{type:"string"}));return void 0!==e&&i.set(e),i},Z.prototype.outString=function(t,e){const i=this.addOutPort(new D(this,t,B.OP_PORT_TYPE_STRING,{type:"string"}));return void 0!==e?i.set(e):i.set(""),i},Z.prototype.outObject=function(t,e,i){const s=this.addOutPort(new D(this,t,B.OP_PORT_TYPE_OBJECT,{objType:i||null}));return void 0!==e&&s.set(e),s.ignoreValueSerialize=!0,s},Z.prototype.outArray=function(t,e){const i=this.addOutPort(new D(this,t,B.OP_PORT_TYPE_ARRAY));return void 0!==e&&i.set(e),i.ignoreValueSerialize=!0,i},Z.prototype.outTexture=function(t,e){const i=this.addOutPort(new D(this,t,B.OP_PORT_TYPE_OBJECT,{preview:!0,objType:"texture"}));return void 0!==e&&i.set(e),i.ignoreValueSerialize=!0,i},Z.prototype.inDynamic=function(t,e,i,s){const r=new D(this,t,B.OP_PORT_TYPE_DYNAMIC,i);return r.shouldLink=function(t,i){if(e&&g.isArray(e)){for(let s=0;s<e.length;s++){if(t==this&&i.type===e[s])return!0;if(i==this&&t.type===e[s])return!0}return!1}return!0},this.addInPort(r),void 0!==s&&(r.set(s),r.defaultValue=s),r},Z.prototype.printInfo=function(){for(let t=0;t<this.portsIn.length;t++)console.log("in: "+this.portsIn[t].getName());for(const t in this.portsOut)console.log("out: "+this.portsOut[t].getName())},Z.prototype.getOutChilds=function(){const t=[];for(const e in this.portsOut)for(const i in this.portsOut[e].links)this.portsOut[e].type==B.OP_PORT_TYPE_FUNCTION&&t.push(this.portsOut[e].links[i].portIn.parent);return t},Z.prototype.markChilds=function(){this.marked=!0;for(const t in this.portsOut)for(const e in this.portsOut[t].links)this.portsOut[t].parent.marked=!0,this.portsOut[t].links[e].portIn.parent!=this&&this.portsOut[t].links[e].portIn.parent.markChilds()},Z.prototype.selectChilds=function(){this.setUiAttrib({selected:!0});for(const t in this.portsOut)for(const e in this.portsOut[t].links)this.portsOut[t].parent.setUiAttrib({selected:!0}),this.portsOut[t].links[e].portIn.parent!=this&&this.portsOut[t].links[e].portIn.parent.selectChilds()},Z.prototype.deleteChilds=function(){const t=[];for(const e in this.portsOut)for(const i in this.portsOut[e].links)this.portsOut[e].links[i].portIn.parent!=this&&(this.portsOut[e].parent!=this&&t.push(this.portsOut[e].parent),t.push(this.portsOut[e].links[i].portIn.parent),this.portsOut[e].links[i].portIn.parent.deleteChilds());for(const e in t)this.patch.deleteOp(t[e].id)},Z.prototype.removeLinks=function(){for(let t=0;t<this.portsIn.length;t++)this.portsIn[t].removeLinks();for(let t=0;t<this.portsOut.length;t++)this.portsOut[t].removeLinks()},Z.prototype.countFittingPorts=function(t){let e=0;for(const i in this.portsOut)J.canLink(t,this.portsOut[i])&&e++;for(const i in this.portsIn)J.canLink(t,this.portsIn[i])&&e++;return e},Z.prototype.findFittingPort=function(t,e=!1){if(e){for(const e in this.portsIn)if(J.canLink(t,this.portsIn[e]))return this.portsIn[e];for(const e in this.portsOut)if(J.canLink(t,this.portsOut[e]))return this.portsOut[e]}else{for(const e in this.portsOut)if(J.canLink(t,this.portsOut[e]))return this.portsOut[e];for(const e in this.portsIn)if(J.canLink(t,this.portsIn[e]))return this.portsIn[e]}},Z.prototype.getSerialized=function(t){const e={};this.opId&&(e.opId=this.opId),e.objName=this.objName,e.id=this.id,e.uiAttribs=this.uiAttribs,e.storage=this.storage,this.uiAttribs.title==this._shortOpName&&delete this.uiAttribs.title,this.uiAttribs.hasOwnProperty("working")&&1==this.uiAttribs.working&&delete this.uiAttribs.working,t&&this.uiAttribs.hasOwnProperty("uierrors")&&delete this.uiAttribs.uierrors,e.portsIn=[],e.portsOut=[];for(let t=0;t<this.portsIn.length;t++)e.portsIn.push(this.portsIn[t].getSerialized());for(const t in this.portsOut)e.portsOut.push(this.portsOut[t].getSerialized());return e},Z.prototype.getFirstOutPortByType=function(t){for(const e in this.portsOut)if(this.portsOut[e].type==t)return this.portsOut[e]},Z.prototype.getPort=Z.prototype.getPortByName=function(t,e){if(e){for(let e=0;e<this.portsIn.length;e++)if(this.portsIn[e].getName().toLowerCase()==t)return this.portsIn[e];for(let e=0;e<this.portsOut.length;e++)if(this.portsOut[e].getName().toLowerCase()==t)return this.portsOut[e]}else{for(let e=0;e<this.portsIn.length;e++)if(this.portsIn[e].getName()==t)return this.portsIn[e];for(let e=0;e<this.portsOut.length;e++)if(this.portsOut[e].getName()==t)return this.portsOut[e]}},Z.prototype.getPortById=function(t){for(let e=0;e<this.portsIn.length;e++)if(this.portsIn[e].id==t)return this.portsIn[e];for(let e=0;e<this.portsOut.length;e++)if(this.portsOut[e].id==t)return this.portsOut[e]},Z.prototype.updateAnims=function(){for(let t=0;t<this.portsIn.length;t++)this.portsIn[t].updateAnim()},Z.prototype.log=function(){const t="op "+this.objName;if(CABLES.UI&&!CABLES.UI.logFilter.shouldPrint(t,...arguments))return;if(!CABLES.UI&&this.patch.silent)return;const e=["[op "+this._shortOpName+"]"];e.push.apply(e,arguments),Function.prototype.apply.apply(console.log,[console,e])},Z.prototype.error=Z.prototype.logError=function(){const t=["[op "+this._shortOpName+"]"];t.push.apply(t,arguments),Function.prototype.apply.apply(console.error,[console,t])},Z.prototype.warn=Z.prototype.logWarn=function(){const t=["[op "+this._shortOpName+"]"];t.push.apply(t,arguments),Function.prototype.apply.apply(console.warn,[console,t])},Z.prototype.verbose=Z.prototype.logVerbose=function(){const t="op "+this._shortOpName;if(CABLES.UI&&!CABLES.UI.logFilter.shouldPrint(t,...arguments))return;if(!CABLES.UI&&this.patch.silent)return;const e=["["+t+"]"];e.push.apply(e,arguments),Function.prototype.apply.apply(console.info,[console,e])},Z.prototype.unLink=function(){for(let t=0;t<this.portsOut.length;t++)this.portsOut[t].removeLinks();for(let t=0;t<this.portsIn.length;t++)this.portsIn[t].removeLinks()},Z.prototype.profile=function(t){for(let t=0;t<this.portsIn.length;t++)this.portsIn[t]._onTriggered=this.portsIn[t]._onTriggeredProfiling,this.portsIn[t].set=this.portsIn[t]._onSetProfiling},Z.prototype.findParent=function(t){for(let e=0;e<this.portsIn.length;e++)if(this.portsIn[e].isLinked()){if(this.portsIn[e].links[0].portOut.parent.objName==t)return this.portsIn[e].links[0].portOut.parent;let i=null;if(i=this.portsIn[e].links[0].portOut.parent.findParent(t),i)return i}return null},Z.prototype.cleanUp=function(){if(this._instances){for(let t=0;t<this._instances.length;t++)this._instances[t].onDelete&&this._instances[t].onDelete();this._instances.length=0}},Z.prototype.instanced=function(t){if(console.log("instanced",this.patch.instancing.numCycles()),0===this.patch.instancing.numCycles())return!1;let e=0,i=0;if(!this._instances||this._instances.length!=this.patch.instancing.numCycles()){for(this._instances||(this._instances=[]),this._.log("creating instances of ",this.objName,this.patch.instancing.numCycles(),this._instances.length),this._instances.length=this.patch.instancing.numCycles(),e=0;e<this._instances.length;e++){this._instances[e]=this.patch.createOp(this.objName,!0),this._instances[e].instanced=function(){return!1},this._instances[e].uiAttr(this.uiAttribs);for(let t=0;t<this.portsOut.length;t++)this.portsOut[t].type==B.OP_PORT_TYPE_FUNCTION&&(this._instances[e].getPortByName(this.portsOut[t].name).trigger=this.portsOut[t].trigger.bind(this.portsOut[t]))}for(i=0;i<this.portsIn.length;i++)this.portsIn[i].onChange=null,this.portsIn[i].onValueChanged=null}for(i=0;i<this.portsIn.length;i++)this.portsIn[i].type!=B.OP_PORT_TYPE_VALUE&&this.portsIn[i].type!=B.OP_PORT_TYPE_ARRAY||this._instances[this.patch.instancing.index()].portsIn[i].set(this.portsIn[i].get()),this.portsIn[i].type,B.OP_PORT_TYPE_FUNCTION;for(i=0;i<this.portsOut.length;i++)this.portsOut[i].type==B.OP_PORT_TYPE_VALUE&&this.portsOut[i].set(this._instances[this.patch.instancing.index()].portsOut[i].get());return!0},Z.prototype.initInstancable=function(){},Z.prototype.setValues=function(t){for(const e in t){const i=this.getPortByName(e);i?i.set(t[e]):this._log.warn("op.setValues: port not found:",e)}},Z.prototype.setUiError=function(t,e,i){if(!e&&!this.hasUiErrors)return;if(!e&&!this._uiErrors.hasOwnProperty(t))return;if(this._uiErrors.hasOwnProperty(t)&&this._uiErrors[t].txt==e)return;t.indexOf(" ")>-1&&this._log.warn("setuierror id cant have spaces!"),!e&&this._uiErrors.hasOwnProperty(t)?delete this._uiErrors[t]:!e||this._uiErrors.hasOwnProperty(t)&&this._uiErrors[t].txt==e||(null==i&&(i=2),this._uiErrors[t]={txt:e,level:i,id:t});const s=[];for(const t in this._uiErrors)s.push(this._uiErrors[t]);this.uiAttr({uierrors:s}),this.hasUiErrors=Object.keys(this._uiErrors).length},Z.prototype.setError=function(t,e){this._log.warn("old error message op.error() - use op.setUiError()")},Z.prototype.addListener=Z.prototype.addEventListener=function(t,e){this._eventCallbacks[t]?this._eventCallbacks[t].push(e):this._eventCallbacks[t]=[e]},Z.prototype.hasEventListener=function(t,e){if(t&&e){if(this._eventCallbacks[t]){return-1!=this._eventCallbacks[t].indexOf(e)}}else this._log.warn("hasListener: missing parameters")},Z.prototype.removeEventListener=function(t,e){if(this._eventCallbacks[t]){const i=this._eventCallbacks[t].indexOf(e);-1==i?this._log.warn("eventlistener "+t+" not found..."):this._eventCallbacks[t].slice(i)}},Z.prototype.fireEvent=function(t,e){if(this._eventCallbacks[t])for(let i=0;i<this._eventCallbacks[t].length;i++)this._eventCallbacks[t][i]&&this._eventCallbacks[t][i].cb(e);this.onUiAttrChange&&"onUiAttribsChange"==t&&this.onUiAttrChange(e)},Z.prototype.setEnabled=function(t){this.enabled=t,this.fireEvent("onEnabledChange",t)},Z.prototype.setPortGroup=function(t,e){for(let i=0;i<e.length;i++)e[i]&&e[i].setUiAttribs?e[i].setUiAttribs({group:t}):this._log.error("setPortGroup: invalid port!")},Z.prototype.setUiAxisPorts=function(t,e,i){t&&t.setUiAttribs({axis:"X"}),e&&e.setUiAttribs({axis:"Y"}),i&&i.setUiAttribs({axis:"Z"})},Z.prototype.removePort=function(t){for(let e=0;e<this.portsIn.length;e++)if(this.portsIn[e]==t)return this.portsIn.splice(e,1),this.fireEvent("onUiAttribsChange",{}),void this.fireEvent("onPortRemoved",{})},Z.prototype._checkLinksNeededToWork=function(){},Z.prototype.toWorkNeedsParent=function(t){this.patch.isEditorMode()&&(this._needsParentOp=t)},Z.prototype.toWorkPortsNeedToBeLinked=function(){if(this.patch.isEditorMode())for(let t=0;t<arguments.length;t++)-1==this._needsLinkedToWork.indexOf(arguments[t])&&this._needsLinkedToWork.push(arguments[t])},Z.prototype.toWorkPortsNeedToBeLinkedReset=function(){this.patch.isEditorMode()&&(this._needsLinkedToWork.length=0,this.checkLinkTimeWarnings&&this.checkLinkTimeWarnings())},Z.prototype.initVarPorts=function(){for(let t=0;t<this.portsIn.length;t++)this.portsIn[t].getVariableName()&&this.portsIn[t].setVariable(this.portsIn[t].getVariableName())},Z.prototype.refreshParams=function(){this.patch&&this.patch.isEditorMode()&&this.isCurrentUiOp()&&gui.opParams.show(this)},Z.prototype.isCurrentUiOp=function(){if(this.patch.isEditorMode())return gui.patchView.isCurrentOp(this)}}Z.getNamespaceClassName=function(t){return t?t.startsWith("Ops.Gl")?"gl":t.startsWith("Ops.WebAudio")?"audio":t.startsWith("Ops.Devices")?"devices":t.startsWith("Ops.Html")||t.startsWith("Ops.Sidebar")?"html":t.startsWith("Ops.Math")?"math":t.startsWith("Ops.User")?"user":"default":"default"},Z.isSubpatchOp=function(t){return"Ops.Ui.Patch"==t||"Ops.Ui.SubPatch"==t};const $=function(t,e){if(!t)throw new Error("no cgl");this._log=new _("cgl_texture"),this._cgl=t,this.tex=this._cgl.gl.createTexture(),this.id=b(),this.width=0,this.height=0,this.loading=!1,this.flip=!0,this.flipped=!1,this.shadowMap=!1,this.deleted=!1,this.image=null,this.anisotropic=0,this.filter=$.FILTER_NEAREST,this.wrap=$.WRAP_CLAMP_TO_EDGE,this.texTarget=this._cgl.gl.TEXTURE_2D,e&&e.type&&(this.texTarget=e.type),this.textureType=$.TYPE_DEFAULT,this.unpackAlpha=!0,this._fromData=!0,this.name="unknown",e?(this.name=e.name||this.name,e.isDepthTexture&&(this.textureType=$.TYPE_DEPTH),e.isFloatingPointTexture&&(this.textureType=$.TYPE_FLOAT),"textureType"in e&&(this.textureType=e.textureType),"filter"in e&&(this.filter=e.filter),"wrap"in e&&(this.wrap=e.wrap),"unpackAlpha"in e&&(this.unpackAlpha=e.unpackAlpha),"flip"in e&&(this.flip=e.flip),"shadowMap"in e&&(this.shadowMap=e.shadowMap),"anisotropic"in e&&(this.anisotropic=e.anisotropic)):e={},e.width||(e.width=8),e.height||(e.height=8),this._cgl.profileData.profileTextureNew++,this._cgl.profileData.addHeavyEvent("texture created",this.name,e.width+"x"+e.height),this.setSize(e.width,e.height),this.getInfoOneLine()};$.prototype.isFloatingPoint=function(){return this.textureType==$.TYPE_FLOAT},$.prototype.compareSettings=function(t){return!!t&&(t.width==this.width&&t.height==this.height&&t.filter==this.filter&&t.wrap==this.wrap&&t.textureType==this.textureType&&t.unpackAlpha==this.unpackAlpha&&t.anisotropic==this.anisotropic&&t.shadowMap==this.shadowMap&&t.texTarget==this.texTarget&&t.flip==this.flip)},$.prototype.clone=function(){const t=new $(this._cgl,{name:this.name,filter:this.filter,wrap:this.wrap,textureType:this.textureType,unpackAlpha:this.unpackAlpha,flip:this.flip,width:this.width,height:this.height});return this.compareSettings(t)||(this._log.error("Cloned texture settings do not compare!"),this._log.error(this),this._log.error(t)),t},$.prototype.setSize=function(t,e){if((t!=t||t<=0||!t)&&(t=8),(e!=e||e<=0||!e)&&(e=8),(t>this._cgl.maxTexSize||e>this._cgl.maxTexSize)&&this._log.error("texture size too big! "+t+"x"+e+" / max: "+this._cgl.maxTexSize),t=Math.min(t,this._cgl.maxTexSize),e=Math.min(e,this._cgl.maxTexSize),t=Math.floor(t),e=Math.floor(e),this.width==t&&this.height==e)return;this.width=t,this.height=e,this.deleted=!1,this.shortInfoString=this.getInfoOneLine(),this._cgl.gl.bindTexture(this.texTarget,this.tex),this._cgl.profileData.profileTextureResize++;if(this.textureType!=$.TYPE_FLOAT||this.filter!=$.FILTER_LINEAR||this._cgl.gl.getExtension("OES_texture_float_linear")||(console.warn("this graphics card does not support floating point texture linear interpolation! using NEAREST"),this.filter=$.FILTER_NEAREST),this.textureType==$.TYPE_FLOAT)if(1==this._cgl.glVersion)if(this._cgl.glUseHalfFloatTex){const i=this._cgl.gl.getExtension("OES_texture_half_float");if(1==this._cgl.glVersion&&!i)throw new Error("no half float texture extension");this._cgl.gl.texImage2D(this.texTarget,0,this._cgl.gl.RGBA,t,e,0,this._cgl.gl.RGBA,i.HALF_FLOAT_OES,null)}else{this._cgl.gl.getExtension("OES_texture_float");this._cgl.gl.texImage2D(this.texTarget,0,this._cgl.gl.RGBA,t,e,0,this._cgl.gl.RGBA,this._cgl.gl.FLOAT,null)}else this._cgl.gl.texImage2D(this.texTarget,0,this._cgl.gl.RGBA32F,t,e,0,this._cgl.gl.RGBA,this._cgl.gl.FLOAT,null);else if(this.textureType==$.TYPE_DEPTH)if(1==this._cgl.glVersion){const i=this._cgl.gl.DEPTH_COMPONENT;this._cgl.gl.texImage2D(this.texTarget,0,i,t,e,0,this._cgl.gl.DEPTH_COMPONENT,this._cgl.gl.UNSIGNED_SHORT,null)}else{const i=this._cgl.gl.DEPTH_COMPONENT32F;this._cgl.gl.texImage2D(this.texTarget,0,i,t,e,0,this._cgl.gl.DEPTH_COMPONENT,this._cgl.gl.FLOAT,null)}else this._cgl.gl.texImage2D(this.texTarget,0,this._cgl.gl.RGBA,t,e,0,this._cgl.gl.RGBA,this._cgl.gl.UNSIGNED_BYTE,null);this._setFilter(),this.updateMipMap(),this._cgl.gl.bindTexture(this.texTarget,null)},$.prototype.initFromData=function(t,e,i,s,r){this.filter=s,this.wrap=r,null==s&&(this.filter=$.FILTER_LINEAR),null==r&&(this.wrap=$.CLAMP_TO_EDGE),this.width=e,this.height=i,this._fromData=!0,this.deleted=!1,this._cgl.gl.pixelStorei(this._cgl.gl.UNPACK_FLIP_Y_WEBGL,this.flip),this._cgl.gl.bindTexture(this.texTarget,this.tex),this._cgl.gl.texImage2D(this.texTarget,0,this._cgl.gl.RGBA,e,i,0,this._cgl.gl.RGBA,this._cgl.gl.UNSIGNED_BYTE,t),this._setFilter(),this.updateMipMap(),this._cgl.gl.bindTexture(this.texTarget,null)},$.prototype.updateMipMap=function(){2!=this._cgl.glVersion&&!this.isPowerOfTwo()||this.filter!=$.FILTER_MIPMAP||(this._cgl.gl.generateMipmap(this.texTarget),this._cgl.profileData.profileGenMipMap++)},$.prototype.initTexture=function(t,e){this._cgl.checkFrameStarted("texture inittexture"),this._fromData=!1,this._cgl.gl.pixelStorei(this._cgl.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL,this.unpackAlpha),t.width&&(this.width=t.width),t.height&&(this.height=t.height),e&&(this.filter=e),t.width>this._cgl.maxTexSize&&this._log.error("[cgl_texture] texture size to big!!!",t.width,this._cgl.maxTexSize),t.height>this._cgl.maxTexSize&&this._log.error("[cgl_texture] texture size to big!!!",t.height,this._cgl.maxTexSize),this._cgl.gl.bindTexture(this.texTarget,this.tex),this.deleted=!1,this.flipped=!this.flip,this._cgl.gl.pixelStorei(this._cgl.gl.UNPACK_FLIP_Y_WEBGL,this.flipped),this._cgl.gl.texImage2D(this.texTarget,0,this._cgl.gl.RGBA,this._cgl.gl.RGBA,this._cgl.gl.UNSIGNED_BYTE,t),this._setFilter(),this.updateMipMap(),this._cgl.gl.bindTexture(this.texTarget,null),this._cgl.gl.pixelStorei(this._cgl.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),this.getInfoOneLine()},$.prototype.delete=function(){this.loading||(this.deleted=!0,this.width=0,this.height=0,this._cgl.profileData.profileTextureDelete++,this._cgl.gl.deleteTexture(this.tex),this.image=null,this.tex=null)},$.prototype.isPowerOfTwo=function(){return $.isPowerOfTwo(this.width)&&$.isPowerOfTwo(this.height)},$.prototype.printInfo=function(){console.log(this.getInfo())},$.prototype.getInfoReadable=function(){const t=this.getInfo();let e="";t.name=t.name.substr(0,t.name.indexOf("?rnd="));for(const i in t)e+="* "+i+":  **"+t[i]+"**\n";return e},$.prototype.getInfoOneLine=function(){let t=this.width+"x"+this.height;return this.textureType===CGL.Texture.TYPE_FLOAT&&(t+=" HDR"),this.filter===CGL.Texture.FILTER_NEAREST&&(t+=" nearest"),this.filter===CGL.Texture.FILTER_LINEAR&&(t+=" linear"),this.filter===CGL.Texture.FILTER_MIPMAP&&(t+=" mipmap"),this.wrap===CGL.Texture.WRAP_CLAMP_TO_EDGE&&(t+=" clamp"),this.wrap===CGL.Texture.WRAP_REPEAT&&(t+=" repeat"),this.wrap===CGL.Texture.WRAP_MIRRORED_REPEAT&&(t+=" repeatmir"),this.shortInfoString=t,t},$.prototype.getInfo=function(){const t={};t.name=this.name,t["power of two"]=this.isPowerOfTwo(),t.size=this.width+" x "+this.height;let e=this.texTarget;return this.texTarget==this._cgl.gl.TEXTURE_2D&&(e="TEXTURE_2D"),t.target=e,t.unpackAlpha=this.unpackAlpha,this.textureType==$.TYPE_FLOAT?t.textureType="TYPE_FLOAT":this.textureType==$.TYPE_DEPTH?t.textureType="TYPE_DEPTH":this.textureType==$.TYPE_DEFAULT?t.textureType="TYPE_DEFAULT":t.textureType="UNKNOWN",this.wrap==$.WRAP_CLAMP_TO_EDGE?t.wrap="CLAMP_TO_EDGE":this.wrap==$.WRAP_REPEAT?t.wrap="WRAP_REPEAT":this.wrap==$.WRAP_MIRRORED_REPEAT?t.wrap="WRAP_MIRRORED_REPEAT":t.wrap="UNKNOWN",this.filter==$.FILTER_NEAREST?t.filter="FILTER_NEAREST":this.filter==$.FILTER_LINEAR?t.filter="FILTER_LINEAR":this.filter==$.FILTER_MIPMAP?t.filter="FILTER_MIPMAP":t.filter="UNKNOWN",t},$.prototype._setFilter=function(){if(this._fromData||this._cgl.gl.pixelStorei(this._cgl.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL,this.unpackAlpha),this.shadowMap&&(this._cgl.gl.texParameteri(this._cgl.gl.TEXTURE_2D,this._cgl.gl.TEXTURE_COMPARE_MODE,this._cgl.gl.COMPARE_REF_TO_TEXTURE),this._cgl.gl.texParameteri(this._cgl.gl.TEXTURE_2D,this._cgl.gl.TEXTURE_COMPARE_FUNC,this._cgl.gl.LEQUAL)),this.textureType==$.TYPE_FLOAT&&this.filter==$.FILTER_MIPMAP&&(this.filter=$.FILTER_LINEAR,this._log.stack("texture: HDR and mipmap filtering at the same time is not possible")),1!=this._cgl.glVersion||this.isPowerOfTwo()){if(this.wrap==$.WRAP_CLAMP_TO_EDGE?(this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_S,this._cgl.gl.CLAMP_TO_EDGE),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_T,this._cgl.gl.CLAMP_TO_EDGE)):this.wrap==$.WRAP_REPEAT?(this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_S,this._cgl.gl.REPEAT),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_T,this._cgl.gl.REPEAT)):this.wrap==$.WRAP_MIRRORED_REPEAT&&(this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_S,this._cgl.gl.MIRRORED_REPEAT),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_T,this._cgl.gl.MIRRORED_REPEAT)),this.filter==$.FILTER_NEAREST)this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MAG_FILTER,this._cgl.gl.NEAREST),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MIN_FILTER,this._cgl.gl.NEAREST);else if(this.filter==$.FILTER_LINEAR)this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MIN_FILTER,this._cgl.gl.LINEAR),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MAG_FILTER,this._cgl.gl.LINEAR);else{if(this.filter!=$.FILTER_MIPMAP)throw this._log.log("unknown texture filter!",this.filter),new Error("unknown texture filter!"+this.filter);this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MAG_FILTER,this._cgl.gl.LINEAR),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MIN_FILTER,this._cgl.gl.LINEAR_MIPMAP_LINEAR)}if(this.anisotropic){const t=this._cgl.gl.getExtension("EXT_texture_filter_anisotropic");if(t){const e=this._cgl.gl.getParameter(t.MAX_TEXTURE_MAX_ANISOTROPY_EXT);this._cgl.gl.texParameterf(this._cgl.gl.TEXTURE_2D,t.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(e,this.anisotropic))}}}else this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MAG_FILTER,this._cgl.gl.NEAREST),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_MIN_FILTER,this._cgl.gl.NEAREST),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_S,this._cgl.gl.CLAMP_TO_EDGE),this._cgl.gl.texParameteri(this.texTarget,this._cgl.gl.TEXTURE_WRAP_T,this._cgl.gl.CLAMP_TO_EDGE),this.filter=$.FILTER_NEAREST,this.wrap=$.WRAP_CLAMP_TO_EDGE;this.getInfoOneLine()},$.load=function(t,e,i,s){if(!e)return i({error:!0});let r=null;t.patch.loading.existByName(e)||(r=t.patch.loading.start("texture",e));const n=new $(t);return n.name=e,t.patch.isEditorMode()&&gui.jobs().start({id:"loadtexture"+r,title:"loading texture "+CABLES.basename(e)}),n.image=new Image,n.image.crossOrigin="anonymous",n.loading=!0,s&&s.hasOwnProperty("filter")&&(n.filter=s.filter),s&&s.hasOwnProperty("flip")&&(n.flip=s.flip),s&&s.hasOwnProperty("wrap")&&(n.wrap=s.wrap),s&&s.hasOwnProperty("anisotropic")&&(n.anisotropic=s.anisotropic),s&&s.hasOwnProperty("unpackAlpha")&&(n.unpackAlpha=s.unpackAlpha),n.image.onabort=n.image.onerror=s=>{console.warn("[cgl.texture.load] error loading texture",e,s),n.loading=!1,r&&t.patch.loading.finished(r);i&&i({error:!0},n),t.patch.isEditorMode()&&gui.jobs().finish("loadtexture"+r)},n.image.onload=function(e){t.addNextFrameOnceCallback(()=>{n.initTexture(n.image),r&&t.patch.loading.finished(r),n.loading=!1,t.patch.isEditorMode()&&gui.jobs().finish("loadtexture"+r),i&&i(null,n)})},n.image.src=e,n},$.getTempTexture=function(t){return t||console.error("[getTempTexture] no cgl!"),t.tempTexture||(t.tempTexture=$.getTemporaryTexture(t,256,$.FILTER_LINEAR,$.REPEAT)),t.tempTexture},$.getEmptyTexture=function(t){if(t||console.error("[getEmptyTexture] no cgl!"),t.tempTextureEmpty)return t.tempTextureEmpty;t.tempTextureEmpty=new $(t,{name:"emptyTexture"});const e=new Uint8Array(256);return t.tempTextureEmpty.initFromData(e,8,8,$.FILTER_NEAREST,$.WRAP_REPEAT),t.tempTextureEmpty},$.getRandomTexture=function(t){if(t||console.error("[getRandomTexture] no cgl!"),t.randomTexture)return t.randomTexture;const e=new Uint8Array(262144);for(let t=0;t<65536;t++)e[4*t+0]=255*Math.random(),e[4*t+1]=255*Math.random(),e[4*t+2]=255*Math.random(),e[4*t+3]=255;return t.randomTexture=new $(t),t.randomTexture.initFromData(e,256,256,$.FILTER_NEAREST,$.WRAP_REPEAT),t.randomTexture},$.getBlackTexture=function(t){if(t||this._log.error("[getBlackTexture] no cgl!"),t.blackTexture)return t.blackTexture;const e=new Uint8Array(256);for(let t=0;t<64;t++)e[4*t+0]=e[4*t+1]=e[4*t+2]=0,e[4*t+3]=255;return t.blackTexture=new $(t),t.blackTexture.initFromData(e,8,8,$.FILTER_NEAREST,$.WRAP_REPEAT),t.blackTexture},$.getEmptyCubemapTexture=function(t){const e=[t.gl.TEXTURE_CUBE_MAP_POSITIVE_X,t.gl.TEXTURE_CUBE_MAP_NEGATIVE_X,t.gl.TEXTURE_CUBE_MAP_POSITIVE_Y,t.gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,t.gl.TEXTURE_CUBE_MAP_POSITIVE_Z,t.gl.TEXTURE_CUBE_MAP_NEGATIVE_Z],i=t.gl.createTexture(),s=t.gl.TEXTURE_CUBE_MAP,r=$.FILTER_NEAREST,n=$.WRAP_CLAMP_TO_EDGE;t.profileData.profileTextureNew++,t.gl.bindTexture(s,i),t.profileData.profileTextureResize++;for(let i=0;i<6;i+=1){const r=new Uint8Array(256);t.gl.texImage2D(e[i],0,t.gl.RGBA,8,8,0,t.gl.RGBA,t.gl.UNSIGNED_BYTE,r),t.gl.texParameteri(s,t.gl.TEXTURE_MAG_FILTER,t.gl.NEAREST),t.gl.texParameteri(s,t.gl.TEXTURE_MIN_FILTER,t.gl.NEAREST),t.gl.texParameteri(s,t.gl.TEXTURE_WRAP_S,t.gl.CLAMP_TO_EDGE),t.gl.texParameteri(s,t.gl.TEXTURE_WRAP_T,t.gl.CLAMP_TO_EDGE)}return t.gl.bindTexture(s,null),{id:CABLES.uuid(),tex:i,cubemap:i,width:8,height:8,filter:r,wrap:n,unpackAlpha:!0,flip:!0,_fromData:!0,name:"emptyCubemapTexture",anisotropic:0}},$.getTempGradientTexture=function(t){if(t||console.error("[getTempGradientTexture] no cgl!"),t.tempTextureGradient)return t.tempTextureGradient;const e=new $(t),i=new Uint8Array(262144);for(let t=0;t<256;t++)for(let e=0;e<256;e++)i[4*(e+256*t)+0]=i[4*(e+256*t)+1]=i[4*(e+256*t)+2]=255-t,i[4*(e+256*t)+3]=255;return e.initFromData(i,256,256,$.FILTER_NEAREST,$.WRAP_REPEAT),t.tempTextureGradient=e,e},$.getTemporaryTexture=function(t,e,i,s){const r=new $(t),n=[];for(let t=0;t<e;t++)for(let i=0;i<e;i++)(i+t)%64<32?(n.push(200+t/e*25+i/e*25),n.push(200+t/e*25+i/e*25),n.push(200+t/e*25+i/e*25)):(n.push(40+t/e*25+i/e*25),n.push(40+t/e*25+i/e*25),n.push(40+t/e*25+i/e*25)),n.push(255);const o=new Uint8Array(n);return r.initFromData(o,e,e,i,s),r},$.createFromImage=function(t,e,i){const s=new $(t,i=i||{});return s.flip=!1,s.image=e,s.width=e.width,s.height=e.height,s.initTexture(e,i.filter),s},$.fromImage=function(t,e,i,s){console.error("deprecated texture from image...");const r=new $(t);return r.flip=!1,i&&(r.filter=i),s&&(r.wrap=s),r.image=e,r.initTexture(e),r},$.isPowerOfTwo=function(t){return 1==t||2==t||4==t||8==t||16==t||32==t||64==t||128==t||256==t||512==t||1024==t||2048==t||4096==t||8192==t||16384==t},$.FILTER_NEAREST=0,$.FILTER_LINEAR=1,$.FILTER_MIPMAP=2,$.WRAP_REPEAT=0,$.WRAP_MIRRORED_REPEAT=1,$.WRAP_CLAMP_TO_EDGE=2,$.TYPE_DEFAULT=0,$.TYPE_DEPTH=1,$.TYPE_FLOAT=2;const tt=function(t,e,i,s){this._log=new _("cgl_framebuffer2"),this.Framebuffer2DrawTargetsDefault=null,this.Framebuffer2BlittingFramebuffer=null,this.Framebuffer2FinalFramebuffer=null,this._cgl=t,this._width=0,this._height=0,this._depthRenderbuffer=null,this._frameBuffer=null,this._textureFrameBuffer=null,this._colorRenderbuffers=[],this._drawTargetArray=[],this.Framebuffer2BlittingFramebuffer||(this.Framebuffer2BlittingFramebuffer=t.gl.createFramebuffer()),this.Framebuffer2FinalFramebuffer||(this.Framebuffer2FinalFramebuffer=t.gl.createFramebuffer()),this.Framebuffer2DrawTargetsDefault||(this.Framebuffer2DrawTargetsDefault=[t.gl.COLOR_ATTACHMENT0]),this._options=s||{isFloatingPointTexture:!1},this.name=this._options.name||"unknown",this._cgl.profileData.addHeavyEvent("framebuffer create",this.name),this._options.hasOwnProperty("numRenderBuffers")||(this._options.numRenderBuffers=1),this._options.hasOwnProperty("depth")||(this._options.depth=!0),this._options.hasOwnProperty("clear")||(this._options.clear=!0),this._options.hasOwnProperty("multisampling")||(this._options.multisampling=!1,this._options.multisamplingSamples=0),this._options.multisamplingSamples&&(this._cgl.glSlowRenderer&&(this._options.multisamplingSamples=0),this._cgl.gl.MAX_SAMPLES?this._options.multisamplingSamples=Math.min(this._cgl.maxSamples,this._options.multisamplingSamples):this._options.multisamplingSamples=0),this._options.hasOwnProperty("filter")||(this._options.filter=$.FILTER_LINEAR),this._options.hasOwnProperty("wrap")||(this._options.wrap=$.WRAP_REPEAT),this._numRenderBuffers=this._options.numRenderBuffers,this._colorTextures=[];for(let e=0;e<this._numRenderBuffers;e++)this._colorTextures[e]=new $(t,{name:"fb2 "+this.name+" "+e,isFloatingPointTexture:this._options.isFloatingPointTexture,filter:this._options.filter,wrap:this._options.wrap});let r=$.FILTER_NEAREST;this._options.shadowMap&&(r=$.FILTER_LINEAR);this._options.depth&&(this._textureDepth=new $(t,{name:"fb2 depth "+this.name,isDepthTexture:!0,filter:r,shadowMap:this._options.shadowMap||!1,width:e||512,height:i||512})),t.aborted||this.setSize(e||512,i||512)};tt.prototype.getWidth=function(){return this._width},tt.prototype.getHeight=function(){return this._height},tt.prototype.getGlFrameBuffer=function(){return this._frameBuffer},tt.prototype.getDepthRenderBuffer=function(){return this._depthRenderbuffer},tt.prototype.getTextureColor=function(){return this._colorTextures[0]},tt.prototype.getTextureColorNum=function(t){return this._colorTextures[t]},tt.prototype.getTextureDepth=function(){return this._textureDepth},tt.prototype.setFilter=function(t){for(let e=0;e<this._numRenderBuffers;e++)this._colorTextures[e].filter=t,this._colorTextures[e].setSize(this._width,this._height)},tt.prototype.delete=tt.prototype.dispose=function(){let t=0;for(t=0;t<this._numRenderBuffers;t++)this._colorTextures[t].delete();for(this._textureDepth&&this._textureDepth.delete(),t=0;t<this._numRenderBuffers;t++)this._cgl.gl.deleteRenderbuffer(this._colorRenderbuffers[t]);this._cgl.gl.deleteRenderbuffer(this._depthRenderbuffer),this._cgl.gl.deleteFramebuffer(this._frameBuffer),this._cgl.gl.deleteFramebuffer(this._textureFrameBuffer)},tt.prototype.setSize=function(t,e){this._cgl.profileData.addHeavyEvent("framebuffer resize",this.name);let i=0;if(this._width=Math.floor(t),this._height=Math.floor(e),this._width=Math.min(this._width,this._cgl.maxTexSize),this._height=Math.min(this._height,this._cgl.maxTexSize),this._cgl.profileData.profileFrameBuffercreate++,this._frameBuffer){for(i=0;i<this._numRenderBuffers;i++)this._cgl.gl.deleteRenderbuffer(this._colorRenderbuffers[i]);this._cgl.gl.deleteRenderbuffer(this._depthRenderbuffer),this._cgl.gl.deleteFramebuffer(this._frameBuffer),this._cgl.gl.deleteFramebuffer(this._textureFrameBuffer)}this._frameBuffer=this._cgl.gl.createFramebuffer(),this._textureFrameBuffer=this._cgl.gl.createFramebuffer();const s=this._options.depth;for(i=0;i<this._numRenderBuffers;i++)this._colorTextures[i].setSize(this._width,this._height);for(i=0;i<this._numRenderBuffers;i++){const t=this._cgl.gl.createRenderbuffer();this._cgl.gl.getExtension("EXT_color_buffer_float");this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this._frameBuffer),this._cgl.gl.bindRenderbuffer(this._cgl.gl.RENDERBUFFER,t),this._options.isFloatingPointTexture?this._options.multisampling&&this._options.multisamplingSamples?this._cgl.gl.renderbufferStorageMultisample(this._cgl.gl.RENDERBUFFER,this._options.multisamplingSamples,this._cgl.gl.RGBA32F,this._width,this._height):this._cgl.gl.renderbufferStorage(this._cgl.gl.RENDERBUFFER,this._cgl.gl.RGBA32F,this._width,this._height):this._options.multisampling&&this._options.multisamplingSamples?this._cgl.gl.renderbufferStorageMultisample(this._cgl.gl.RENDERBUFFER,this._options.multisamplingSamples,this._cgl.gl.RGBA8,this._width,this._height):this._cgl.gl.renderbufferStorage(this._cgl.gl.RENDERBUFFER,this._cgl.gl.RGBA8,this._width,this._height),this._cgl.gl.framebufferRenderbuffer(this._cgl.gl.FRAMEBUFFER,this._cgl.gl.COLOR_ATTACHMENT0+i,this._cgl.gl.RENDERBUFFER,t),this._colorRenderbuffers[i]=t}for(this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this._textureFrameBuffer),i=0;i<this._numRenderBuffers;i++)this._cgl.gl.framebufferTexture2D(this._cgl.gl.FRAMEBUFFER,this._cgl.gl.COLOR_ATTACHMENT0+i,this._cgl.gl.TEXTURE_2D,this._colorTextures[i].tex,0);this._options.depth&&this._cgl.gl.framebufferTexture2D(this._cgl.gl.FRAMEBUFFER,this._cgl.gl.DEPTH_ATTACHMENT,this._cgl.gl.TEXTURE_2D,this._textureDepth.tex,0),this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this._frameBuffer);let r=this._cgl.gl.DEPTH_COMPONENT32F;for(this._cgl.glSlowRenderer&&(r=this._cgl.gl.DEPTH_COMPONENT16),s&&(this._textureDepth.setSize(this._width,this._height),this._depthRenderbuffer=this._cgl.gl.createRenderbuffer(),this._cgl.gl.bindRenderbuffer(this._cgl.gl.RENDERBUFFER,this._depthRenderbuffer),this._options.isFloatingPointTexture,this._options.multisampling?this._cgl.gl.renderbufferStorageMultisample(this._cgl.gl.RENDERBUFFER,this._options.multisamplingSamples,r,this._width,this._height):this._cgl.gl.renderbufferStorage(this._cgl.gl.RENDERBUFFER,r,this._width,this._height),this._cgl.gl.framebufferRenderbuffer(this._cgl.gl.FRAMEBUFFER,this._cgl.gl.DEPTH_ATTACHMENT,this._cgl.gl.RENDERBUFFER,this._depthRenderbuffer)),this._drawTargetArray.length=0,i=0;i<this._numRenderBuffers;i++)this._drawTargetArray.push(this._cgl.gl.COLOR_ATTACHMENT0+i);this._cgl.gl.isFramebuffer(this._textureFrameBuffer)||this._this._log.warn("invalid framebuffer");const n=this._cgl.gl.checkFramebufferStatus(this._cgl.gl.FRAMEBUFFER);if(n!=this._cgl.gl.FRAMEBUFFER_COMPLETE)switch(this._log.error("framebuffer incomplete: "+this.name,this),n){case this._cgl.gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:throw this._log.warn("FRAMEBUFFER_INCOMPLETE_ATTACHMENT...",this),new Error("Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_ATTACHMENT");case this._cgl.gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:throw this._log.warn("FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT"),new Error("Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT");case this._cgl.gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:throw this._log.warn("FRAMEBUFFER_INCOMPLETE_DIMENSIONS"),new Error("Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_DIMENSIONS");case this._cgl.gl.FRAMEBUFFER_UNSUPPORTED:throw this._log.warn("FRAMEBUFFER_UNSUPPORTED"),new Error("Incomplete framebuffer: FRAMEBUFFER_UNSUPPORTED");default:throw this._log.warn("incomplete framebuffer",n),new Error("Incomplete framebuffer: "+n)}this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,null),this._cgl.gl.bindRenderbuffer(this._cgl.gl.RENDERBUFFER,null)},tt.prototype.renderStart=function(){this._cgl.checkFrameStarted("fb2 renderstart"),this._cgl.pushModelMatrix(),this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this._frameBuffer),this._cgl.pushGlFrameBuffer(this._frameBuffer),this._cgl.pushFrameBuffer(this),this._cgl.pushPMatrix(),this._cgl.gl.viewport(0,0,this._width,this._height),this._cgl.gl.drawBuffers(this._drawTargetArray),this._options.clear&&(this._cgl.gl.clearColor(0,0,0,0),this._cgl.gl.clear(this._cgl.gl.COLOR_BUFFER_BIT|this._cgl.gl.DEPTH_BUFFER_BIT))},tt.prototype.renderEnd=function(){if(this._cgl.popPMatrix(),this._cgl.profileData.profileFramebuffer++,this._numRenderBuffers<=1)this._cgl.gl.bindFramebuffer(this._cgl.gl.READ_FRAMEBUFFER,this._frameBuffer),this._cgl.gl.bindFramebuffer(this._cgl.gl.DRAW_FRAMEBUFFER,this._textureFrameBuffer),this._cgl.gl.clearBufferfv(this._cgl.gl.COLOR,0,[0,0,0,1]),this._cgl.gl.blitFramebuffer(0,0,this._width,this._height,0,0,this._width,this._height,this._cgl.gl.COLOR_BUFFER_BIT|this._cgl.gl.DEPTH_BUFFER_BIT,this._cgl.gl.NEAREST);else{this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this.Framebuffer2BlittingFramebuffer),this._cgl.gl.framebufferRenderbuffer(this._cgl.gl.FRAMEBUFFER,this._cgl.gl.DEPTH_ATTACHMENT,this._cgl.gl.RENDERBUFFER,this._depthRenderbuffer),this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this.Framebuffer2FinalFramebuffer),this._cgl.gl.framebufferTexture2D(this._cgl.gl.FRAMEBUFFER,this._cgl.gl.DEPTH_ATTACHMENT,this._cgl.gl.TEXTURE_2D,this._textureDepth.tex,0);for(let t=0;t<this._numRenderBuffers;t++){this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this.Framebuffer2BlittingFramebuffer),this._cgl.gl.framebufferRenderbuffer(this._cgl.gl.FRAMEBUFFER,this._cgl.gl.COLOR_ATTACHMENT0,this._cgl.gl.RENDERBUFFER,this._colorRenderbuffers[t]),this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this.Framebuffer2FinalFramebuffer),this._cgl.gl.framebufferTexture2D(this._cgl.gl.FRAMEBUFFER,this._cgl.gl.COLOR_ATTACHMENT0,this._cgl.gl.TEXTURE_2D,this._colorTextures[t].tex,0),this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,null),this._cgl.gl.bindFramebuffer(this._cgl.gl.READ_FRAMEBUFFER,this.Framebuffer2BlittingFramebuffer),this._cgl.gl.bindFramebuffer(this._cgl.gl.DRAW_FRAMEBUFFER,this.Framebuffer2FinalFramebuffer),this._cgl.gl.clearBufferfv(this._cgl.gl.COLOR,0,[0,0,0,1]);let e=this._cgl.gl.COLOR_BUFFER_BIT;0==t&&(e|=this._cgl.gl.DEPTH_BUFFER_BIT),this._cgl.gl.blitFramebuffer(0,0,this._width,this._height,0,0,this._width,this._height,e,this._cgl.gl.NEAREST)}}if(this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this._cgl.popGlFrameBuffer()),this._cgl.popFrameBuffer(),this._cgl.popModelMatrix(),this._cgl.resetViewPort(),this._colorTextures[0].filter==$.FILTER_MIPMAP)for(let t=0;t<this._numRenderBuffers;t++)this._cgl.gl.bindTexture(this._cgl.gl.TEXTURE_2D,this._colorTextures[t].tex),this._colorTextures[t].updateMipMap(),this._cgl.gl.bindTexture(this._cgl.gl.TEXTURE_2D,null)};class et{constructor(t){this._init(),this._first=!0,this._wireMesh=null,t&&this.apply(t)}_init(){this._max=[-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE],this._min=[Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE],this._center=[0,0,0],this._size=[0,0,0],this._maxAxis=0,this._first=!0}get maxAxis(){return this._maxAxis||1}get size(){return this._size}get center(){return this._center}get x(){return this._center[0]}get y(){return this._center[1]}get z(){return this._center[2]}get minX(){return this._min[0]}get minY(){return this._min[1]}get minZ(){return this._min[2]}get maxX(){return this._max[0]}get maxY(){return this._max[1]}get maxZ(){return this._max[2]}apply(t,e){if(t){if(t instanceof et){const e=t;this.applyPos(e.maxX,e.maxY,e.maxZ),this.applyPos(e.minX,e.minY,e.minZ)}else for(let e=0;e<t.vertices.length;e+=3)t.vertices[e+0]!=t.vertices[e+0]&&null==t.vertices[e+0]||this.applyPos(t.vertices[e+0],t.vertices[e+1],t.vertices[e+2]);this.calcCenterSize()}}copy(){return new et(this)}get changed(){return!(this._max[0]==-Number.MAX_VALUE&&this._max[1]==-Number.MAX_VALUE&&this._max[2]==-Number.MAX_VALUE)}applyPos(t,e,i){if(t!=Number.MAX_VALUE&&t!=-Number.MAX_VALUE&&e!=Number.MAX_VALUE&&e!=-Number.MAX_VALUE&&i!=Number.MAX_VALUE&&i!=-Number.MAX_VALUE&&CABLES.UTILS.isNumeric(t)&&CABLES.UTILS.isNumeric(e)&&CABLES.UTILS.isNumeric(i)){if(this._first)return this._max[0]=t,this._max[1]=e,this._max[2]=i,this._min[0]=t,this._min[1]=e,this._min[2]=i,void(this._first=!1);this._max[0]=Math.max(this._max[0],t),this._max[1]=Math.max(this._max[1],e),this._max[2]=Math.max(this._max[2],i),this._min[0]=Math.min(this._min[0],t),this._min[1]=Math.min(this._min[1],e),this._min[2]=Math.min(this._min[2],i)}}calcCenterSize(){this._first||(this._size[0]=this._max[0]-this._min[0],this._size[1]=this._max[1]-this._min[1],this._size[2]=this._max[2]-this._min[2],this._center[0]=(this._min[0]+this._max[0])/2,this._center[1]=(this._min[1]+this._max[1])/2,this._center[2]=(this._min[2]+this._max[2])/2,this._maxAxis=Math.max(this._size[2],Math.max(this._size[0],this._size[1])))}mulMat4(t){this._first&&(this._max[0]=0,this._max[1]=0,this._max[2]=0,this._min[0]=0,this._min[1]=0,this._min[2]=0,this._first=!1),vec3.transformMat4(this._max,this._max,t),vec3.transformMat4(this._min,this._min,t),this.calcCenterSize()}render(t,e){this._wireMesh||(this._wireMesh=new CGL.WireCube(t)),t.pushModelMatrix(),mat4.translate(t.mMatrix,t.mMatrix,this._center),this._wireMesh.render(t,this._size[0]/2,this._size[1]/2,this._size[2]/2),t.popModelMatrix()}}const it=function(t){this.name=t||"unknown",this._log=new _("cgl_geometry"),this.faceVertCount=3,this._vertices=[],this.verticesIndices=[],this.texCoords=new Float32Array,this.texCoordsIndices=[],this.vertexNormals=[],this.tangents=[],this.biTangents=[],this.barycentrics=[],this.morphTargets=[],this.vertexColors=[],this._attributes={},this.glPrimitive=null,Object.defineProperty(this,"vertices",{get(){return this._vertices},set(t){this.setVertices(t)}})};it.prototype.clear=function(){this.vertices=new Float32Array([]),this.verticesIndices.length=0,this.texCoords=new Float32Array([]),this.texCoordsIndices.length=0,this.vertexNormals=new Float32Array([])},it.prototype.getAttributes=function(){return this._attributes},it.prototype.getAttribute=function(t){for(const e in this._attributes)if(this._attributes[e].name==t)return this._attributes[e];return null},it.prototype.setAttribute=function(t,e,i){let s="";1==i?s="float":2==i?s="vec2":3==i?s="vec3":4==i&&(s="vec4");const r={name:t,data:e,itemSize:i,type:s};this._attributes[t]=r},it.prototype.setVertices=function(t){t instanceof Float32Array?this._vertices=t:this._vertices=new Float32Array(t)},it.prototype.setTexCoords=function(t){t instanceof Float32Array?this.texCoords=t:this.texCoords=new Float32Array(t)},it.prototype.calcNormals=function(t){t||this.unIndex(),this.calculateNormals({})},it.prototype.setPointVertices=function(t){if(t.length%3==0){t instanceof Float32Array?this.vertices=t:this.vertices=new Float32Array(t),this.texCoords instanceof Float32Array||(this.texCoords=new Float32Array(t.length/3*2)),this.verticesIndices.length=t.length/3;for(let e=0;e<t.length/3;e++)this.verticesIndices[e]=e,this.texCoords[2*e]=0,this.texCoords[2*e+1]=0}else this._log.error("SetPointVertices: Array must be multiple of three.")},it.prototype.merge=function(t){if(!t)return;const e=this.verticesIndices.length,i=this.vertices.length/3;this.verticesIndices.length=this.verticesIndices.length+t.verticesIndices.length;for(let s=0;s<t.verticesIndices.length;s++)this.verticesIndices[e+s]=t.verticesIndices[s]+i;this.vertices=g.float32Concat(this.vertices,t.vertices),this.texCoords=g.float32Concat(this.texCoords,t.texCoords),this.vertexNormals=g.float32Concat(this.vertexNormals,t.vertexNormals),this.tangents=g.float32Concat(this.tangents,t.tangents),this.biTangents=g.float32Concat(this.biTangents,t.biTangents)},it.prototype.copy=function(){let t=0;const e=new it(this.name+" copy");if(e.faceVertCount=this.faceVertCount,e.setVertices(this._vertices.slice(0)),this.verticesIndices)for(e.verticesIndices.length=this.verticesIndices.length,t=0;t<this.verticesIndices.length;t++)e.verticesIndices[t]=this.verticesIndices[t];for(e.texCoords=new Float32Array(this.texCoords.length),t=0;t<this.texCoords.length;t++)e.texCoords[t]=this.texCoords[t];for(e.texCoordsIndices.length=this.texCoordsIndices.length,t=0;t<this.texCoordsIndices.length;t++)e.texCoordsIndices[t]=this.texCoordsIndices[t];for(e.vertexNormals=new Float32Array(this.vertexNormals.length),t=0;t<this.vertexNormals.length;t++)e.vertexNormals[t]=this.vertexNormals[t];if(this.tangents)for(e.tangents=[],e.tangents.length=this.tangents.length,t=0;t<this.tangents.length;t++)e.tangents[t]=this.tangents[t];if(this.biTangents)for(e.biTangents=[],e.biTangents.length=this.biTangents.length,t=0;t<this.biTangents.length;t++)e.biTangents[t]=this.biTangents[t];for(e.barycentrics.length=this.barycentrics.length,t=0;t<this.barycentrics.length;t++)e.barycentrics[t]=this.barycentrics[t];for(e.morphTargets.length=this.morphTargets.length,t=0;t<this.morphTargets.length;t++)e.morphTargets[t]=this.morphTargets[t];for(e.vertexColors.length=this.vertexColors.length,t=0;t<this.vertexColors.length;t++)e.vertexColors[t]=this.vertexColors[t];return e},it.prototype.calculateNormals=function(t){const e=vec3.create(),i=vec3.create(),s=vec3.create();function r(r){return vec3.subtract(e,r[0],r[1]),vec3.subtract(i,r[0],r[2]),vec3.cross(s,e,i),vec3.normalize(s,s),t&&t.forceZUp&&s[2]<0&&(s[0]*=-1,s[1]*=-1,s[2]*=-1),s}this.getVertexVec=function(t){const e=[0,0,0];return e[0]=this.vertices[3*t+0],e[1]=this.vertices[3*t+1],e[2]=this.vertices[3*t+2],e},this.vertexNormals instanceof Float32Array&&this.vertexNormals.length==this.vertices.length||(this.vertexNormals=new Float32Array(this.vertices.length));for(let t=0;t<this.vertices.length;t++)this.vertexNormals[t]=0;if(this.isIndexed()){const t=[];t.length=this.verticesIndices.length/3;for(let e=0;e<this.verticesIndices.length;e+=3){const i=[this.getVertexVec(this.verticesIndices[e+0]),this.getVertexVec(this.verticesIndices[e+1]),this.getVertexVec(this.verticesIndices[e+2])];t[e/3]=r(i),this.vertexNormals[3*this.verticesIndices[e+0]+0]+=t[e/3][0],this.vertexNormals[3*this.verticesIndices[e+0]+1]+=t[e/3][1],this.vertexNormals[3*this.verticesIndices[e+0]+2]+=t[e/3][2],this.vertexNormals[3*this.verticesIndices[e+1]+0]+=t[e/3][0],this.vertexNormals[3*this.verticesIndices[e+1]+1]+=t[e/3][1],this.vertexNormals[3*this.verticesIndices[e+1]+2]+=t[e/3][2],this.vertexNormals[3*this.verticesIndices[e+2]+0]+=t[e/3][0],this.vertexNormals[3*this.verticesIndices[e+2]+1]+=t[e/3][1],this.vertexNormals[3*this.verticesIndices[e+2]+2]+=t[e/3][2]}for(let t=0;t<this.verticesIndices.length;t+=3)for(let e=0;e<3;e++){const i=[this.vertexNormals[3*this.verticesIndices[t+e]+0],this.vertexNormals[3*this.verticesIndices[t+e]+1],this.vertexNormals[3*this.verticesIndices[t+e]+2]];vec3.normalize(i,i),this.vertexNormals[3*this.verticesIndices[t+e]+0]=i[0],this.vertexNormals[3*this.verticesIndices[t+e]+1]=i[1],this.vertexNormals[3*this.verticesIndices[t+e]+2]=i[2]}}else{const t=[];for(let e=0;e<this.vertices.length;e+=9){const i=r([[this.vertices[e+0],this.vertices[e+1],this.vertices[e+2]],[this.vertices[e+3],this.vertices[e+4],this.vertices[e+5]],[this.vertices[e+6],this.vertices[e+7],this.vertices[e+8]]]);t.push(i[0],i[1],i[2],i[0],i[1],i[2],i[0],i[1],i[2])}this.vertexNormals=t}},it.prototype.calcTangentsBitangents=function(){if(!this.vertices.length)return void this._log.error("Cannot calculate tangents/bitangents without vertices.");if(!this.vertexNormals.length)return void this._log.error("Cannot calculate tangents/bitangents without normals.");if(!this.texCoords.length){const t=this.vertices.length/3*2;this.texCoords=new Float32Array(t);for(let e=0;e<t;e+=1)this.texCoords[e]=0}if(!this.verticesIndices||!this.verticesIndices.length)return void this._log.error("Cannot calculate tangents/bitangents without vertex indices.");if(this.verticesIndices.length%3!=0)return void this._log.error("Vertex indices mismatch!");const t=this.verticesIndices.length/3,e=this.vertices.length/3;this.tangents=new Float32Array(this.vertexNormals.length),this.biTangents=new Float32Array(this.vertexNormals.length);const i=[];i.length=2*e;const s=vec3.create(),r=vec3.create(),n=vec3.create(),o=vec2.create(),h=vec2.create(),a=vec2.create(),l=vec3.create(),c=vec3.create();for(let u=0;u<t;u+=1){const t=this.verticesIndices[3*u],_=this.verticesIndices[3*u+1],p=this.verticesIndices[3*u+2];vec3.set(s,this.vertices[3*t],this.vertices[3*t+1],this.vertices[3*t+2]),vec3.set(r,this.vertices[3*_],this.vertices[3*_+1],this.vertices[3*_+2]),vec3.set(n,this.vertices[3*p],this.vertices[3*p+1],this.vertices[3*p+2]),vec2.set(o,this.texCoords[2*t],this.texCoords[2*t+1]),vec2.set(h,this.texCoords[2*_],this.texCoords[2*_+1]),vec2.set(a,this.texCoords[2*p],this.texCoords[2*p+1]);const g=r[0]-s[0],d=n[0]-s[0],f=r[1]-s[1],m=n[1]-s[1],E=r[2]-s[2],T=n[2]-s[2],b=h[0]-o[0],A=a[0]-o[0],y=h[1]-o[1],x=a[1]-o[1],v=1/(b*x-A*y);vec3.set(l,(x*g-y*d)*v,(x*f-y*m)*v,(x*E-y*T)*v),vec3.set(c,(b*d-A*g)*v,(b*m-A*f)*v,(b*T-A*E)*v),i[t]=l,i[_]=l,i[p]=l,i[t+e]=c,i[_+e]=c,i[p+e]=c}const u=vec3.create(),_=vec3.create(),p=vec3.create(),g=vec3.create(),d=vec3.create(),f=vec3.create(),m=vec3.create(),E=vec3.create();for(let t=0;t<e;t+=1){if(!i[t])continue;vec3.set(u,this.vertexNormals[3*t],this.vertexNormals[3*t+1],this.vertexNormals[3*t+2]),vec3.set(_,i[t][0],i[t][1],i[t][2]);const s=vec3.dot(u,_);vec3.scale(d,u,s),vec3.subtract(f,_,d),vec3.normalize(E,f),vec3.cross(m,u,_);vec3.dot(m,i[t+e]);const r=1;vec3.scale(p,E,1/r),vec3.cross(g,u,p),this.tangents[3*t+0]=p[0],this.tangents[3*t+1]=p[1],this.tangents[3*t+2]=p[2],this.biTangents[3*t+0]=g[0],this.biTangents[3*t+1]=g[1],this.biTangents[3*t+2]=g[2]}},it.prototype.isIndexed=function(){return 0!=this.verticesIndices.length},it.prototype.unIndex=function(t,e){const i=[],s=[],r=[],n=[],o=[],h=[];let a=0,l=0;for(l=0;l<this.verticesIndices.length;l+=3)i.push(this.vertices[3*this.verticesIndices[l+0]+0],this.vertices[3*this.verticesIndices[l+0]+1],this.vertices[3*this.verticesIndices[l+0]+2]),n.push(this.vertexNormals[3*this.verticesIndices[l+0]+0],this.vertexNormals[3*this.verticesIndices[l+0]+1],this.vertexNormals[3*this.verticesIndices[l+0]+2]),this.tangents.length>0&&o.push(this.tangents[3*this.verticesIndices[l+0]+0],this.tangents[3*this.verticesIndices[l+0]+1],this.tangents[3*this.verticesIndices[l+0]+2]),this.biTangents.length>0&&h.push(this.biTangents[3*this.verticesIndices[l+0]+0],this.biTangents[3*this.verticesIndices[l+0]+1],this.biTangents[3*this.verticesIndices[l+0]+2]),this.texCoords?r.push(this.texCoords[2*this.verticesIndices[l+0]+0],this.texCoords[2*this.verticesIndices[l+0]+1]):r.push(0,0),s.push(a),a++,i.push(this.vertices[3*this.verticesIndices[l+1]+0],this.vertices[3*this.verticesIndices[l+1]+1],this.vertices[3*this.verticesIndices[l+1]+2]),n.push(this.vertexNormals[3*this.verticesIndices[l+1]+0],this.vertexNormals[3*this.verticesIndices[l+1]+1],this.vertexNormals[3*this.verticesIndices[l+1]+2]),this.tangents.length>0&&o.push(this.tangents[3*this.verticesIndices[l+1]+0],this.tangents[3*this.verticesIndices[l+1]+1],this.tangents[3*this.verticesIndices[l+1]+2]),this.biTangents.length>0&&h.push(this.biTangents[3*this.verticesIndices[l+1]+0],this.biTangents[3*this.verticesIndices[l+1]+1],this.biTangents[3*this.verticesIndices[l+1]+2]),this.texCoords?r.push(this.texCoords[2*this.verticesIndices[l+1]+0],this.texCoords[2*this.verticesIndices[l+1]+1]):r.push(0,0),s.push(a),a++,i.push(this.vertices[3*this.verticesIndices[l+2]+0],this.vertices[3*this.verticesIndices[l+2]+1],this.vertices[3*this.verticesIndices[l+2]+2]),n.push(this.vertexNormals[3*this.verticesIndices[l+2]+0],this.vertexNormals[3*this.verticesIndices[l+2]+1],this.vertexNormals[3*this.verticesIndices[l+2]+2]),this.tangents.length>0&&o.push(this.tangents[3*this.verticesIndices[l+2]+0],this.tangents[3*this.verticesIndices[l+2]+1],this.tangents[3*this.verticesIndices[l+2]+2]),this.biTangents.length>0&&h.push(this.biTangents[3*this.verticesIndices[l+2]+0],this.biTangents[3*this.verticesIndices[l+2]+1],this.biTangents[3*this.verticesIndices[l+2]+2]),this.texCoords?r.push(this.texCoords[2*this.verticesIndices[l+2]+0],this.texCoords[2*this.verticesIndices[l+2]+1]):r.push(0,0),s.push(a),a++;this.vertices=i,this.texCoords=r,this.vertexNormals=n,o.length>0&&(this.tangents=o),h.length>0&&(this.biTangents=h),this.verticesIndices.length=0,t&&(this.verticesIndices=s),e||this.calculateNormals()},it.prototype.calcBarycentric=function(){this.barycentrics.length=this.vertices.length;let t=0;for(t=0;t<this.vertices.length;t++)this.barycentrics[t]=0;let e=0;for(t=0;t<this.vertices.length;t+=3)this.barycentrics[t+e]=1,e++,3==e&&(e=0)},it.prototype.getBounds=function(){return new et(this)},it.prototype.center=function(t,e,i){void 0===t&&(t=!0,e=!0,i=!0);let s=0;const r=this.getBounds(),n=[r.minX+(r.maxX-r.minX)/2,r.minY+(r.maxY-r.minY)/2,r.minZ+(r.maxZ-r.minZ)/2];for(s=0;s<this.vertices.length;s+=3)this.vertices[s+0]==this.vertices[s+0]&&(t&&(this.vertices[s+0]-=n[0]),e&&(this.vertices[s+1]-=n[1]),i&&(this.vertices[s+2]-=n[2]));return n},it.prototype.mapTexCoords2d=function(){const t=this.getBounds(),e=this.vertices.length/3;this.texCoords=new Float32Array(2*e);for(let i=0;i<e;i++){const e=this.vertices[3*i+0],s=this.vertices[3*i+1];this.texCoords[2*i+0]=e/(t.maxX-t.minX)+.5,this.texCoords[2*i+1]=1-s/(t.maxY-t.minY)+.5}},it.buildFromFaces=function(t,e){const i=[],s=[];for(let e=0;e<t.length;e+=3){const r=t[e+0],n=t[e+1],o=t[e+2],h=[-1,-1,-1];for(let t=0;t<i;t+=3)i[t+0]==r[0]&&i[t+1]==r[1]&&i[t+2]==r[2]&&(h[0]=t/3),i[t+0]==n[0]&&i[t+1]==n[1]&&i[t+2]==n[2]&&(h[1]=t/3),i[t+0]==o[0]&&i[t+1]==o[1]&&i[t+2]==o[2]&&(h[2]=t/3);-1==h[0]&&(i.push(r[0],r[1],r[2]),h[0]=(i.length-1)/3),-1==h[1]&&(i.push(n[0],n[1],n[2]),h[1]=(i.length-1)/3),-1==h[2]&&(i.push(o[0],o[1],o[2]),h[2]=(i.length-1)/3),s.push(parseInt(h[0],10)),s.push(parseInt(h[1],10)),s.push(parseInt(h[2],10))}const r=new it(this.name);return r.name=e,r.vertices=i,r.verticesIndices=s,r},it.json2geom=function(t){const e=new it("jsonMeshGeom");if(e.verticesIndices=[],e.vertices=t.vertices||[],e.vertexNormals=t.normals||[],e.vertexColors=t.colors||[],e.tangents=t.tangents||[],e.biTangents=t.bitangents||[],t.texturecoords&&e.setTexCoords(t.texturecoords[0]),t.vertices_b64&&(e.vertices=new Float32Array(u(t.vertices_b64))),t.normals_b64&&(e.vertexNormals=new Float32Array(u(t.normals_b64))),t.tangents_b64&&(e.tangents=new Float32Array(u(t.tangents_b64))),t.bitangents_b64&&(e.biTangents=new Float32Array(u(t.bitangents_b64))),t.texturecoords_b64&&e.setTexCoords(new Float32Array(u(t.texturecoords_b64[0]))),t.faces_b64)e.verticesIndices=new Uint32Array(u(t.faces_b64));else{e.verticesIndices.length=3*t.faces.length;for(let i=0;i<t.faces.length;i++)e.verticesIndices[3*i]=t.faces[i][0],e.verticesIndices[3*i+1]=t.faces[i][1],e.verticesIndices[3*i+2]=t.faces[i][2]}return e};const st=function(t,e,i,s,r,n,o,h,a,l){if(this._loc=-1,this._log=new _("cgl_uniform"),this._type=e,this._cgl=t._cgl,this._name=i,this._shader=t,this._value=1e-5,this._oldValue=null,this._port=null,this._structName=a,this._structUniformName=h,this._propertyName=l,this._shader._addUniform(this),this.needsUpdate=!0,this.shaderType=null,this.comment=null,"f"==e)this.set=this.setValue=this.setValueF.bind(this),this.updateValue=this.updateValueF.bind(this);else if("f[]"==e)this.set=this.setValue=this.setValueArrayF.bind(this),this.updateValue=this.updateValueArrayF.bind(this);else if("2f[]"==e)this.set=this.setValue=this.setValueArray2F.bind(this),this.updateValue=this.updateValueArray2F.bind(this);else if("3f[]"==e)this.set=this.setValue=this.setValueArray3F.bind(this),this.updateValue=this.updateValueArray3F.bind(this);else if("4f[]"==e)this.set=this.setValue=this.setValueArray4F.bind(this),this.updateValue=this.updateValueArray4F.bind(this);else if("i"==e)this.set=this.setValue=this.setValueI.bind(this),this.updateValue=this.updateValueI.bind(this);else if("2i"==e)this.set=this.setValue=this.setValue2I.bind(this),this.updateValue=this.updateValue2I.bind(this);else if("3i"==e)this.set=this.setValue=this.setValue3I.bind(this),this.updateValue=this.updateValue3I.bind(this);else if("4i"==e)this.set=this.setValue=this.setValue4I.bind(this),this.updateValue=this.updateValue4I.bind(this);else if("b"==e)this.set=this.setValue=this.setValueBool.bind(this),this.updateValue=this.updateValueBool.bind(this);else if("4f"==e)this.set=this.setValue=this.setValue4F.bind(this),this.updateValue=this.updateValue4F.bind(this);else if("3f"==e)this.set=this.setValue=this.setValue3F.bind(this),this.updateValue=this.updateValue3F.bind(this);else if("2f"==e)this.set=this.setValue=this.setValue2F.bind(this),this.updateValue=this.updateValue2F.bind(this);else if("t"==e)this.set=this.setValue=this.setValueT.bind(this),this.updateValue=this.updateValueT.bind(this);else if("tc"==e)this.set=this.setValue=this.setValueT.bind(this),this.updateValue=this.updateValueT.bind(this);else if("t[]"==e)this.set=this.setValue=this.setValueArrayT.bind(this),this.updateValue=this.updateValueArrayT.bind(this);else{if("m4"!=e&&"m4[]"!=e)throw new Error("Unknown uniform type");this.set=this.setValue=this.setValueM4.bind(this),this.updateValue=this.updateValueM4.bind(this)}"object"==typeof s&&s instanceof D?(this._port=s,this._value=this._port.get(),r&&n&&o?(r instanceof D&&n instanceof D&&o instanceof D||this._log.error("[cgl_uniform] mixed port/value parameter for vec4 ",this._name),this._value=[0,0,0,0],this._port2=r,this._port3=n,this._port4=o,this._port.on("change",this.updateFromPort4f.bind(this)),this._port2.on("change",this.updateFromPort4f.bind(this)),this._port3.on("change",this.updateFromPort4f.bind(this)),this._port4.on("change",this.updateFromPort4f.bind(this)),this.updateFromPort4f()):r&&n?(r instanceof D&&n instanceof D||this._log.error("[cgl_uniform] mixed port/value parameter for vec4 ",this._name),this._value=[0,0,0],this._port2=r,this._port3=n,this._port.on("change",this.updateFromPort3f.bind(this)),this._port2.on("change",this.updateFromPort3f.bind(this)),this._port3.on("change",this.updateFromPort3f.bind(this)),this.updateFromPort3f()):r?(r instanceof D||this._log.error("[cgl_uniform] mixed port/value parameter for vec4 ",this._name),this._value=[0,0],this._port2=r,this._port.on("change",this.updateFromPort2f.bind(this)),this._port2.on("change",this.updateFromPort2f.bind(this)),this.updateFromPort2f()):this._port.on("change",this.updateFromPort.bind(this))):this._value=s,this.setValue(this._value),this.needsUpdate=!0};st.prototype.copy=function(t){const e=new st(t,this._type,this._name,this._value,this._port2,this._port3,this._port4,this._structUniformName,this._structName,this._propertyName);return e.shaderType=this.shaderType,e},st.prototype.getGlslTypeString=function(){return"f"==this._type?"float":"i"==this._type?"int":"2i"==this._type?"ivec2":"2f"==this._type?"vec2":"3f"==this._type?"vec3":"4f"==this._type?"vec4":"m4"==this._type?"mat4":"t"==this._type?"sampler2D":"tc"==this._type?"samplerCube":"3f[]"==this._type||"m4[]"==this._type?null:void this._log.warn("[CGL UNIFORM] unknown glsl type string ",this._type)},st.prototype._isValidLoc=function(){return-1!=this._loc},st.prototype.getType=function(){return this._type},st.prototype.getName=function(){return this._name},st.prototype.getValue=function(){return this._value},st.prototype.getShaderType=function(){return this.shaderType},st.prototype.isStructMember=function(){return!!this._structName},st.prototype.resetLoc=function(){this._loc=-1,this.needsUpdate=!0},st.prototype.bindTextures=function(){return this._value},st.prototype.resetLoc=function(){this._loc=-1,this.needsUpdate=!0},st.prototype.bindTextures=function(){},st.prototype.getLoc=function(){return this._loc},st.prototype.updateFromPort4f=function(){this._value[0]=this._port.get(),this._value[1]=this._port2.get(),this._value[2]=this._port3.get(),this._value[3]=this._port4.get(),this.setValue(this._value)},st.prototype.updateFromPort3f=function(){this._value[0]=this._port.get(),this._value[1]=this._port2.get(),this._value[2]=this._port3.get(),this.setValue(this._value)},st.prototype.updateFromPort2f=function(){this._value[0]=this._port.get(),this._value[1]=this._port2.get(),this.setValue(this._value)},st.prototype.updateFromPort=function(){this.setValue(this._port.get())},st.prototype.updateValueF=function(){this._isValidLoc()?this.needsUpdate=!1:this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._shader.getCgl().gl.uniform1f(this._loc,this._value),this._cgl.profileData.profileUniformCount++},st.prototype.setValueF=function(t){t!=this._value&&(this.needsUpdate=!0,this._value=t)},st.prototype.updateValueI=function(){this._isValidLoc()?this.needsUpdate=!1:this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._shader.getCgl().gl.uniform1i(this._loc,this._value),this._cgl.profileData.profileUniformCount++},st.prototype.updateValue2I=function(){this._value&&(this._isValidLoc()||(this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._cgl.profileData.profileShaderGetUniform++,this._cgl.profileData.profileShaderGetUniformName=this._name),this._shader.getCgl().gl.uniform2i(this._loc,this._value[0],this._value[1]),this.needsUpdate=!1,this._cgl.profileData.profileUniformCount++)},st.prototype.updateValue3I=function(){this._value&&(this._isValidLoc()||(this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._cgl.profileData.profileShaderGetUniform++,this._cgl.profileData.profileShaderGetUniformName=this._name),this._shader.getCgl().gl.uniform3i(this._loc,this._value[0],this._value[1],this._value[2]),this.needsUpdate=!1,this._cgl.profileData.profileUniformCount++)},st.prototype.updateValue4I=function(){this._isValidLoc()||(this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._cgl.profileData.profileShaderGetUniform++,this._cgl.profileData.profileShaderGetUniformName=this._name),this._shader.getCgl().gl.uniform4i(this._loc,this._value[0],this._value[1],this._value[2],this._value[3]),this._cgl.profileData.profileUniformCount++},st.prototype.setValueI=function(t){t!=this._value&&(this.needsUpdate=!0,this._value=t)},st.prototype.setValue2I=function(t){t&&(this._oldValue?t[0]==this._oldValue[0]&&t[1]==this._oldValue[1]||(this._oldValue[0]=t[0],this._oldValue[1]=t[1],this.needsUpdate=!0):(this._oldValue=[t[0]-1,1],this.needsUpdate=!0),this._value=t)},st.prototype.setValue3I=function(t){t&&(this._oldValue?t[0]==this._oldValue[0]&&t[1]==this._oldValue[1]&&t[2]==this._oldValue[2]||(this._oldValue[0]=t[0],this._oldValue[1]=t[1],this._oldValue[2]=t[2],this.needsUpdate=!0):(this._oldValue=[t[0]-1,1,2],this.needsUpdate=!0),this._value=t)},st.prototype.setValue4I=function(t){this.needsUpdate=!0,this._value=t||vec4.create()},st.prototype.updateValueBool=function(){this._isValidLoc()?this.needsUpdate=!1:this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._shader.getCgl().gl.uniform1i(this._loc,this._value?1:0),this._cgl.profileData.profileUniformCount++},st.prototype.setValueBool=function(t){t!=this._value&&(this.needsUpdate=!0,this._value=t)},st.prototype.setValueArray4F=function(t){this.needsUpdate=!0,this._value=t},st.prototype.updateValueArray4F=function(){this._isValidLoc()?this.needsUpdate=!1:this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._value&&(this._shader.getCgl().gl.uniform4fv(this._loc,this._value),this._cgl.profileData.profileUniformCount++)},st.prototype.setValueArray3F=function(t){this.needsUpdate=!0,this._value=t},st.prototype.updateValueArray3F=function(){this._isValidLoc()?this.needsUpdate=!1:this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._value&&(this._shader.getCgl().gl.uniform3fv(this._loc,this._value),this._cgl.profileData.profileUniformCount++)},st.prototype.setValueArray2F=function(t){this.needsUpdate=!0,this._value=t},st.prototype.updateValueArray2F=function(){this._isValidLoc()?this.needsUpdate=!1:this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._value&&(this._shader.getCgl().gl.uniform2fv(this._loc,this._value),this._cgl.profileData.profileUniformCount++)},st.prototype.setValueArrayF=function(t){this.needsUpdate=!0,this._value=t},st.prototype.updateValueArrayF=function(){this._isValidLoc()?this.needsUpdate=!1:this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._value&&(this._shader.getCgl().gl.uniform1fv(this._loc,this._value),this._cgl.profileData.profileUniformCount++)},st.prototype.setValueArrayT=function(t){this.needsUpdate=!0,this._value=t},st.prototype.updateValue3F=function(){this._value&&(this._isValidLoc()||(this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._cgl.profileData.profileShaderGetUniform++,this._cgl.profileData.profileShaderGetUniformName=this._name),this._shader.getCgl().gl.uniform3f(this._loc,this._value[0],this._value[1],this._value[2]),this.needsUpdate=!1,this._cgl.profileData.profileUniformCount++)},st.prototype.setValue3F=function(t){t&&(this._oldValue?t[0]==this._oldValue[0]&&t[1]==this._oldValue[1]&&t[2]==this._oldValue[2]||(this._oldValue[0]=t[0],this._oldValue[1]=t[1],this._oldValue[2]=t[2],this.needsUpdate=!0):(this._oldValue=[t[0]-1,1,2],this.needsUpdate=!0),this._value=t)},st.prototype.updateValue2F=function(){this._value&&(this._isValidLoc()||(this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._cgl.profileData.profileShaderGetUniform++,this._cgl.profileData.profileShaderGetUniformName=this._name),this._shader.getCgl().gl.uniform2f(this._loc,this._value[0],this._value[1]),this.needsUpdate=!1,this._cgl.profileData.profileUniformCount++)},st.prototype.setValue2F=function(t){t&&(this._oldValue?t[0]==this._oldValue[0]&&t[1]==this._oldValue[1]||(this._oldValue[0]=t[0],this._oldValue[1]=t[1],this.needsUpdate=!0):(this._oldValue=[t[0]-1,1],this.needsUpdate=!0),this._value=t)},st.prototype.updateValue4F=function(){this._isValidLoc()||(this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._cgl.profileData.profileShaderGetUniform++,this._cgl.profileData.profileShaderGetUniformName=this._name),this._value||(this._log.warn("no value for uniform",this._name,this),this._value=[0,0,0,0]),this.needsUpdate=!1,this._shader.getCgl().gl.uniform4f(this._loc,this._value[0],this._value[1],this._value[2],this._value[3]),this._cgl.profileData.profileUniformCount++},st.prototype.setValue4F=function(t){"number"==typeof this.value&&(this.value=vec4.create()),t&&(this._oldValue?t[0]==this._oldValue[0]&&t[1]==this._oldValue[1]&&t[2]==this._oldValue[2]&&t[3]==this._oldValue[3]||(this._oldValue[0]=t[0],this._oldValue[1]=t[1],this._oldValue[2]=t[2],this.needsUpdate=!0):(this._oldValue=[t[0]-1,1,2,3],this.needsUpdate=!0),this._value=t)},st.prototype.updateValueM4=function(){this._isValidLoc()||(this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._cgl.profileData.profileShaderGetUniform++,this._cgl.profileData.profileShaderGetUniformName=this._name),this._shader.getCgl().gl.uniformMatrix4fv(this._loc,!1,this._value),this._cgl.profileData.profileUniformCount++},st.prototype.setValueM4=function(t){this.needsUpdate=!0,this._value=t||mat4.create()},st.prototype.updateValueArrayT=function(){this._isValidLoc()?this.needsUpdate=!1:this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._value&&(this._shader.getCgl().gl.uniform1iv(this._loc,this._value),this._cgl.profileData.profileUniformCount++)},st.prototype.updateValueT=function(){this._isValidLoc()||(this._loc=this._shader.getCgl().gl.getUniformLocation(this._shader.getProgram(),this._name),this._cgl.profileData.profileShaderGetUniform++,this._cgl.profileData.profileShaderGetUniformName=this._name),this._cgl.profileData.profileUniformCount++,this._shader.getCgl().gl.uniform1i(this._loc,this._value),this.needsUpdate=!1},st.prototype.setValueT=function(t){this.needsUpdate=!0,this._value=t};const rt=180/Math.PI,nt={MATH:{DEG2RAD:Math.PI/180,RAD2DEG:rt},SHADER:{SHADERVAR_VERTEX_POSITION:"vPosition",SHADERVAR_VERTEX_NUMBER:"attrVertIndex",SHADERVAR_VERTEX_NORMAL:"attrVertNormal",SHADERVAR_VERTEX_TEXCOORD:"attrTexCoord",SHADERVAR_INSTANCE_MMATRIX:"instMat",SHADERVAR_UNI_PROJMAT:"projMatrix",SHADERVAR_UNI_VIEWMAT:"viewMatrix",SHADERVAR_UNI_MODELMAT:"modelMatrix",SHADERVAR_UNI_NORMALMAT:"normalMatrix",SHADERVAR_UNI_INVVIEWMAT:"inverseViewMatrix",SHADERVAR_UNI_VIEWPOS:"camPos"},BLEND_MODES:{BLEND_NONE:0,BLEND_NORMAL:1,BLEND_ADD:2,BLEND_SUB:3,BLEND_MUL:4}};const ot={lastMesh:null},ht=function(t,e,i){this._cgl=t,this._log=new _("cgl_mesh"),this._bufVertexAttrib=null,this._bufVerticesIndizes=this._cgl.gl.createBuffer(),this._attributes=[],this._attribLocs={},this._geom=null,this._lastShader=null,this._numInstances=0,this._glPrimitive=i,this._preWireframeGeom=null,this.addVertexNumbers=!1,this.feedBackAttributes=[],this.setGeom(e),this._feedBacks=[],this._feedBacksChanged=!1,this._transformFeedBackLoc=-1,this._lastAttrUpdate=0,this._name="unknown",this._cgl.profileData.addHeavyEvent("mesh constructed",this._name),this._queryExt=null,Object.defineProperty(this,"numInstances",{get(){return this._numInstances},set(t){this.setNumInstances(t)}})};ht.prototype.updateVertices=function(t){this.setAttribute(nt.SHADER.SHADERVAR_VERTEX_POSITION,t.vertices,3),this._numVerts=t.vertices.length/3},ht.prototype.setAttributePointer=function(t,e,i,s){for(let r=0;r<this._attributes.length;r++)this._attributes[r].name==t&&(this._attributes[r].pointer||(this._attributes[r].pointer=[]),this._attributes[r].pointer.push({loc:-1,name:e,stride:i,offset:s,instanced:t==nt.SHADER.SHADERVAR_INSTANCE_MMATRIX}))},ht.prototype.getAttribute=function(t){for(let e=0;e<this._attributes.length;e++)if(this._attributes[e].name==t)return this._attributes[e]},ht.prototype.setAttributeRange=function(t,e,i,s){t&&(i||s)&&(this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER,t.buffer),this._cgl.profileData.profileMeshAttributes+=s-i||0,this._cgl.profileData.profileSingleMeshAttribute[this._name]=this._cgl.profileData.profileSingleMeshAttribute[this._name]||0,this._cgl.profileData.profileSingleMeshAttribute[this._name]+=s-i||0,t.numItems<e.length/t.itemSize&&this._resizeAttr(e,t),s>e.length&&this._log.log(this._cgl.canvas.id+" "+t.name+" buffersubdata out of bounds ?",e.length,s,i,t),1==this._cgl.glVersion?this._cgl.gl.bufferSubData(this._cgl.gl.ARRAY_BUFFER,0,e):this._cgl.gl.bufferSubData(this._cgl.gl.ARRAY_BUFFER,4*i,e,i,s-i))},ht.prototype._resizeAttr=function(t,e){e.buffer&&this._cgl.gl.deleteBuffer(e.buffer),e.buffer=this._cgl.gl.createBuffer(),this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER,e.buffer),this._bufferArray(t,e),e.numItems=t.length/e.itemSize},ht.prototype._bufferArray=function(t,e){let i=null;t&&(this._cgl.debugOneFrame&&console.log("_bufferArray",t.length,e.name),t instanceof Float32Array?i=t:e&&i&&i.length==t.length?i.set(t):(i=new Float32Array(t),this._cgl.debugOneFrame&&console.log("_bufferArray create new float32array",t.length,e.name),this._cgl.profileData.profileNonTypedAttrib++,this._cgl.profileData.profileNonTypedAttribNames="("+this._name+":"+e.name+")"),e.arrayLength=i.length,this._cgl.gl.bufferData(this._cgl.gl.ARRAY_BUFFER,i,this._cgl.gl.DYNAMIC_DRAW))},ht.prototype.addAttribute=ht.prototype.updateAttribute=ht.prototype.setAttribute=function(t,e,i,s){if(!e)throw this._log.error("mesh addAttribute - no array given! "+t),new Error;let r=null,n=!1,o=0;const h=e.length/i;for(this._cgl.profileData.profileMeshAttributes+=h||0,"function"==typeof s&&(r=s),"object"==typeof s&&(s.cb&&(r=s.cb),s.instanced&&(n=s.instanced)),t==nt.SHADER.SHADERVAR_INSTANCE_MMATRIX&&(n=!0),o=0;o<this._attributes.length;o++){const i=this._attributes[o];if(i.name==t)return i.numItems===h||this._resizeAttr(e,i),this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER,i.buffer),this._bufferArray(e,i),i}const a=this._cgl.gl.createBuffer();this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER,a);let l=this._cgl.gl.FLOAT;s&&s.type&&(l=s.type);const c={buffer:a,name:t,cb:r,itemSize:i,numItems:h,startItem:0,instanced:n,type:l};return this._bufferArray(e,c),t==nt.SHADER.SHADERVAR_VERTEX_POSITION&&(this._bufVertexAttrib=c),this._attributes.push(c),this._attribLocs={},c},ht.prototype.getAttributes=function(){return this._attributes},ht.prototype.updateTexCoords=function(t){if(t.texCoords&&t.texCoords.length>0)this.setAttribute(nt.SHADER.SHADERVAR_VERTEX_TEXCOORD,t.texCoords,2);else{const e=new Float32Array(Math.round(t.vertices.length/3*2));this.setAttribute(nt.SHADER.SHADERVAR_VERTEX_TEXCOORD,e,2)}},ht.prototype.updateNormals=function(t){if(t.vertexNormals&&t.vertexNormals.length>0)this.setAttribute("attrVertNormal",t.vertexNormals,3);else{const e=new Float32Array(Math.round(t.vertices.length));this.setAttribute("attrVertNormal",e,3)}},ht.prototype._setVertexNumbers=function(){if(!this._verticesNumbers||this._verticesNumbers.length!=this._numVerts){this._verticesNumbers=new Float32Array(this._numVerts);for(let t=0;t<this._numVerts;t++)this._verticesNumbers[t]=t;this.setAttribute(nt.SHADER.SHADERVAR_VERTEX_NUMBER,this._verticesNumbers,1,(t,e,i)=>{i.uniformNumVertices||(i.uniformNumVertices=new st(i,"f","numVertices",this._numVerts)),i.uniformNumVertices.setValue(this._numVerts)})}},ht.prototype.setVertexIndices=function(t){if(this._bufVerticesIndizes)if(t.length>0){for(let e=0;e<t.length;e++)if(t[e]>=this._numVerts)return void this._log.warn("invalid index in "+this._name);this._cgl.gl.bindBuffer(this._cgl.gl.ELEMENT_ARRAY_BUFFER,this._bufVerticesIndizes),t instanceof Uint16Array?this.vertIndicesTyped=t:this.vertIndicesTyped=new Uint16Array(t),this._cgl.gl.bufferData(this._cgl.gl.ELEMENT_ARRAY_BUFFER,this.vertIndicesTyped,this._cgl.gl.DYNAMIC_DRAW),this._bufVerticesIndizes.itemSize=1,this._bufVerticesIndizes.numItems=t.length}else this._bufVerticesIndizes.numItems=0;else this._log.warn("no bufVerticesIndizes")},ht.prototype.setGeom=function(t,e){this._geom=t,null!=t.glPrimitive&&(this._glPrimitive=t.glPrimitive),this._geom&&this._geom.name&&(this._name="mesh "+this._geom.name),ot.lastMesh=null,this._cgl.profileData.profileMeshSetGeom++,this._disposeAttributes(),this.updateVertices(this._geom),this.setVertexIndices(this._geom.verticesIndices),this.updateTexCoords(this._geom),this.updateNormals(this._geom),this._geom.hasOwnProperty("tangents")&&this._geom.tangents&&this._geom.tangents.length>0&&this.setAttribute("attrTangent",this._geom.tangents,3),this._geom.hasOwnProperty("biTangents")&&this._geom.biTangents&&this._geom.biTangents.length>0&&this.setAttribute("attrBiTangent",this._geom.biTangents,3),this._geom.vertexColors.length>0&&(this._geom.vertexColors.flat&&this._geom.vertexColors.flat(100),this.setAttribute("attrVertColor",this._geom.vertexColors,4)),this.addVertexNumbers&&this._setVertexNumbers();const i=this._geom.getAttributes();for(const t in i)this.setAttribute(t,i[t].data,i[t].itemSize);e&&(this._geom=null)},ht.prototype._preBind=function(t){for(let e=0;e<this._attributes.length;e++)this._attributes[e].cb&&this._attributes[e].cb(this._attributes[e],this._geom,t)},ht.prototype._checkAttrLengths=function(){},ht.prototype._bind=function(t){if(!t.isValid())return;let e=[];if(this._attribLocs[t.id]?e=this._attribLocs[t.id]:this._attribLocs[t.id]=e,this._lastShader=t,t.lastCompile>this._lastAttrUpdate||e.length!=this._attributes.length){this._lastAttrUpdate=t.lastCompile;for(let t=0;t<this._attributes.length;t++)e[t]=-1;this._checkAttrLengths()}for(let i=0;i<this._attributes.length;i++){const s=this._attributes[i];if(-1==e[i]&&s._attrLocationLastShaderTime!=t.lastCompile&&(s._attrLocationLastShaderTime=t.lastCompile,e[i]=this._cgl.glGetAttribLocation(t.getProgram(),s.name),this._cgl.profileData.profileAttrLoc++),-1!=e[i])if(this._cgl.gl.enableVertexAttribArray(e[i]),this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER,s.buffer),s.instanced)if(s.itemSize<=4)s.itemSize&&0!=s.itemSize||this._log.warn("instanced attrib itemsize error",this._geom.name,s),this._cgl.gl.vertexAttribPointer(e[i],s.itemSize,s.type,!1,4*s.itemSize,0),this._cgl.gl.vertexAttribDivisor(e[i],1);else if(16==s.itemSize){const t=64;this._cgl.gl.vertexAttribPointer(e[i],4,s.type,!1,t,0),this._cgl.gl.enableVertexAttribArray(e[i]+1),this._cgl.gl.vertexAttribPointer(e[i]+1,4,s.type,!1,t,16),this._cgl.gl.enableVertexAttribArray(e[i]+2),this._cgl.gl.vertexAttribPointer(e[i]+2,4,s.type,!1,t,32),this._cgl.gl.enableVertexAttribArray(e[i]+3),this._cgl.gl.vertexAttribPointer(e[i]+3,4,s.type,!1,t,48),this._cgl.gl.vertexAttribDivisor(e[i],1),this._cgl.gl.vertexAttribDivisor(e[i]+1,1),this._cgl.gl.vertexAttribDivisor(e[i]+2,1),this._cgl.gl.vertexAttribDivisor(e[i]+3,1)}else this._log.warn("unknown instance attrib size",s.name);else{if(s.itemSize&&0!=s.itemSize||this._log.warn("attrib itemsize error",this._name,s),this._cgl.gl.vertexAttribPointer(e[i],s.itemSize,s.type,!1,4*s.itemSize,0),s.pointer)for(let e=0;e<s.pointer.length;e++){const i=s.pointer[e];-1==i.loc&&(i.loc=this._cgl.glGetAttribLocation(t.getProgram(),i.name)),this._cgl.profileData.profileAttrLoc++,this._cgl.gl.enableVertexAttribArray(i.loc),this._cgl.gl.vertexAttribPointer(i.loc,s.itemSize,s.type,!1,i.stride,i.offset)}this.bindFeedback(s)}}0!==this._bufVerticesIndizes.numItems&&this._cgl.gl.bindBuffer(this._cgl.gl.ELEMENT_ARRAY_BUFFER,this._bufVerticesIndizes)},ht.prototype.unBind=function(){const t=this._lastShader;if(this._lastShader=null,!t)return;let e=[];this._attribLocs[t.id]?e=this._attribLocs[t.id]:this._attribLocs[t.id]=e,ot.lastMesh=null;for(let t=0;t<this._attributes.length;t++)this._attributes[t].instanced&&(this._attributes[t].itemSize<=4?(-1!=e[t]&&this._cgl.gl.vertexAttribDivisor(e[t],0),e[t]>=0&&this._cgl.gl.disableVertexAttribArray(e[t])):(this._cgl.gl.vertexAttribDivisor(e[t],0),this._cgl.gl.vertexAttribDivisor(e[t]+1,0),this._cgl.gl.vertexAttribDivisor(e[t]+2,0),this._cgl.gl.vertexAttribDivisor(e[t]+3,0),this._cgl.gl.disableVertexAttribArray(e[t]+1),this._cgl.gl.disableVertexAttribArray(e[t]+2),this._cgl.gl.disableVertexAttribArray(e[t]+3))),-1!=e[t]&&this._cgl.gl.disableVertexAttribArray(e[t])},ht.prototype.meshChanged=function(){return this._cgl.lastMesh&&this._cgl.lastMesh!=this},ht.prototype.printDebug=function(t){console.log("--attributes");for(let t=0;t<this._attributes.length;t++)console.log("attribute "+t+" "+this._attributes[t].name)},ht.prototype.setNumVertices=function(t){this._bufVertexAttrib.numItems=t},ht.prototype.getNumVertices=function(){return this._bufVertexAttrib.numItems},ht.prototype.render=function(t){if(!t||!t.isValid())return;this._geom&&(t.wireframe||this._geom.isIndexed()||!this._preWireframeGeom||this.setGeom(this._preWireframeGeom),t.wireframe&&this._geom.isIndexed()&&(this._preWireframeGeom=this._geom,this._geom=this._geom.copy(),this._geom.unIndex(),this._geom.calcBarycentric(),this.setGeom(this._geom),this.setAttribute("attrBarycentric",this._geom.barycentrics,3)));let e=!1;ot.lastMesh!=this&&(ot.lastMesh&&ot.lastMesh.unBind(),e=!0),e&&this._preBind(t),t.bind(),t.bindTextures&&t.bindTextures(),this._bind(t),this.addVertexNumbers&&this._setVertexNumbers(),ot.lastMesh=this;let i=this._cgl.gl.TRIANGLES;void 0!==this._glPrimitive&&(i=this._glPrimitive),null!==t.glPrimitive&&(i=t.glPrimitive);let s=1,r=this._cgl.profileData.doProfileGlQuery,n=!1;if(r){let e=this._name+" "+t.getName()+" #"+t.id;this._numInstances&&(e+=" instanced "+this._numInstances+"x");let i=this._cgl.profileData.glQueryData[e];if(i||(i={id:e,num:0},this._cgl.profileData.glQueryData[e]=i),this._queryExt||(this._queryExt=this._cgl.gl.getExtension("EXT_disjoint_timer_query_webgl2")),this._queryExt){if(i._drawQuery){if(this._cgl.gl.getQueryParameter(i._drawQuery,this._cgl.gl.QUERY_RESULT_AVAILABLE)){const t=this._cgl.gl.getQueryParameter(i._drawQuery,this._cgl.gl.QUERY_RESULT)/1e6;i._times+=t,i._numcount++,i.when=performance.now(),i._drawQuery=null,i.queryStarted=!1}}i.queryStarted||(i._drawQuery=this._cgl.gl.createQuery(),this._cgl.gl.beginQuery(this._queryExt.TIME_ELAPSED_EXT,i._drawQuery),n=i.queryStarted=!0)}}if(this.hasFeedbacks()?this.drawFeedbacks(t,i):0===this._bufVerticesIndizes.numItems?(i==this._cgl.gl.TRIANGLES&&(s=3),0===this._numInstances?this._cgl.gl.drawArrays(i,this._bufVertexAttrib.startItem,this._bufVertexAttrib.numItems-this._bufVertexAttrib.startItem):this._cgl.gl.drawArraysInstanced(i,this._bufVertexAttrib.startItem,this._bufVertexAttrib.numItems,this._numInstances)):0===this._numInstances?this._cgl.gl.drawElements(i,this._bufVerticesIndizes.numItems,this._cgl.gl.UNSIGNED_SHORT,0):this._cgl.gl.drawElementsInstanced(i,this._bufVerticesIndizes.numItems,this._cgl.gl.UNSIGNED_SHORT,0,this._numInstances),this._cgl.debugOneFrame&&this._cgl.gl.getError()!=this._cgl.gl.NO_ERROR){this._log.error("mesh draw gl error"),this._log.error("mesh",this),this._log.error("shader",t);for(let e=0;e<this._cgl.gl.getProgramParameter(t.getProgram(),this._cgl.gl.ACTIVE_ATTRIBUTES);e++){const i=this._cgl.gl.getActiveAttrib(t.getProgram(),e).name;this._log.error("attrib ",i)}}this._cgl.profileData.profileMeshNumElements+=this._bufVertexAttrib.numItems/s*(this._numInstances||1),this._cgl.profileData.profileMeshDraw++,r&&n&&this._cgl.gl.endQuery(this._queryExt.TIME_ELAPSED_EXT),this.unBind()},ht.prototype.setNumInstances=function(t){if(t=Math.max(0,t),this._numInstances!=t){this._numInstances=t;const e=new Float32Array(t);for(let i=0;i<t;i++)e[i]=i;this.setAttribute("instanceIndex",e,1,{instanced:!0})}},ht.prototype._disposeAttributes=function(){if(this._attributes){for(let t=0;t<this._attributes.length;t++)this._attributes[t].buffer&&(this._cgl.gl.deleteBuffer(this._attributes[t].buffer),this._attributes[t].buffer=null);this._attributes.length=0}},ht.prototype.dispose=function(){this._bufVertexAttrib&&this._bufVertexAttrib.buffer&&this._cgl.gl.deleteBuffer(this._bufVertexAttrib.buffer),this._bufVerticesIndizes&&this._cgl.gl.deleteBuffer(this._bufVerticesIndizes),this._disposeAttributes()},function(t){t.prototype.hasFeedbacks=function(){return this._feedBacks.length>0},t.prototype.removeFeedbacks=function(t){this._feedbacks&&(this._feedbacks.length=0,this._feedBacksChanged=!0)},t.prototype.setAttributeFeedback=function(){},t.prototype.setFeedback=function(t,e,i){let s={nameOut:e},r=!1;this.unBindFeedbacks();for(let t=0;t<this._feedBacks.length;t++)this._feedBacks[t].nameOut==e&&(s=this._feedBacks[t],r=!0);return r||(this._feedBacksChanged=!0),s.initialArr=i,s.attrib=t,s.outBuffer&&this._cgl.gl.deleteBuffer(s.outBuffer),s.outBuffer=this._cgl.gl.createBuffer(),this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER,s.outBuffer),this._cgl.gl.bufferData(this._cgl.gl.ARRAY_BUFFER,s.initialArr,this._cgl.gl.STATIC_DRAW),this._cgl.gl.bindBuffer(this._cgl.gl.ARRAY_BUFFER,s.attrib.buffer),this._cgl.gl.bufferData(this._cgl.gl.ARRAY_BUFFER,s.initialArr,this._cgl.gl.STATIC_DRAW),r||this._feedBacks.push(s),s},t.prototype.bindFeedback=function(t){if(!this._feedBacks||0===this._feedBacks.length)return;-1==this._transformFeedBackLoc&&(this._transformFeedBackLoc=this._cgl.gl.createTransformFeedback()),this._cgl.gl.bindTransformFeedback(this._cgl.gl.TRANSFORM_FEEDBACK,this._transformFeedBackLoc);let e=!1;for(let i=0;i<this._feedBacks.length;i++){const s=this._feedBacks[i];s.attrib==t&&(e=!0,this._cgl.gl.bindBufferBase(this._cgl.gl.TRANSFORM_FEEDBACK_BUFFER,i,s.outBuffer))}},t.prototype.drawFeedbacks=function(t,e){let i=0;if(this._feedBacksChanged){const e=[];for(this._cgl.gl.bindTransformFeedback(this._cgl.gl.TRANSFORM_FEEDBACK,this._transformFeedBackLoc),i=0;i<this._feedBacks.length;i++)e.push(this._feedBacks[i].nameOut);return t.setFeedbackNames(e),console.log("feedbacknames",e),t.compile(),this._feedBacksChanged=!1,this._cgl.gl.bindTransformFeedback(this._cgl.gl.TRANSFORM_FEEDBACK,null),void console.log("changed finished")}this._cgl.gl.beginTransformFeedback(this.glPrimitive),this._cgl.gl.drawArrays(e,0,this._feedBacks[0].attrib.numItems),this._cgl.gl.endTransformFeedback(),this.unBindFeedbacks(),this.feedBacksSwapBuffers()},t.prototype.unBindFeedbacks=function(){for(let t=0;t<this._feedBacks.length;t++)this._cgl.gl.bindBufferBase(this._cgl.gl.TRANSFORM_FEEDBACK_BUFFER,t,null);this._cgl.gl.bindTransformFeedback(this._cgl.gl.TRANSFORM_FEEDBACK,null)},t.prototype.feedBacksSwapBuffers=function(){for(let t=0;t<this._feedBacks.length;t++){const e=this._feedBacks[t].attrib.buffer;this._feedBacks[t].attrib.buffer=this._feedBacks[t].outBuffer,this._feedBacks[t].outBuffer=e}}}(ht);const at={getSimpleRect:function(t,e){const i=new it(e);return i.vertices=[1,1,0,-1,1,0,1,-1,0,-1,-1,0],i.texCoords=[1,1,0,1,1,0,0,0],i.verticesIndices=[0,1,2,2,1,3],i.vertexNormals=[0,0,0,0,0,0,0,0,0,0,0,0],new ht(t,i)}},lt=function(t,e){this._cgl=t,this._log=new _("cgl_TextureEffect"),t.TextureEffectMesh||this.createMesh(),this._textureSource=null,this._options=e,this._textureTarget=null,this._frameBuf=this._cgl.gl.createFramebuffer(),this._frameBuf2=this._cgl.gl.createFramebuffer(),this._renderbuffer=this._cgl.gl.createRenderbuffer(),this._renderbuffer2=this._cgl.gl.createRenderbuffer(),this.switched=!1,this.depth=!1};lt.prototype.getWidth=function(){return this._textureSource.width},lt.prototype.getHeight=function(){return this._textureSource.height},lt.prototype.setSourceTexture=function(t){t.textureType==$.TYPE_FLOAT&&this._cgl.gl.getExtension("EXT_color_buffer_float"),null===t?(this._textureSource=new $(this._cgl),this._textureSource.setSize(16,16)):this._textureSource=t,this._textureSource.compareSettings(this._textureTarget)||(this._textureTarget&&this._textureTarget.delete(),this._textureTarget=this._textureSource.clone(),this._cgl.profileData.profileEffectBuffercreate++,this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this._frameBuf),this._cgl.gl.bindRenderbuffer(this._cgl.gl.RENDERBUFFER,this._renderbuffer),this.depth&&this._cgl.gl.renderbufferStorage(this._cgl.gl.RENDERBUFFER,this._cgl.gl.DEPTH_COMPONENT16,this._textureSource.width,this._textureSource.height),this._cgl.gl.framebufferTexture2D(this._cgl.gl.FRAMEBUFFER,this._cgl.gl.COLOR_ATTACHMENT0,this._cgl.gl.TEXTURE_2D,this._textureTarget.tex,0),this.depth&&this._cgl.gl.framebufferRenderbuffer(this._cgl.gl.FRAMEBUFFER,this._cgl.gl.DEPTH_ATTACHMENT,this._cgl.gl.RENDERBUFFER,this._renderbuffer),this._cgl.gl.bindTexture(this._cgl.gl.TEXTURE_2D,null),this._cgl.gl.bindRenderbuffer(this._cgl.gl.RENDERBUFFER,null),this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,null),this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this._frameBuf2),this._cgl.gl.bindRenderbuffer(this._cgl.gl.RENDERBUFFER,this._renderbuffer2),this.depth&&this._cgl.gl.renderbufferStorage(this._cgl.gl.RENDERBUFFER,this._cgl.gl.DEPTH_COMPONENT16,this._textureSource.width,this._textureSource.height),this._cgl.gl.framebufferTexture2D(this._cgl.gl.FRAMEBUFFER,this._cgl.gl.COLOR_ATTACHMENT0,this._cgl.gl.TEXTURE_2D,this._textureSource.tex,0),this.depth&&this._cgl.gl.framebufferRenderbuffer(this._cgl.gl.FRAMEBUFFER,this._cgl.gl.DEPTH_ATTACHMENT,this._cgl.gl.RENDERBUFFER,this._renderbuffer2),this._cgl.gl.bindTexture(this._cgl.gl.TEXTURE_2D,null),this._cgl.gl.bindRenderbuffer(this._cgl.gl.RENDERBUFFER,null),this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,null))},lt.prototype.startEffect=function(t){this._textureTarget?(this.switched=!1,this._cgl.pushDepthTest(!1),this._cgl.pushModelMatrix(),this._cgl.pushPMatrix(),this._cgl.gl.viewport(0,0,this.getCurrentTargetTexture().width,this.getCurrentTargetTexture().height),mat4.perspective(this._cgl.pMatrix,45,this.getCurrentTargetTexture().width/this.getCurrentTargetTexture().height,.1,1100),this._cgl.pushPMatrix(),mat4.identity(this._cgl.pMatrix),this._cgl.pushViewMatrix(),mat4.identity(this._cgl.vMatrix),this._cgl.pushModelMatrix(),mat4.identity(this._cgl.mvMatrix),t&&(this._bgTex=t),this._countEffects=0):this._log.warn("effect has no target")},lt.prototype.endEffect=function(){this._cgl.popDepthTest(!1),this._cgl.popModelMatrix(),this._cgl.popPMatrix(),this._cgl.popModelMatrix(),this._cgl.popViewMatrix(),this._cgl.popPMatrix(),this._cgl.resetViewPort()},lt.prototype.bind=function(){null!==this._textureSource?this.switched?(this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this._frameBuf2),this._cgl.pushGlFrameBuffer(this._frameBuf2)):(this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this._frameBuf),this._cgl.pushGlFrameBuffer(this._frameBuf)):this._log.warn("no base texture set!")},lt.prototype.finish=function(){null!==this._textureSource?(this._cgl.TextureEffectMesh.render(this._cgl.getShader()),this._cgl.gl.bindFramebuffer(this._cgl.gl.FRAMEBUFFER,this._cgl.popGlFrameBuffer()),this._cgl.profileData.profileTextureEffect++,this._textureTarget.filter==$.FILTER_MIPMAP&&(this.switched?(this._cgl.gl.bindTexture(this._cgl.gl.TEXTURE_2D,this._textureSource.tex),this._textureSource.updateMipMap()):(this._cgl.gl.bindTexture(this._cgl.gl.TEXTURE_2D,this._textureTarget.tex),this._textureTarget.updateMipMap()),this._cgl.gl.bindTexture(this._cgl.gl.TEXTURE_2D,null)),this.switched=!this.switched,this._countEffects++):this._log.warn("no base texture set!")},lt.prototype.getCurrentTargetTexture=function(){return this.switched?this._textureSource:this._textureTarget},lt.prototype.getCurrentSourceTexture=function(){return 0==this._countEffects&&this._bgTex?this._bgTex:this.switched?this._textureTarget:this._textureSource},lt.prototype.delete=function(){this._textureTarget&&this._textureTarget.delete(),this._textureSource&&this._textureSource.delete(),this._cgl.gl.deleteRenderbuffer(this._renderbuffer),this._cgl.gl.deleteFramebuffer(this._frameBuf)},lt.prototype.createMesh=function(){this._cgl.TextureEffectMesh=at.getSimpleRect(this._cgl,"texEffectRect")},lt.checkOpNotInTextureEffect=function(t){return t.uiAttribs.error&&!t.patch.cgl.currentTextureEffect?(t.setUiError("textureeffect",null),!0):!t.patch.cgl.currentTextureEffect||(t.patch.cgl.currentTextureEffect&&!t.uiAttribs.error?(t.setUiError("textureeffect","This op can not be a child of a ImageCompose/texture effect! imagecompose should only have textureeffect childs.",0),!1):!t.patch.cgl.currentTextureEffect)},lt.checkOpInEffect=function(t){return t.patch.cgl.currentTextureEffect&&t.uiAttribs.uierrors?(t.setUiError("texeffect",null),!0):!!t.patch.cgl.currentTextureEffect||(t.patch.cgl.currentTextureEffect||t.uiAttribs.uierrors&&0!=t.uiAttribs.uierrors.length?!!t.patch.cgl.currentTextureEffect:(t.setUiError("texeffect",'This op must be a child of an ImageCompose op! More infos <a href="https://docs.cables.gl/image_composition/image_composition.html" target="_blank">here</a>.',1),!1))},lt.getBlendCode=function(){return"".endl()+"vec3 _blend(vec3 base,vec3 blend)".endl()+"{".endl()+"   vec3 colNew=blend;".endl()+"   #ifdef BM_MULTIPLY".endl()+"       colNew=base*blend;".endl()+"   #endif".endl()+"   #ifdef BM_MULTIPLY_INV".endl()+"       colNew=base* vec3(1.0)-blend;".endl()+"   #endif".endl()+"   #ifdef BM_AVERAGE".endl()+"       colNew=((base + blend) / 2.0);".endl()+"   #endif".endl()+"   #ifdef BM_ADD".endl()+"       colNew=min(base + blend, vec3(1.0));".endl()+"   #endif".endl()+"   #ifdef BM_SUBSTRACT".endl()+"       colNew=max(base + blend - vec3(1.0), vec3(0.0));".endl()+"   #endif".endl()+"   #ifdef BM_DIFFERENCE".endl()+"       colNew=abs(base - blend);".endl()+"   #endif".endl()+"   #ifdef BM_NEGATION".endl()+"       colNew=(vec3(1.0) - abs(vec3(1.0) - base - blend));".endl()+"   #endif".endl()+"   #ifdef BM_EXCLUSION".endl()+"       colNew=(base + blend - 2.0 * base * blend);".endl()+"   #endif".endl()+"   #ifdef BM_LIGHTEN".endl()+"       colNew=max(blend, base);".endl()+"   #endif".endl()+"   #ifdef BM_DARKEN".endl()+"       colNew=min(blend, base);".endl()+"   #endif".endl()+"   #ifdef BM_OVERLAY".endl()+"      #define BlendOverlayf(base, blend)  (base < 0.5 ? (2.0 * base * blend) : (1.0 - 2.0 * (1.0 - base) * (1.0 - blend)))".endl()+"      colNew=vec3(BlendOverlayf(base.r, blend.r),BlendOverlayf(base.g, blend.g),BlendOverlayf(base.b, blend.b));".endl()+"   #endif".endl()+"   #ifdef BM_SCREEN".endl()+"      #define BlendScreenf(base, blend)       (1.0 - ((1.0 - base) * (1.0 - blend)))".endl()+"      colNew=vec3(BlendScreenf(base.r, blend.r),BlendScreenf(base.g, blend.g),BlendScreenf(base.b, blend.b));".endl()+"   #endif".endl()+"   #ifdef BM_SOFTLIGHT".endl()+"      #define BlendSoftLightf(base, blend)    ((blend < 0.5) ? (2.0 * base * blend + base * base * (1.0 - 2.0 * blend)) : (sqrt(base) * (2.0 * blend - 1.0) + 2.0 * base * (1.0 - blend)))".endl()+"      colNew=vec3(BlendSoftLightf(base.r, blend.r),BlendSoftLightf(base.g, blend.g),BlendSoftLightf(base.b, blend.b));".endl()+"   #endif".endl()+"   #ifdef BM_HARDLIGHT".endl()+"      #define BlendOverlayf(base, blend)  (base < 0.5 ? (2.0 * base * blend) : (1.0 - 2.0 * (1.0 - base) * (1.0 - blend)))".endl()+"      colNew=vec3(BlendOverlayf(base.r, blend.r),BlendOverlayf(base.g, blend.g),BlendOverlayf(base.b, blend.b));".endl()+"   #endif".endl()+"   #ifdef BM_COLORDODGE".endl()+"      #define BlendColorDodgef(base, blend)   ((blend == 1.0) ? blend : min(base / (1.0 - blend), 1.0))".endl()+"      colNew=vec3(BlendColorDodgef(base.r, blend.r),BlendColorDodgef(base.g, blend.g),BlendColorDodgef(base.b, blend.b));".endl()+"   #endif".endl()+"   #ifdef BM_COLORBURN".endl()+"      #define BlendColorBurnf(base, blend)    ((blend == 0.0) ? blend : max((1.0 - ((1.0 - base) / blend)), 0.0))".endl()+"      colNew=vec3(BlendColorBurnf(base.r, blend.r),BlendColorBurnf(base.g, blend.g),BlendColorBurnf(base.b, blend.b));".endl()+"   #endif".endl()+"   return colNew;".endl()+"}".endl()+"vec4 cgl_blend(vec4 oldColor,vec4 newColor,float amount)".endl()+"{".endl()+"vec4 col=vec4( _blend(oldColor.rgb,newColor.rgb) ,1.0);".endl()+"col=vec4( mix( col.rgb, oldColor.rgb ,1.0-oldColor.a*amount),1.0);".endl()+"return col;".endl()+"}"},lt.onChangeBlendSelect=function(t,e){"normal"==e?t.define("BM_NORMAL"):t.removeDefine("BM_NORMAL"),"multiply"==e?t.define("BM_MULTIPLY"):t.removeDefine("BM_MULTIPLY"),"multiply invert"==e?t.define("BM_MULTIPLY_INV"):t.removeDefine("BM_MULTIPLY_INV"),"average"==e?t.define("BM_AVERAGE"):t.removeDefine("BM_AVERAGE"),"add"==e?t.define("BM_ADD"):t.removeDefine("BM_ADD"),"substract"==e?t.define("BM_SUBSTRACT"):t.removeDefine("BM_SUBSTRACT"),"difference"==e?t.define("BM_DIFFERENCE"):t.removeDefine("BM_DIFFERENCE"),"negation"==e?t.define("BM_NEGATION"):t.removeDefine("BM_NEGATION"),"exclusion"==e?t.define("BM_EXCLUSION"):t.removeDefine("BM_EXCLUSION"),"lighten"==e?t.define("BM_LIGHTEN"):t.removeDefine("BM_LIGHTEN"),"darken"==e?t.define("BM_DARKEN"):t.removeDefine("BM_DARKEN"),"overlay"==e?t.define("BM_OVERLAY"):t.removeDefine("BM_OVERLAY"),"screen"==e?t.define("BM_SCREEN"):t.removeDefine("BM_SCREEN"),"softlight"==e?t.define("BM_SOFTLIGHT"):t.removeDefine("BM_SOFTLIGHT"),"hardlight"==e?t.define("BM_HARDLIGHT"):t.removeDefine("BM_HARDLIGHT"),"color dodge"==e?t.define("BM_COLORDODGE"):t.removeDefine("BM_COLORDODGE"),"color burn"==e?t.define("BM_COLORBURN"):t.removeDefine("BM_COLORBURN")},lt.AddBlendSelect=function(t,e,i){return t.inValueSelect(e,["normal","lighten","darken","multiply","multiply invert","average","add","substract","difference","negation","exclusion","overlay","screen","color dodge","color burn","softlight","hardlight"],i||"normal")},lt.setupBlending=function(t,e,i,s){t.setPortGroup("Blending",[i,s]),i.onChange=()=>{lt.onChangeBlendSelect(e,i.get());let s=i.get();"normal"==s?s=null:"multiply"==s?s="mul":"multiply invert"==s?s="mulinv":"lighten"==s?s="light":"darken"==s?s="darken":"average"==s?s="avg":"substract"==s?s="sub":"difference"==s?s="diff":"negation"==s||"negation"==s||"negation"==s?s="neg":"exclusion"==s?s="exc":"overlay"==s?s="ovl":"color dodge"==s?s="dodge":"color burn"==s?s="burn":"softlight"==s?s="soft":"hardlight"==s&&(s="hard"),t.setUiAttrib({extendTitle:s})},lt.onChangeBlendSelect(e,i.get())};const ct={"CGL.BLENDMODES":function(){this.name="blendmodes",this.srcHeadFrag=lt.getBlendCode()},"CGL.RANDOM_OLD":function(){this.name="randomNumber",this.srcHeadFrag="".endl()+"float cgl_random(vec2 co)".endl()+"{".endl()+"    return fract(sin(dot(co.xy ,vec2(12.9898,4.1414))) * 432758.5453);".endl()+"}".endl()+"vec3 cgl_random3(vec2 co)".endl()+"{".endl()+"    return vec3( cgl_random(co),cgl_random(co+0.5711),cgl_random(co+1.5711));".endl()+"}"},"CGL.RANDOM_LOW":function(){this.name="randomNumber",this.srcHeadFrag="".endl()+"float cgl_random(vec2 co)".endl()+"{".endl()+"    return fract(sin(dot(co.xy ,vec2(12.9898,4.1414))) * 358.5453);".endl()+"}".endl()+"vec3 cgl_random3(vec2 co)".endl()+"{".endl()+"    return vec3( cgl_random(co),cgl_random(co+0.5711),cgl_random(co+1.5711));".endl()+"}"},"CGL.RANDOM_TEX":function(){this.name="randomNumbertex",this.srcHeadFrag="".endl()+"UNI sampler2D CGLRNDTEX;".endl()+"float cgl_random(vec2 co)".endl()+"{".endl()+"    return texture(CGLRNDTEX,co*5711.0).r;".endl()+"}".endl()+"vec3 cgl_random3(vec2 co)".endl()+"{".endl()+"    return texture(CGLRNDTEX,co*5711.0).rgb;".endl()+"}",this.initUniforms=function(t){return[new st(t,"t","CGLRNDTEX",7)]},this.onBind=function(t,e){$.getRandomTexture(t),t.setTexture(7,$.getRandomTexture(t).tex)}}},ut=function(){return window.performance.now()},_t=function(){return ut()},pt=function(){CABLES.EventTarget.apply(this),this._timeStart=ut(),this._timeOffset=0,this._currentTime=0,this._lastTime=0,this._paused=!0,this._delay=0,this._eventsPaused=!1,this.overwriteTime=-1,this.cbPlayPause=[],this.cbTimeChange=[]};pt.prototype._getTime=function(){return this._lastTime=(ut()-this._timeStart)/1e3,this._lastTime+this._timeOffset},pt.prototype._eventPlayPause=function(){if(this.emitEvent("playPause"),!this._eventsPaused)for(const t in this.cbPlayPause)this.cbPlayPause[t]()},pt.prototype._eventTimeChange=function(){if(!this._eventsPaused)for(const t in this.cbTimeChange)this.cbTimeChange[t]()},pt.prototype.setDelay=function(t){this._delay=t,this._eventTimeChange()},pt.prototype.isPlaying=function(){return!this._paused},pt.prototype.update=function(){if(!this._paused)return this._currentTime=this._getTime(),this._currentTime},pt.prototype.getMillis=function(){return 1e3*this.get()},pt.prototype.get=pt.prototype.getTime=function(){return this.overwriteTime>=0?this.overwriteTime-this._delay:this._currentTime-this._delay},pt.prototype.togglePlay=function(){this._paused?this.play():this.pause()},pt.prototype.setTime=function(t){t<0&&(t=0),this._timeStart=ut(),this._timeOffset=t,this._currentTime=t,this._eventTimeChange()},pt.prototype.setOffset=function(t){this._currentTime+t<0?(this._timeStart=ut(),this._timeOffset=0,this._currentTime=0):(this._timeOffset+=t,this._currentTime=this._lastTime+this._timeOffset),this._eventTimeChange()},pt.prototype.play=function(){this._timeStart=ut(),this._paused=!1,this._eventPlayPause()},pt.prototype.pause=function(){this._timeOffset=this._currentTime,this._paused=!0,this._eventPlayPause()},pt.prototype.pauseEvents=function(t){this._eventsPaused=t},pt.prototype.onPlayPause=function(t){t&&"function"==typeof t&&this.cbPlayPause.push(t)},pt.prototype.onTimeChange=function(t){t&&"function"==typeof t&&this.cbTimeChange.push(t)};const gt=Math.PI/180,dt=(Math.PI,-1!=window.navigator.userAgent.indexOf("Windows")),ft=function(t){let e;if(t.wheelDelta)e=t.wheelDelta%120-0==-0?t.wheelDelta/120:t.wheelDelta/30,e*=-1.5,dt&&(e*=2);else{let i=t.deltaY;t.shiftKey&&(i=t.deltaX);const s=i||t.detail;e=-(s%3?10*s:s/3),e*=-3}return e>20&&(e=20),e<-20&&(e=-20),e},mt=ft,Et=ft,Tt={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},bt=/[&<>"']/g,At=RegExp(bt.source),yt=function(t,e){if(!t)throw new Error("shader constructed without cgl "+e);this._log=new _("cgl_shader"),this._cgl=t,e||this._log.stack("no shader name given"),this._name=e||"unknown",this.glslVersion=0,t.glVersion>1&&(this.glslVersion=300),this.id=x(),this._isValid=!0,this._program=null,this._uniforms=[],this._drawBuffers=[!0],this._defines=[],this._needsRecompile=!0,this._compileReason="initial",this._projMatrixUniform=null,this._mvMatrixUniform=null,this._mMatrixUniform=null,this._vMatrixUniform=null,this._camPosUniform=null,this._normalMatrixUniform=null,this._inverseViewMatrixUniform=null,this._attrVertexPos=-1,this.precision=t.patch.config.glslPrecision||"highp",this._pMatrixState=-1,this._vMatrixState=-1,this._modGroupCount=0,this._feedBackNames=[],this._attributes=[],this.glPrimitive=null,this.offScreenPass=!1,this._extensions=[],this.srcVert=this.getDefaultVertexShader(),this.srcFrag=this.getDefaultFragmentShader(),this.lastCompile=0,this._moduleNames=[],this._modules=[],this._moduleNumId=0,this._libs=[],this._structNames=[],this._structUniformNames=[],this._textureStackUni=[],this._textureStackTex=[],this._textureStackType=[],this._textureStackTexCgl=[],this._tempNormalMatrix=mat4.create(),this._tempCamPosMatrix=mat4.create(),this._tempInverseViewMatrix=mat4.create(),this.setModules(["MODULE_VERTEX_POSITION","MODULE_COLOR","MODULE_BEGIN_FRAG"])};yt.prototype.isValid=function(){return this._isValid},yt.prototype.getCgl=function(){return this._cgl},yt.prototype.getName=function(){return this._name},yt.prototype.enableExtension=function(t){this.setWhyCompile("enable extension "+t),this._needsRecompile=!0,this._extensions.push(t)},yt.prototype.getAttrVertexPos=function(){return this._attrVertexPos},yt.prototype.hasTextureUniforms=function(){for(let t=0;t<this._uniforms.length;t++)if("t"==this._uniforms[t].getType())return!0;return!1},yt.prototype.setWhyCompile=function(t){this._compileReason=t},yt.prototype.copyUniformValues=function(t){for(let e=0;e<t._uniforms.length;e++)this._uniforms[e]&&this.getUniform(t._uniforms[e].getName()).set(t._uniforms[e].getValue());this.popTextures();for(let e=0;e<t._textureStackUni.length;e++)this._textureStackUni[e]=t._textureStackUni[e],this._textureStackTex[e]=t._textureStackTex[e],this._textureStackType[e]=t._textureStackType[e],this._textureStackTexCgl[e]=t._textureStackTexCgl[e]},yt.prototype.copy=function(){const t=new yt(this._cgl,this._name+" copy");t.setSource(this.srcVert,this.srcFrag),t._modules=JSON.parse(JSON.stringify(this._modules)),t._defines=JSON.parse(JSON.stringify(this._defines)),t._modGroupCount=this._modGroupCount,t._moduleNames=this._moduleNames,t.glPrimitive=this.glPrimitive,t.offScreenPass=this.offScreenPass,t._extensions=this._extensions;for(let e=0;e<this._uniforms.length;e++){this._uniforms[e].copy(t).resetLoc()}return this.setWhyCompile("copy"),t._needsRecompile=!0,t},yt.prototype.setSource=function(t,e){this.srcVert=t,this.srcFrag=e,this.setWhyCompile("Source changed"),this._needsRecompile=!0},yt.prototype._addLibs=function(t){for(const e in ct)if(t.indexOf(e)>-1){const i=new ct[e];t=t.replace("{{"+e+"}}",i.srcHeadFrag),this._libs.push(i),i.initUniforms&&i.initUniforms(this)}return t},yt.prototype.createStructUniforms=function(){let t="",e="";this._structNames=[],this._injectedStringsFrag={},this._injectedStringsVert={},this._structUniformNamesIndicesFrag=[],this._structUniformNamesIndicesVert=[];for(let i=0;i<this._uniforms.length;i++)if(this._uniforms[i].isStructMember()){const s="{{INJECTION_POINT_STRUCT_"+this._uniforms[i]._structName+"}}";if(-1===this._structNames.indexOf(this._uniforms[i]._structName)){const r="struct "+this._uniforms[i]._structName+" {".endl()+s+"};".endl().endl();"both"!==this._uniforms[i].getShaderType()&&"frag"!==this._uniforms[i].getShaderType()||(t=t.concat(r)),"both"!==this._uniforms[i].getShaderType()&&"vert"!==this._uniforms[i].getShaderType()||(e=e.concat(r)),this._structNames.push(this._uniforms[i]._structName),this._injectedStringsFrag[this._uniforms[i]._structName]=[],this._injectedStringsVert[this._uniforms[i]._structName]=[]}let r="";this._uniforms[i].comment&&(r=" // "+this._uniforms[i].comment);let n="";if(null==this._uniforms[i].getGlslTypeString()&&(n+="//"),n+="  "+this._uniforms[i].getGlslTypeString()+" "+this._uniforms[i]._propertyName+";"+r,"both"===this._uniforms[i].getShaderType()){if(-1===this._injectedStringsFrag[this._uniforms[i]._structName].indexOf(n)&&-1===this._injectedStringsVert[this._uniforms[i]._structName].indexOf(n)){const r=t.lastIndexOf(s),o=e.lastIndexOf(s);t=t.slice(0,r)+n+t.slice(r-1),e=e.slice(0,o)+n+e.slice(o-1),this._injectedStringsFrag[this._uniforms[i]._structName].push(n),this._injectedStringsVert[this._uniforms[i]._structName].push(n)}-1===this._structUniformNamesIndicesFrag.indexOf(i)&&this._structUniformNamesIndicesFrag.push(i),-1===this._structUniformNamesIndicesVert.indexOf(i)&&this._structUniformNamesIndicesVert.push(i)}else if("frag"===this._uniforms[i].getShaderType()){if(-1===this._injectedStringsFrag[this._uniforms[i]._structName].indexOf(n)){const e=t.lastIndexOf(s);t=t.slice(0,e)+n+t.slice(e-1),this._injectedStringsFrag[this._uniforms[i]._structName].push(n)}-1===this._structUniformNamesIndicesFrag.indexOf(i)&&this._structUniformNamesIndicesFrag.push(i)}else if("vert"===this._uniforms[i].getShaderType()){if(-1===this._injectedStringsVert[this._uniforms[i]._structName].indexOf(n)){const t=e.lastIndexOf(s);e=e.slice(0,t)+n+e.slice(t-1),this._injectedStringsVert[this._uniforms[i]._structName].push(n)}-1===this._structUniformNamesIndicesVert.indexOf(i)&&this._structUniformNamesIndicesVert.push(i)}}this._uniDeclarationsFrag=[],this._uniDeclarationsVert=[];for(let e=0;e<this._structUniformNamesIndicesFrag.length;e+=1){const i=this._structUniformNamesIndicesFrag[e],s="UNI "+this._uniforms[i]._structName+" "+this._uniforms[i]._structUniformName+";".endl();if(-1===this._uniDeclarationsFrag.indexOf(s)){const e="{{INJECTION_POINT_STRUCT_"+this._uniforms[i]._structName+"}}";t=t.replace(e,""),t+=s,this._uniDeclarationsFrag.push(s)}}for(let t=0;t<this._structUniformNamesIndicesVert.length;t+=1){const i=this._structUniformNamesIndicesVert[t],s="UNI "+this._uniforms[i]._structName+" "+this._uniforms[i]._structUniformName+";".endl();if(-1===this._uniDeclarationsVert.indexOf(s)){const t="{{INJECTION_POINT_STRUCT_"+this._uniforms[i]._structName+"}}";e=e.replace(t,""),e+=s,this._uniDeclarationsVert.push(s)}}return[e,t]},yt.prototype.compile=function(){const t=performance.now();this._cgl.printError("shader.compile"),this._cgl.profileData.profileShaderCompiles++,this._cgl.profileData.profileShaderCompileName=this._name+" ["+this._compileReason+"]";let e="";if(this._extensions)for(let t=0;t<this._extensions.length;t++)e+="#extension "+this._extensions[t]+" : enable".endl();let i="";this._defines.length&&(i="\n// cgl generated".endl());for(let t=0;t<this._defines.length;t++)i+="#define "+this._defines[t][0]+" "+this._defines[t][1]+"".endl();const s=this.createStructUniforms();if(this._cgl.printError("createStructUniforms"),this._cgl.profileData.addHeavyEvent("shader compile",this._name+" ["+this._compileReason+"]"),this._compileReason="",this._uniforms){const t=this._uniforms.map(t=>t._name),e=[];for(let i=0;i<this._uniforms.length;i++){const s=this._uniforms[i];t.indexOf(s._name,i+1)>-1&&e.push(i)}for(let t=this._uniforms.length-1;t>=0;t-=1)e.indexOf(t)>-1?this._uniforms.splice(t,1):this._uniforms[t].resetLoc()}this._cgl.printError("uniform resets"),this.hasTextureUniforms()&&(i+="#define HAS_TEXTURES".endl());let r="",n="";if(this.srcFrag||(this._log.error("[cgl shader] has no fragment source!"),this.srcVert=this.getDefaultVertexShader(),this.srcFrag=this.getDefaultFragmentShader()),300==this.glslVersion){let t="";if(this.srcFrag.indexOf("outColor0")>-1&&(this._drawBuffers[0]=!0),this.srcFrag.indexOf("outColor1")>-1&&(this._drawBuffers[1]=!0),this.srcFrag.indexOf("outColor2")>-1&&(this._drawBuffers[2]=!0),this.srcFrag.indexOf("outColor3")>-1&&(this._drawBuffers[3]=!0),1==this._drawBuffers.length)t="out vec4 outColor;".endl(),t+="#define gl_FragColor outColor".endl();else{let e=0;t+="#define MULTI_COLORTARGETS".endl(),t+="vec4 outColor;".endl();for(let i=0;i<this._drawBuffers.length;i++)0==e&&(t+="#define gl_FragColor outColor"+i+"".endl()),t+="layout(location = "+i+") out vec4 outColor"+i+";".endl(),e++}r="#version 300 es".endl()+"// ".endl()+"// vertex shader "+this._name.endl()+"// ".endl()+"precision "+this.precision+" float;".endl()+"".endl()+"#define WEBGL2".endl()+"#define texture2D texture".endl()+"#define UNI uniform".endl()+"#define IN in".endl()+"#define OUT out".endl(),n="#version 300 es".endl()+"// ".endl()+"// fragment shader "+this._name.endl()+"// ".endl()+"precision "+this.precision+" float;".endl()+"".endl()+"#define WEBGL2".endl()+"#define texture2D texture".endl()+"#define IN in".endl()+"#define UNI uniform".endl()+t.endl()}else n="".endl()+"// ".endl()+"// fragment shader "+this._name.endl()+"// ".endl()+"#define WEBGL1".endl()+"#define texture texture2D".endl()+"#define outColor gl_FragColor".endl()+"#define IN varying".endl()+"#define UNI uniform".endl(),r="".endl()+"// ".endl()+"// vertex shader "+this._name.endl()+"// ".endl()+"#define WEBGL1".endl()+"#define texture texture2D".endl()+"#define OUT varying".endl()+"#define IN attribute".endl()+"#define UNI uniform".endl();let o="\n// cgl generated".endl(),h="\n// cgl generated".endl();n+="\n// active mods: --------------- ",r+="\n// active mods: --------------- ";let a=!1,l=!1;for(let t=0;t<this._moduleNames.length;t++)for(let e=0;e<this._modules.length;e++)this._modules[e].name==this._moduleNames[t]&&((this._modules[e].srcBodyFrag||this._modules[e].srcHeadFrag)&&(a=!0,n+="\n// "+t+"."+e+". "+this._modules[e].title+" ("+this._modules[e].name+")"),(this._modules[e].srcBodyVert||this._modules[e].srcHeadVert)&&(r+="\n// "+t+"."+e+". "+this._modules[e].title+" ("+this._modules[e].name+")",l=!0));l||(n+="\n// no mods used..."),a||(n+="\n// no mods used..."),n+="\n",r+="\n";for(let t=0;t<this._uniforms.length;t++)if(this._uniforms[t].shaderType&&!this._uniforms[t].isStructMember()){let e="";this._uniforms[t].getGlslTypeString()||(e+="// "),e+="UNI "+this._uniforms[t].getGlslTypeString()+" "+this._uniforms[t].getName();let i="";this._uniforms[t].comment&&(i=" // "+this._uniforms[t].comment),"vert"!=this._uniforms[t].shaderType&&"both"!=this._uniforms[t].shaderType||-1==this.srcVert.indexOf(e)&&-1==this.srcVert.indexOf("uniform "+this._uniforms[t].getGlslTypeString()+" "+this._uniforms[t].getName())&&(o+=e+";"+i.endl()),"frag"!=this._uniforms[t].shaderType&&"both"!=this._uniforms[t].shaderType||-1==this.srcFrag.indexOf(e)&&-1==this.srcFrag.indexOf("uniform "+this._uniforms[t].getGlslTypeString()+" "+this._uniforms[t].getName())&&(h+=e+";"+i.endl())}let c=0,u=0;for(let t=0;t<this._uniforms.length;t++)this._uniforms[t].shaderType&&!this._uniforms[t].isStructMember()&&("vert"!=this._uniforms[t].shaderType&&"both"!=this._uniforms[t].shaderType||u++,"frag"!=this._uniforms[t].shaderType&&"both"!=this._uniforms[t].shaderType||c++);c>=this._cgl.maxUniformsFrag&&this._log.warn("[cgl_shader] num uniforms frag: "+c+" / "+this._cgl.maxUniformsFrag),u>=this._cgl.maxUniformsVert&&this._log.warn("[cgl_shader] num uniforms vert: "+u+" / "+this._cgl.maxUniformsVert),-1==n.indexOf("precision")&&(n="precision "+this.precision+" float;".endl()+n),-1==r.indexOf("precision")&&(r="precision "+this.precision+" float;".endl()+r),/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)&&(n+="#define MOBILE".endl(),r+="#define MOBILE".endl()),r=e+r+i+s[0]+o+"\n// -- \n"+this.srcVert,n=e+n+i+s[1]+h+"\n// -- \n"+this.srcFrag;let _="",p="";this._modules.sort((function(t,e){return t.group-e.group})),this._modules.sort((function(t,e){return t.priority||0-e.priority||0}));let g=!1;for(let t=0;t<this._moduleNames.length;t++){let e="",i="";for(let s=0;s<this._modules.length;s++)if(this._modules[s].name==this._moduleNames[t]){if(_+="\n//---- MOD: group:"+this._modules[s].group+": idx:"+s+" - prfx:"+this._modules[s].prefix+" - "+this._modules[s].title+" ------\n",p+="\n//---- MOD: group:"+this._modules[s].group+": idx:"+s+" - prfx:"+this._modules[s].prefix+" - "+this._modules[s].title+" ------\n",e+="\n\n//---- MOD: "+this._modules[s].title+" / "+this._modules[s].priority+" ------\n",i+="\n\n//---- MOD: "+this._modules[s].title+" / "+this._modules[s].priority+" ------\n",!g){g=!0;for(let t=0;t<this._attributes.length;t++)this._attributes[t].name&&this._attributes[t].type&&(_+="".endl()+"#ifndef ATTRIB_"+this._attributes[t].name.endl()+"  #define ATTRIB_"+this._attributes[t].name.endl()+"  IN "+this._attributes[t].type+" "+this._attributes[t].name+";".endl()+"#endif",this._attributes[t].nameFrag&&(_+="".endl()+"#ifndef ATTRIB_"+this._attributes[t].nameFrag.endl()+"  #define ATTRIB_"+this._attributes[t].nameFrag.endl()+"  OUT "+this._attributes[t].type+" "+this._attributes[t].nameFrag+";".endl()+"#endif",e+="".endl()+this._attributes[t].nameFrag+"="+this._attributes[t].name+";"),p+="".endl()+"#ifndef ATTRIB_"+this._attributes[t].nameFrag.endl()+"  #define ATTRIB_"+this._attributes[t].nameFrag.endl()+"  IN "+this._attributes[t].type+" "+this._attributes[t].nameFrag+";".endl()+"#endif")}_+=this._modules[s].srcHeadVert||"",p+=this._modules[s].srcHeadFrag||"",e+=this._modules[s].srcBodyVert||"",i+=this._modules[s].srcBodyFrag||"",_+="\n//---- end mod ------\n",p+="\n//---- end mod ------\n",e+="\n//---- end mod ------\n",i+="\n//---- end mod ------\n",e=e.replace(/{{mod}}/g,this._modules[s].prefix),i=i.replace(/{{mod}}/g,this._modules[s].prefix),_=_.replace(/{{mod}}/g,this._modules[s].prefix),p=p.replace(/{{mod}}/g,this._modules[s].prefix),e=e.replace(/MOD_/g,this._modules[s].prefix),i=i.replace(/MOD_/g,this._modules[s].prefix),_=_.replace(/MOD_/g,this._modules[s].prefix),p=p.replace(/MOD_/g,this._modules[s].prefix)}r=r.replace("{{"+this._moduleNames[t]+"}}",e),n=n.replace("{{"+this._moduleNames[t]+"}}",i)}if(r=r.replace("{{MODULES_HEAD}}",_),n=n.replace("{{MODULES_HEAD}}",p),r=this._addLibs(r),n=this._addLibs(n),this._program){this._program=this._createProgram(r,n),this._projMatrixUniform=null;for(let t=0;t<this._uniforms.length;t++)this._uniforms[t].resetLoc()}else this._program=this._createProgram(r,n);this.finalShaderFrag=n,this.finalShaderVert=r,ot.lastMesh=null,ot.lastShader=null,this._needsRecompile=!1,this.lastCompile=_t(),this._cgl.profileData.shaderCompileTime+=performance.now()-t},yt.hasChanged=function(){return this._needsRecompile},yt.prototype.bind=function(){if(this._isValid&&(ot.lastShader=this,this._program&&!this._needsRecompile||this.compile(),this._isValid)){if(!this._projMatrixUniform){this._attrVertexPos=this._cgl.glGetAttribLocation(this._program,nt.SHADER.SHADERVAR_VERTEX_POSITION),this._projMatrixUniform=this._cgl.gl.getUniformLocation(this._program,nt.SHADER.SHADERVAR_UNI_PROJMAT),this._mvMatrixUniform=this._cgl.gl.getUniformLocation(this._program,"mvMatrix"),this._vMatrixUniform=this._cgl.gl.getUniformLocation(this._program,nt.SHADER.SHADERVAR_UNI_VIEWMAT),this._mMatrixUniform=this._cgl.gl.getUniformLocation(this._program,nt.SHADER.SHADERVAR_UNI_MODELMAT),this._camPosUniform=this._cgl.gl.getUniformLocation(this._program,nt.SHADER.SHADERVAR_UNI_VIEWPOS),this._normalMatrixUniform=this._cgl.gl.getUniformLocation(this._program,nt.SHADER.SHADERVAR_UNI_NORMALMAT),this._inverseViewMatrixUniform=this._cgl.gl.getUniformLocation(this._program,nt.SHADER.SHADERVAR_UNI_INVVIEWMAT);for(let t=0;t<this._uniforms.length;t++)this._uniforms[t].needsUpdate=!0}this._cgl.currentProgram!=this._program&&(this._cgl.profileData.profileShaderBinds++,this._cgl.gl.useProgram(this._program),this._cgl.currentProgram=this._program);for(let t=0;t<this._uniforms.length;t++)this._uniforms[t].needsUpdate&&this._uniforms[t].updateValue();if(this._pMatrixState!=this._cgl.getProjectionMatrixStateCount()&&(this._pMatrixState=this._cgl.getProjectionMatrixStateCount(),this._cgl.gl.uniformMatrix4fv(this._projMatrixUniform,!1,this._cgl.pMatrix),this._cgl.profileData.profileMVPMatrixCount++),this._vMatrixUniform)this._vMatrixState!=this._cgl.getViewMatrixStateCount()&&(this._cgl.gl.uniformMatrix4fv(this._vMatrixUniform,!1,this._cgl.vMatrix),this._cgl.profileData.profileMVPMatrixCount++,this._vMatrixState=this._cgl.getViewMatrixStateCount(),this._inverseViewMatrixUniform&&(mat4.invert(this._tempInverseViewMatrix,this._cgl.vMatrix),this._cgl.gl.uniformMatrix4fv(this._inverseViewMatrixUniform,!1,this._tempInverseViewMatrix),this._cgl.profileData.profileMVPMatrixCount++)),this._cgl.gl.uniformMatrix4fv(this._mMatrixUniform,!1,this._cgl.mMatrix),this._cgl.profileData.profileMVPMatrixCount++,this._camPosUniform&&(mat4.invert(this._tempCamPosMatrix,this._cgl.vMatrix),this._cgl.gl.uniform3f(this._camPosUniform,this._tempCamPosMatrix[12],this._tempCamPosMatrix[13],this._tempCamPosMatrix[14]),this._cgl.profileData.profileMVPMatrixCount++);else{const t=mat4.create();mat4.mul(t,this._cgl.vMatrix,this._cgl.mMatrix),this._cgl.gl.uniformMatrix4fv(this._mvMatrixUniform,!1,t),this._cgl.profileData.profileMVPMatrixCount++}this._normalMatrixUniform&&(mat4.invert(this._tempNormalMatrix,this._cgl.mMatrix),mat4.transpose(this._tempNormalMatrix,this._tempNormalMatrix),this._cgl.gl.uniformMatrix4fv(this._normalMatrixUniform,!1,this._tempNormalMatrix),this._cgl.profileData.profileMVPMatrixCount++);for(let t=0;t<this._libs.length;t++)this._libs[t].onBind&&this._libs[t].onBind.bind(this._libs[t])(this._cgl,this);this._bindTextures()}},yt.prototype.toggleDefine=function(t,e){e&&"object"==typeof e&&e.addEventListener&&(e.changeListener&&e.removeEventListener(e.changeListener),e.onToggleDefine=e=>{this.toggleDefine(t,e)},e.changeListener=e.on("change",e.onToggleDefine),e=e.get()),e?this.define(t):this.removeDefine(t)},yt.prototype.define=function(t,e){null==e&&(e=""),"object"==typeof e&&(e.removeEventListener("change",e.onDefineChange),e.onDefineChange=e=>{this.define(t,e)},e.on("change",e.onDefineChange),e=e.get());for(let i=0;i<this._defines.length;i++){if(this._defines[i][0]==t&&this._defines[i][1]==e)return;if(this._defines[i][0]==t)return this._defines[i][1]=e,this.setWhyCompile("define "+t+" "+e),void(this._needsRecompile=!0)}this.setWhyCompile("define "+t+" "+e),this._needsRecompile=!0,this._defines.push([t,e])},yt.prototype.getDefines=function(){return this._defines},yt.prototype.getDefine=function(t){for(let e=0;e<this._defines.length;e++)if(this._defines[e][0]==t)return this._defines[e][1];return null},yt.prototype.hasDefine=function(t){for(let e=0;e<this._defines.length;e++)if(this._defines[e][0]==t)return!0},yt.prototype.removeDefine=function(t){for(let e=0;e<this._defines.length;e++)if(this._defines[e][0]==t)return this._defines.splice(e,1),this._needsRecompile=!0,void this.setWhyCompile("define removed:"+t)},yt.prototype.removeModule=function(t){for(let e=0;e<this._modules.length;e++)if(t&&t.id&&(this._modules[e].id==t.id||!this._modules[e])){let i=!0;for(;i;){i=!1;for(let e=0;e<this._uniforms.length;e++)0!=this._uniforms[e].getName().indexOf(t.prefix)||(this._uniforms.splice(e,1),i=!0)}this._needsRecompile=!0,this.setWhyCompile("remove module "+t.title),this._modules.splice(e,1);break}},yt.prototype.getNumModules=function(){return this._modules.length},yt.prototype.getCurrentModules=function(){return this._modules},yt.prototype.addModule=function(t,e){return t.id||(t.id=A()),t.numId||(t.numId=this._moduleNumId),t.num||(t.num=this._modules.length),e&&!e.group&&(e.group=x()),t.group||(t.group=e?e.group:x()),t.prefix="mod"+t.group+"_",this._modules.push(t),this._needsRecompile=!0,this.setWhyCompile("add module "+t.title),this._moduleNumId++,t},yt.prototype.hasModule=function(t){for(let e=0;e<this._modules.length;e++)if(this._modules[e].id==t)return!0;return!1},yt.prototype.setModules=function(t){this._moduleNames=t},yt.prototype.dispose=function(){this._cgl.gl.deleteProgram(this._program)},yt.prototype.needsRecompile=function(){return this._needsRecompile},yt.prototype.setDrawBuffers=function(t){if(this._drawBuffers.length!==t.length)return this._drawBuffers=t,this._needsRecompile=!0,void this.setWhyCompile("setDrawBuffers");for(let e=0;e<t;e++)if(t[e]!==this._drawBuffers[e])return this._drawBuffers=t,this._needsRecompile=!0,void this.setWhyCompile("setDrawBuffers")},yt.prototype.getUniforms=function(){return this._uniforms},yt.prototype.getUniform=function(t){for(let e=0;e<this._uniforms.length;e++)if(this._uniforms[e].getName()==t)return this._uniforms[e];return null},yt.prototype.removeUniform=function(t){for(let e=0;e<this._uniforms.length;e++)this._uniforms[e].getName()==t&&this._uniforms.splice(e,1);this._needsRecompile=!0,this.setWhyCompile("remove uniform "+t)},yt.prototype._addUniform=function(t){this._uniforms.push(t),this.setWhyCompile("add uniform "+name),this._needsRecompile=!0},yt.prototype.addUniformFrag=function(t,e,i,s,r,n){const o=new CGL.Uniform(this,t,e,i,s,r,n);return o.shaderType="frag",o},yt.prototype.addUniformVert=function(t,e,i,s,r,n){const o=new CGL.Uniform(this,t,e,i,s,r,n);return o.shaderType="vert",o},yt.prototype.addUniformBoth=function(t,e,i,s,r,n){const o=new CGL.Uniform(this,t,e,i,s,r,n);return o.shaderType="both",o},yt.prototype.addUniformStructFrag=function(t,e,i){const s={};if(!i)return s;for(let r=0;r<i.length;r+=1){const n=i[r];if(!this.hasUniform(e+"."+n.name)){const i=new CGL.Uniform(this,n.type,e+"."+n.name,n.v1,n.v2,n.v3,n.v4,e,t,n.name);i.shaderType="frag",s[e+"."+n.name]=i}}return s},yt.prototype.addUniformStructVert=function(t,e,i){const s={};if(!i)return s;for(let r=0;r<i.length;r+=1){const n=i[r];if(!this.hasUniform(e+"."+n.name)){const i=new CGL.Uniform(this,n.type,e+"."+n.name,n.v1,n.v2,n.v3,n.v4,e,t,n.name);i.shaderType="vert",s[e+"."+n.name]=i}}return s},yt.prototype.addUniformStructBoth=function(t,e,i){const s={};if(!i)return s;for(let r=0;r<i.length;r+=1){const n=i[r];if("2i"!==n.type&&"i"!==n.type&&"3i"!==n.type||this._log.error("Adding an integer struct member to both shaders can potentially error. Please use different structs for each shader. Error occured in struct:",t," with member:",n.name," of type:",n.type,"."),!this.hasUniform(e+"."+n.name)){const i=new CGL.Uniform(this,n.type,e+"."+n.name,n.v1,n.v2,n.v3,n.v4,e,t,n.name);i.shaderType="both",s[e+"."+n.name]=i}}return s},yt.prototype.hasUniform=function(t){for(let e=0;e<this._uniforms.length;e++)if(this._uniforms[e].getName()==t)return!0;return!1},yt.prototype._createProgram=function(t,e){this._cgl.printError("_createprogram");const i=this._cgl.gl.createProgram();return this._cgl.printError("gl.createprogram"),this.vshader=yt.createShader(this._cgl,t,this._cgl.gl.VERTEX_SHADER,this),this._cgl.printError("createshader"),this.fshader=yt.createShader(this._cgl,e,this._cgl.gl.FRAGMENT_SHADER,this),this._cgl.printError("createshader"),this._cgl.gl.attachShader(i,this.vshader),this._cgl.printError("attachshader "),this._cgl.gl.attachShader(i,this.fshader),this._cgl.printError("attachshader "),this._linkProgram(i,t,e),this._cgl.printError("shader linkprogram err"),i},yt.prototype.hasErrors=function(){return this._hasErrors},yt.prototype._linkProgram=function(t,e,i){this._cgl.printError("_linkprogram"),this._feedBackNames.length>0&&this._cgl.gl.transformFeedbackVaryings(t,this._feedBackNames,this._cgl.gl.SEPARATE_ATTRIBS),this._cgl.gl.linkProgram(t),this._cgl.printError("gl.linkprogram"),this._isValid=!0,this._hasErrors=!1,!1!==this._cgl.patch.config.glValidateShader&&(this._cgl.gl.validateProgram(t),this._cgl.gl.getProgramParameter(t,this._cgl.gl.LINK_STATUS)||(this._hasErrors=!0,this._log.warn(this._cgl.gl.getShaderInfoLog(this.fshader)||"empty shader infolog"),this._log.warn(this._cgl.gl.getShaderInfoLog(this.vshader)||"empty shader infolog"),this._log.error(this._name+" shader linking fail..."),console.log("srcFrag",i),console.log("srcVert",e),console.log(this._name+" programinfo: ",this._cgl.gl.getProgramInfoLog(t)),console.log("--------------------------------------"),console.log(this),console.log("--------------------------------------"),this._isValid=!1,this._name="errorshader",this.setSource(yt.getDefaultVertexShader(),yt.getErrorFragmentShader()),this._cgl.printError("shader link err")))},yt.prototype.getProgram=function(){return this._program},yt.prototype.setFeedbackNames=function(t){this.setWhyCompile("setFeedbackNames"),this._needsRecompile=!0,this._feedBackNames=t},yt.prototype.getDefaultVertexShader=yt.getDefaultVertexShader=function(){return"".endl()+"{{MODULES_HEAD}}".endl()+"IN vec3 vPosition;".endl()+"IN vec2 attrTexCoord;".endl()+"IN vec3 attrVertNormal;".endl()+"IN vec3 attrTangent,attrBiTangent;".endl()+"IN float attrVertIndex;".endl()+"OUT vec2 texCoord;".endl()+"OUT vec3 norm;".endl()+"UNI mat4 projMatrix;".endl()+"UNI mat4 viewMatrix;".endl()+"UNI mat4 modelMatrix;".endl()+"void main()".endl()+"{".endl()+"    texCoord=attrTexCoord;".endl()+"    norm=attrVertNormal;".endl()+"    vec4 pos=vec4(vPosition,  1.0);".endl()+"    vec3 tangent=attrTangent;".endl()+"    vec3 bitangent=attrBiTangent;".endl()+"    mat4 mMatrix=modelMatrix;".endl()+"    {{MODULE_VERTEX_POSITION}}".endl()+"    gl_Position = projMatrix * (viewMatrix*mMatrix) * pos;".endl()+"}"},yt.prototype.getDefaultFragmentShader=yt.getDefaultFragmentShader=function(t,e,i){return null==t&&(t=.5,e=.5,i=.5),"".endl()+"IN vec2 texCoord;".endl()+"{{MODULES_HEAD}}".endl()+"void main()".endl()+"{".endl()+"    vec4 col=vec4("+t+","+e+","+i+",1.0);".endl()+"    {{MODULE_COLOR}}".endl()+"    outColor = col;".endl()+"}"},yt.prototype.addAttribute=function(t){for(let e=0;e<this._attributes.length;e++)if(this._attributes[e].name==t.name&&this._attributes[e].nameFrag==t.nameFrag)return;this._attributes.push(t),this._needsRecompile=!0,this.setWhyCompile("addAttribute")},yt.prototype.bindTextures=yt.prototype._bindTextures=function(){this._textureStackTex.length>this._cgl.maxTextureUnits&&this._log.warn("[shader._bindTextures] too many textures bound",this._textureStackTex.length+"/"+this._cgl.maxTextureUnits);for(let t=0;t<this._textureStackTex.length;t++)if(this._textureStackTex[t]||this._textureStackTexCgl[t]){let e=this._textureStackTex[t];this._textureStackTexCgl[t]&&(e=this._textureStackTexCgl[t].tex||CGL.Texture.getEmptyTexture(this._cgl).tex);let i=!0;this._textureStackUni[t]?(this._textureStackUni[t].setValue(t),i=this._cgl.setTexture(t,e,this._textureStackType[t])):(this._log.warn("no uniform for pushtexture",this._name),i=this._cgl.setTexture(t,e,this._textureStackType[t])),i||this._log.warn("tex bind failed",this.getName(),this._textureStackUni[t])}else this._log.warn("no texture for pushtexture",this._name)},yt.prototype.setUniformTexture=function(t,e){for(let i=0;i<this._textureStackTex.length;i++)if(this._textureStackUni[i]==t){const t=this._textureStackTex[i];return this._textureStackTex[i]=e,t}return null},yt.prototype.pushTexture=function(t,e,i){if(!t)throw new Error("no uniform given to texturestack");if(e){if(!(e.hasOwnProperty("tex")||e instanceof WebGLTexture))return this._log.warn(new Error("invalid texture").stack),void this._log.warn("[cgl_shader] invalid texture...",e);this._textureStackUni.push(t),e.hasOwnProperty("tex")?(this._textureStackTexCgl.push(e),this._textureStackTex.push(null)):(this._textureStackTexCgl.push(null),this._textureStackTex.push(e)),this._textureStackType.push(i)}},yt.prototype.popTexture=function(){this._textureStackUni.pop(),this._textureStackTex.pop(),this._textureStackType.pop()},yt.prototype.popTextures=function(){this._textureStackTex.length=this._textureStackTexCgl.length=this._textureStackType.length=this._textureStackUni.length=0},yt.getErrorFragmentShader=function(){return"".endl()+"void main()".endl()+"{".endl()+"   float g=mod((gl_FragCoord.y+gl_FragCoord.x),50.0)/50.0;".endl()+"   g= step(0.1,g);".endl()+"   outColor = vec4( g+0.5, 0.0, 0.0, 1.0);".endl()+"}"},yt.createShader=function(t,e,i,s){if(t.aborted)return;const r=t.gl.createShader(i);if(t.gl.shaderSource(r,e),t.gl.compileShader(r),!t.gl.getShaderParameter(r,t.gl.COMPILE_STATUS)){console.log("compile status: "),i==t.gl.VERTEX_SHADER&&console.log("VERTEX_SHADER"),i==t.gl.FRAGMENT_SHADER&&console.log("FRAGMENT_SHADER");let o=t.gl.getShaderInfoLog(r)||"empty shader info log";const h=function(t){const e=[],i=t.split("\n");for(const t in i){const s=i[t].split(":");parseInt(s[2],10)&&e.push(parseInt(s[2],10))}return e}(o);let a='<div class="shaderErrorCode">';const l=e.match(/^.*((\r\n|\n|\r)|$)/gm);for(const t in l){const e=parseInt(t,10)+1,i=e+": "+l[t];console.log(i);let s=!1;for(const t in h)h[t]==e&&(s=!0);s&&(a+='<span class="error">'),a+=(n=i)&&At.test(n)?n.replace(bt,(function(t){return Tt[t]})):n||"",s&&(a+="</span>")}console.warn(o),o=o.replace(/\n/g,"<br/>"),a=o+"<br/>"+a+"<br/><br/>",t.patch.emitEvent("criticalError","Shader error "+this._name,a),t.patch.isEditorMode()&&console.log("Shader error "+this._name,a),a+="</div>",this._name="errorshader",s.setSource(yt.getDefaultVertexShader(),yt.getErrorFragmentShader())}var n;return r};const xt=function(){this._arr=[mat4.create()],this._index=0,this.stateCounter=0};xt.prototype.push=function(t){if(this._index++,this.stateCounter++,this._index==this._arr.length){const t=mat4.create();this._arr.push(t)}return mat4.copy(this._arr[this._index],t||this._arr[this._index-1]),this._arr[this._index]},xt.prototype.pop=function(){return this.stateCounter++,this._index--,this._index<0&&(this._index=0),this._arr[this._index]},xt.prototype.length=function(){return this._index};class vt{constructor(t){this._cgl=t,this._lastTime=0,this.pause=!1,this.profileUniformCount=0,this.profileShaderBinds=0,this.profileUniformCount=0,this.profileShaderCompiles=0,this.profileVideosPlaying=0,this.profileMVPMatrixCount=0,this.profileEffectBuffercreate=0,this.profileShaderGetUniform=0,this.profileFrameBuffercreate=0,this.profileMeshSetGeom=0,this.profileTextureNew=0,this.profileGenMipMap=0,this.profileOnAnimFrameOps=0,this.profileMainloopMs=0,this.profileMeshDraw=0,this.profileTextureEffect=0,this.profileTexPreviews=0,this.shaderCompileTime=0,this.profileMeshNumElements=0,this.profileMeshAttributes=0,this.profileSingleMeshAttribute=[],this.heavyEvents=[],this.doProfileGlQuery=!1,this.glQueryData={}}clear(){this.profileSingleMeshAttribute={},this.profileMeshAttributes=0,this.profileUniformCount=0,this.profileShaderGetUniform=0,this.profileShaderCompiles=0,this.profileShaderBinds=0,this.profileTextureResize=0,this.profileFrameBuffercreate=0,this.profileEffectBuffercreate=0,this.profileTextureDelete=0,this.profileMeshSetGeom=0,this.profileVideosPlaying=0,this.profileMVPMatrixCount=0,this.profileNonTypedAttrib=0,this.profileNonTypedAttribNames="",this.profileTextureNew=0,this.profileGenMipMap=0,this.profileFramebuffer=0,this.profileMeshDraw=0,this.profileTextureEffect=0,this.profileTexPreviews=0,this.profileMeshNumElements=0}clearGlQuery(){for(let t in this.glQueryData)(!this.glQueryData[t].lastClear||performance.now()-this.glQueryData[t].lastClear>1e3)&&(this.glQueryData[t].time=this.glQueryData[t]._times/this.glQueryData[t]._numcount,this.glQueryData[t].num=this.glQueryData[t]._numcount,this.glQueryData[t]._times=0,this.glQueryData[t]._numcount=0,this.glQueryData[t].lastClear=performance.now())}addHeavyEvent(t,e,i){const s={event:t,name:e,info:i,date:performance.now()};this.heavyEvents.push(s),this._cgl.emitEvent("heavyEvent",s)}}const It=function(t){p.apply(this),this.profileData=new vt(this),this._log=new _("cgl_context");const e=[0,0,0,0];this.glVersion=0,this.glUseHalfFloatTex=!1,this.clearCanvasTransparent=!0,this.clearCanvasDepth=!0,this.patch=t,this.debugOneFrame=!1,this.maxTextureUnits=0,this.maxVaryingVectors=0,this.currentProgram=null,this._hadStackError=!1,this.glSlowRenderer=!1,this.temporaryTexture=null,this.frameStore={},this._onetimeCallbacks=[],this.gl=null,this._cursor="auto",this._currentCursor="",this.pMatrix=mat4.create(),this.mMatrix=mat4.create(),this.vMatrix=mat4.create(),this._textureslots=[],this._pMatrixStack=new xt,this._mMatrixStack=new xt,this._vMatrixStack=new xt,this._glFrameBufferStack=[],this._frameBufferStack=[],this._shaderStack=[],this._stackDepthTest=[],Object.defineProperty(this,"mvMatrix",{get(){return this.mMatrix},set(t){this.mMatrix=t}}),this.canvas=null,this.pixelDensity=1,mat4.identity(this.mMatrix),mat4.identity(this.vMatrix);const i=new yt(this,"simpleshader");i.setModules(["MODULE_VERTEX_POSITION","MODULE_COLOR","MODULE_BEGIN_FRAG"]),i.setSource(yt.getDefaultVertexShader(),yt.getDefaultFragmentShader());let s=i;this.aborted=!1;const r=[];this.addEventListener=function(t,e){"resize"==t&&r.push(e)},this.removeEventListener=function(t,e){if("resize"==t)for(const t in r)if(r[t]==e)return void r.splice(t,1)},this.exitError=function(t,e){this.patch.exitError(t,e),this.aborted=!0},this.setCanvas=function(t){if(this.canvas="string"==typeof t?document.getElementById(t):t,this.patch.config.canvas||(this.patch.config.canvas={}),this.patch.config.canvas.hasOwnProperty("preserveDrawingBuffer")||(this.patch.config.canvas.preserveDrawingBuffer=!1),this.patch.config.canvas.hasOwnProperty("premultipliedAlpha")||(this.patch.config.canvas.premultipliedAlpha=!1),this.patch.config.canvas.hasOwnProperty("alpha")||(this.patch.config.canvas.alpha=!1),this.patch.config.hasOwnProperty("clearCanvasColor")&&(this.clearCanvasTransparent=this.patch.config.clearCanvasColor),this.patch.config.hasOwnProperty("clearCanvasDepth")&&(this.clearCanvasDepth=this.patch.config.clearCanvasDepth),this.patch.config.canvas.forceWebGl1||(this.gl=this.canvas.getContext("webgl2",this.patch.config.canvas)),this.gl&&"WebGL 1.0"!=this.gl.getParameter(this.gl.VERSION)?this.glVersion=2:(this.gl=this.canvas.getContext("webgl",this.patch.config.canvas)||this.canvas.getContext("experimental-webgl",this.patch.config.canvas),this.glVersion=1,/^((?!chrome|android).)*safari/i.test(navigator.userAgent)&&(navigator.userAgent.match(/iPad/i)||navigator.userAgent.match(/iPhone/i))&&(this.glUseHalfFloatTex=!0),/iPad|iPhone|iPod/.test(navigator.userAgent)&&!window.MSStream&&(this.patch.config.canvas.hasOwnProperty("powerPreference")||(this.patch.config.canvas.powerPreference="high-performance"))),!this.gl)return void this.exitError("NO_WEBGL","sorry, could not initialize WebGL. Please check if your Browser supports WebGL or try to restart your browser.");const e=this.gl.getExtension("WEBGL_debug_renderer_info");if(e){"Google SwiftShader"===this.gl.getParameter(e.UNMASKED_RENDERER_WEBGL)&&(this.glSlowRenderer=!0)}this.gl.getExtension("OES_standard_derivatives");const i=this.gl.getExtension("ANGLE_instanced_arrays")||this.gl;this.canvas.addEventListener("webglcontextlost",t=>{this._log.error("canvas lost...",t),this.aborted=!0}),this.maxVaryingVectors=this.gl.getParameter(this.gl.MAX_VARYING_VECTORS),this.maxTextureUnits=this.gl.getParameter(this.gl.MAX_TEXTURE_IMAGE_UNITS),this.maxTexSize=this.gl.getParameter(this.gl.MAX_TEXTURE_SIZE),this.maxUniformsFrag=this.gl.getParameter(this.gl.MAX_FRAGMENT_UNIFORM_VECTORS),this.maxUniformsVert=this.gl.getParameter(this.gl.MAX_VERTEX_UNIFORM_VECTORS),this.maxSamples=0,this.gl.MAX_SAMPLES&&(this.maxSamples=this.gl.getParameter(this.gl.MAX_SAMPLES)),i.vertexAttribDivisorANGLE&&(this.gl.vertexAttribDivisor=i.vertexAttribDivisorANGLE.bind(i),this.gl.drawElementsInstanced=i.drawElementsInstancedANGLE.bind(i)),this.updateSize()},this.updateSize=function(){this.canvas.width=this.canvasWidth=this.canvas.clientWidth*this.pixelDensity,this.canvas.height=this.canvasHeight=this.canvas.clientHeight*this.pixelDensity},this.canvasWidth=-1,this.canvasHeight=-1,this.canvasScale=1;let n=-1,o=-1;this.getViewPort=function(){return e},this.resetViewPort=function(){this.gl.viewport(e[0],e[1],e[2],e[3])},this.setViewPort=function(t,i,s,r){e[0]=Math.round(t),e[1]=Math.round(i),e[2]=Math.round(s),e[3]=Math.round(r),this.gl.viewport(e[0],e[1],e[2],e[3])},this.screenShot=function(t,e,i,s){e&&(this.gl.clearColor(1,1,1,1),this.gl.colorMask(!1,!1,!1,!0),this.gl.clear(this.gl.COLOR_BUFFER_BIT),this.gl.colorMask(!0,!0,!0,!0)),this.canvas&&this.canvas.toBlob&&this.canvas.toBlob(e=>{t?t(e):this._log.log("no screenshot callback...")},i,s)},this.endFrame=function(){if(this.patch.isEditorMode()&&CABLES.GL_MARKER.drawMarkerLayer(this),this.setPreviousShader(),this._vMatrixStack.length()>0&&this.logStackError("view matrix stack length !=0 at end of rendering..."),this._mMatrixStack.length()>0&&this.logStackError("mvmatrix stack length !=0 at end of rendering..."),this._pMatrixStack.length()>0&&this.logStackError("pmatrix stack length !=0 at end of rendering..."),this._glFrameBufferStack.length>0&&this.logStackError("glFrameBuffer stack length !=0 at end of rendering..."),this._stackDepthTest.length>0&&this.logStackError("depthtest stack length !=0 at end of rendering..."),this._stackDepthWrite.length>0&&this.logStackError("depthwrite stack length !=0 at end of rendering..."),this._stackDepthFunc.length>0&&this.logStackError("depthfunc stack length !=0 at end of rendering..."),this._stackBlend.length>0&&this.logStackError("blend stack length !=0 at end of rendering..."),this._stackBlendMode.length>0&&this.logStackError("blendMode stack length !=0 at end of rendering..."),this._shaderStack.length>0&&this.logStackError("this._shaderStack length !=0 at end of rendering..."),this._stackCullFace.length>0&&this.logStackError("this._stackCullFace length !=0 at end of rendering..."),this._stackCullFaceFacing.length>0&&this.logStackError("this._stackCullFaceFacing length !=0 at end of rendering..."),this._frameStarted=!1,n!=this.canvasWidth||o!=this.canvasHeight){n=this.canvasWidth,o=this.canvasHeight,this.setSize(this.canvasWidth/this.pixelDensity,this.canvasHeight/this.pixelDensity),this.updateSize();for(let t=0;t<r.length;t++)r[t]()}this._cursor!=this._currentCursor&&(this._currentCursor=this.canvas.style.cursor=this._cursor)},this.logStackError=function(t){this._hadStackError||(this._hadStackError=!0,this._log.warn("["+this.canvas.id+"]: ",t))},this.getShader=function(){if(s&&(!this.frameStore||!0===this.frameStore.renderOffscreen==s.offScreenPass==!0))return s;for(let t=this._shaderStack.length-1;t>=0;t--)if(this._shaderStack[t]&&this.frameStore.renderOffscreen==this._shaderStack[t].offScreenPass)return this._shaderStack[t]},this.getDefaultShader=function(){return i},this.pushShader=this.setShader=function(t){this._shaderStack.push(t),s=t},this.popShader=this.setPreviousShader=function(){if(0===this._shaderStack.length)throw new Error("Invalid shader stack pop!");this._shaderStack.pop(),s=this._shaderStack[this._shaderStack.length-1]},this.pushGlFrameBuffer=function(t){this._glFrameBufferStack.push(t)},this.popGlFrameBuffer=function(){return 0==this._glFrameBufferStack.length?null:(this._glFrameBufferStack.pop(),this._glFrameBufferStack[this._glFrameBufferStack.length-1])},this.getCurrentGlFrameBuffer=function(){return 0===this._glFrameBufferStack.length?null:this._glFrameBufferStack[this._glFrameBufferStack.length-1]},this.pushFrameBuffer=function(t){this._frameBufferStack.push(t)},this.popFrameBuffer=function(){return 0==this._frameBufferStack.length?null:(this._frameBufferStack.pop(),this._frameBufferStack[this._frameBufferStack.length-1])},this.getCurrentFrameBuffer=function(){return 0===this._frameBufferStack.length?null:this._frameBufferStack[this._frameBufferStack.length-1]};const h=vec3.create();vec3.set(h,0,0,2);const a=vec3.create();vec3.set(a,0,0,0),this.renderStart=function(t,e,s){e||(e=a),s||(s=h),this.pushDepthTest(!0),this.pushDepthWrite(!0),this.pushDepthFunc(t.gl.LEQUAL),this.pushCullFaceFacing(t.gl.BACK),this.pushCullFace(!1),this.clearCanvasTransparent&&(t.gl.clearColor(0,0,0,0),t.gl.clear(t.gl.COLOR_BUFFER_BIT)),this.clearCanvasDepth&&t.gl.clear(t.gl.DEPTH_BUFFER_BIT),t.setViewPort(0,0,t.canvasWidth,t.canvasHeight),mat4.perspective(t.pMatrix,45,t.canvasWidth/t.canvasHeight,.1,1e3),mat4.identity(t.mMatrix),mat4.identity(t.vMatrix),mat4.translate(t.mMatrix,t.mMatrix,e),mat4.translate(t.vMatrix,t.vMatrix,s),t.pushPMatrix(),t.pushModelMatrix(),t.pushViewMatrix(),t.pushBlendMode(nt.BLEND_MODES.BLEND_NORMAL,!1);for(let t=0;t<this._textureslots.length;t++)this._textureslots[t]=null;if(this.pushShader(i),this._frameStarted=!0,this._onetimeCallbacks.length>0){for(let t=0;t<this._onetimeCallbacks.length;t++)this._onetimeCallbacks[t]();this._onetimeCallbacks.length=0}this.emitEvent("beginFrame")},this.renderEnd=function(t){t.popViewMatrix(),t.popModelMatrix(),t.popPMatrix(),this.popDepthTest(),this.popDepthWrite(),this.popDepthFunc(),this.popCullFaceFacing(),this.popCullFace(),this.popBlend(),this.popBlendMode(),t.endFrame(),this.emitEvent("endFrame")},this.getTexture=function(t){return this._textureslots[t]},this.checkFrameStarted=function(t){this._frameStarted||(this._log.warn("frame not started "+t),this.patch.printTriggerStack())},this.setTexture=function(t,e,i){return this.checkFrameStarted("cgl setTexture"),null===e&&(e=CGL.Texture.getEmptyTexture(this).tex),this._textureslots[t]!=e&&(this.gl.activeTexture(this.gl.TEXTURE0+t),this.gl.bindTexture(i||this.gl.TEXTURE_2D,e),this._textureslots[t]=e),!0},this.fullScreen=function(){this.canvas.requestFullscreen?this.canvas.requestFullscreen():this.canvas.mozRequestFullScreen?this.canvas.mozRequestFullScreen():this.canvas.webkitRequestFullscreen?this.canvas.webkitRequestFullscreen():this.canvas.msRequestFullscreen&&this.canvas.msRequestFullscreen()},this.setSize=function(t,e,i){i||(this.canvas.style.width=t+"px",this.canvas.style.height=e+"px"),this.canvas.width=t*this.pixelDensity,this.canvas.height=e*this.pixelDensity,this.updateSize()},this._resizeToWindowSize=function(){this.setSize(window.innerWidth,window.innerHeight),this.updateSize()},this._resizeToParentSize=function(){const t=this.canvas.parentElement;t?(this.setSize(t.clientWidth,t.clientHeight),this.updateSize()):this._log.error("cables: can not resize to container element")},this.setAutoResize=function(t){window.removeEventListener("resize",this._resizeToWindowSize.bind(this)),window.removeEventListener("resize",this._resizeToParentSize.bind(this)),"window"==t&&(window.addEventListener("resize",this._resizeToWindowSize.bind(this)),window.addEventListener("orientationchange",this._resizeToWindowSize.bind(this)),this._resizeToWindowSize()),"parent"==t&&(window.addEventListener("resize",this._resizeToParentSize.bind(this)),this._resizeToParentSize())},this.printError=function(t){let e=!1,i=this.gl.getError();if(i!=this.gl.NO_ERROR){let s="";i==this.gl.OUT_OF_MEMORY&&(s="OUT_OF_MEMORY"),i==this.gl.INVALID_ENUM&&(s="INVALID_ENUM"),i==this.gl.INVALID_OPERATION&&(s="INVALID_OPERATION"),i==this.gl.INVALID_FRAMEBUFFER_OPERATION&&(s="INVALID_FRAMEBUFFER_OPERATION"),i==this.gl.INVALID_VALUE&&(s="INVALID_VALUE"),i==this.gl.CONTEXT_LOST_WEBGL&&(this.aborted=!0,s="CONTEXT_LOST_WEBGL"),i==this.gl.NO_ERROR&&(s="NO_ERROR"),e=!0,this._log.warn("gl error ["+this.canvas.id+"]: ",t,i,s),this._loggedGlError||(this.patch.printTriggerStack(),this._log.stack("glerror"),this._loggedGlError=!0)}return i=this.gl.getError(),e},this.saveScreenshot=function(t,e,i,s,r){this.patch.renderOneFrame();let n=this.canvas.clientWidth,o=this.canvas.clientHeight;function h(t,e,i){return Array(e-String(t).length+1).join(i||"0")+t}i&&(this.canvas.width=i,n=i),s&&(this.canvas.height=s,o=s);const a=new Date,l="".concat(String(a.getFullYear())+String(a.getMonth()+1)+String(a.getDate()),"_").concat(h(a.getHours(),2)).concat(h(a.getMinutes(),2)).concat(h(a.getSeconds(),2));t?t+=".png":t="cables_"+l+".png",this.patch.cgl.screenShot(function(i){if(this.canvas.width=n,this.canvas.height=o,i){const s=document.createElement("a");s.download=t,s.href=URL.createObjectURL(i),setTimeout((function(){s.click(),e&&e(i)}),100)}else this._log.log("screenshot: no blob")}.bind(this),r)}};It.prototype.addNextFrameOnceCallback=function(t){t&&this._onetimeCallbacks.push(t)},It.prototype.pushViewMatrix=function(){this.vMatrix=this._vMatrixStack.push(this.vMatrix)},It.prototype.popViewMatrix=function(){this.vMatrix=this._vMatrixStack.pop()},It.prototype.getViewMatrixStateCount=function(){return this._vMatrixStack.stateCounter},It.prototype.pushPMatrix=function(){this.pMatrix=this._pMatrixStack.push(this.pMatrix)},It.prototype.popPMatrix=function(){return this.pMatrix=this._pMatrixStack.pop(),this.pMatrix},It.prototype.getProjectionMatrixStateCount=function(){return this._pMatrixStack.stateCounter},It.prototype.pushMvMatrix=It.prototype.pushModelMatrix=function(){this.mMatrix=this._mMatrixStack.push(this.mMatrix)},It.prototype.popMvMatrix=It.prototype.popmMatrix=It.prototype.popModelMatrix=function(){return this.mMatrix=this._mMatrixStack.pop(),this.mMatrix},It.prototype.modelMatrix=function(){return this.mMatrix},It.prototype._stackDepthTest=[],It.prototype.pushDepthTest=function(t){this._stackDepthTest.push(t),t?this.gl.enable(this.gl.DEPTH_TEST):this.gl.disable(this.gl.DEPTH_TEST)},It.prototype.stateDepthTest=function(){return this._stackDepthTest[this._stackDepthTest.length-1]},It.prototype.popDepthTest=function(){this._stackDepthTest.pop(),this._stackDepthTest[this._stackDepthTest.length-1]?this.gl.enable(this.gl.DEPTH_TEST):this.gl.disable(this.gl.DEPTH_TEST)},It.prototype._stackDepthWrite=[],It.prototype.pushDepthWrite=function(t){this._stackDepthWrite.push(t),this.gl.depthMask(t)},It.prototype.stateDepthWrite=function(){return this._stackDepthWrite[this._stackDepthWrite.length-1]},It.prototype.popDepthWrite=function(){this._stackDepthWrite.pop(),this.gl.depthMask(this._stackDepthWrite[this._stackDepthWrite.length-1])},It.prototype._stackCullFace=[],It.prototype.pushCullFace=function(t){this._stackCullFace.push(t),t?this.gl.enable(this.gl.CULL_FACE):this.gl.disable(this.gl.CULL_FACE)},It.prototype.stateCullFace=function(){return this._stackCullFace[this._stackCullFace.length-1]},It.prototype.popCullFace=function(){this._stackCullFace.pop(),this._stackCullFace[this._stackCullFace.length-1]?this.gl.enable(this.gl.CULL_FACE):this.gl.disable(this.gl.CULL_FACE)},It.prototype._stackCullFaceFacing=[],It.prototype.pushCullFaceFacing=function(t){this._stackCullFaceFacing.push(t),this.gl.cullFace(this._stackCullFaceFacing[this._stackCullFaceFacing.length-1])},It.prototype.stateCullFaceFacing=function(){return this._stackCullFaceFacing[this._stackCullFaceFacing.length-1]},It.prototype.popCullFaceFacing=function(){this._stackCullFaceFacing.pop(),this._stackCullFaceFacing.length>0&&this.gl.cullFace(this._stackCullFaceFacing[this._stackCullFaceFacing.length-1])},It.prototype._stackDepthFunc=[],It.prototype.pushDepthFunc=function(t){this._stackDepthFunc.push(t),this.gl.depthFunc(t)},It.prototype.stateDepthFunc=function(){return this._stackDepthFunc.length>0&&this._stackDepthFunc[this._stackDepthFunc.length-1]},It.prototype.popDepthFunc=function(){this._stackDepthFunc.pop(),this._stackDepthFunc.length>0&&this.gl.depthFunc(this._stackDepthFunc[this._stackDepthFunc.length-1])},It.prototype._stackBlend=[],It.prototype.pushBlend=function(t){this._stackBlend.push(t),t?this.gl.enable(this.gl.BLEND):this.gl.disable(this.gl.BLEND)},It.prototype.popBlend=function(){this._stackBlend.pop(),this._stackBlend[this._stackBlend.length-1]?this.gl.enable(this.gl.BLEND):this.gl.disable(this.gl.BLEND)},It.prototype.stateBlend=function(){return this._stackBlend[this._stackBlend.length-1]};It.prototype._stackBlendMode=[],It.prototype._stackBlendModePremul=[],It.prototype.pushBlendMode=function(t,e){this._stackBlendMode.push(t),this._stackBlendModePremul.push(e);const i=this._stackBlendMode.length-1;this.pushBlend(this._stackBlendMode[i]!==nt.BLEND_MODES.BLEND_NONE),this._setBlendMode(this._stackBlendMode[i],this._stackBlendModePremul[i])},It.prototype.popBlendMode=function(){this._stackBlendMode.pop(),this._stackBlendModePremul.pop();const t=this._stackBlendMode.length-1;this.popBlend(this._stackBlendMode[t]!==nt.BLEND_MODES.BLEND_NONE),t>=0&&this._setBlendMode(this._stackBlendMode[t],this._stackBlendModePremul[t])},It.prototype.glGetAttribLocation=function(t,e){return this.gl.getAttribLocation(t,e)},It.prototype.shouldDrawHelpers=function(t){return!this.frameStore.shadowPass&&(!!t.patch.isEditorMode()&&(CABLES.UI.renderHelper||CABLES.UI.renderHelperCurrent&&t.isCurrentUiOp()))},It.prototype._setBlendMode=function(t,e){const i=this.gl;t==nt.BLEND_MODES.BLEND_NONE||(t==nt.BLEND_MODES.BLEND_ADD?e?(i.blendEquationSeparate(i.FUNC_ADD,i.FUNC_ADD),i.blendFuncSeparate(i.ONE,i.ONE,i.ONE,i.ONE)):(i.blendEquation(i.FUNC_ADD),i.blendFunc(i.SRC_ALPHA,i.ONE)):t==nt.BLEND_MODES.BLEND_SUB?e?(i.blendEquationSeparate(i.FUNC_ADD,i.FUNC_ADD),i.blendFuncSeparate(i.ZERO,i.ZERO,i.ONE_MINUS_SRC_COLOR,i.ONE_MINUS_SRC_ALPHA)):(i.blendEquation(i.FUNC_ADD),i.blendFunc(i.ZERO,i.ONE_MINUS_SRC_COLOR)):t==nt.BLEND_MODES.BLEND_MUL?e?(i.blendEquationSeparate(i.FUNC_ADD,i.FUNC_ADD),i.blendFuncSeparate(i.ZERO,i.SRC_COLOR,i.ZERO,i.SRC_ALPHA)):(i.blendEquation(i.FUNC_ADD),i.blendFunc(i.ZERO,i.SRC_COLOR)):t==nt.BLEND_MODES.BLEND_NORMAL?e?(i.blendEquationSeparate(i.FUNC_ADD,i.FUNC_ADD),i.blendFuncSeparate(i.ONE,i.ONE_MINUS_SRC_ALPHA,i.ONE,i.ONE_MINUS_SRC_ALPHA)):(i.blendEquationSeparate(i.FUNC_ADD,i.FUNC_ADD),i.blendFuncSeparate(i.SRC_ALPHA,i.ONE_MINUS_SRC_ALPHA,i.ONE,i.ONE_MINUS_SRC_ALPHA)):this._log.log("setblendmode: unknown blendmode"))},It.prototype.setCursor=function(t){this._cursor=t};const Ot=Object.assign({Framebuffer:function(t,e,i,s){const r=t;this._log=new _("Framebuffer");const n=r.gl.getExtension("WEBGL_depth_texture")||r.gl.getExtension("WEBKIT_WEBGL_depth_texture")||r.gl.getExtension("MOZ_WEBGL_depth_texture")||r.gl.DEPTH_TEXTURE;n||r.exitError("NO_DEPTH_TEXTURE","no depth texture support");let o=e||512,h=i||512;(s=s||{isFloatingPointTexture:!1}).hasOwnProperty("clear")||(s.clear=!0),s.hasOwnProperty("filter")||(s.filter=$.FILTER_LINEAR);const a=new $(r,{isFloatingPointTexture:s.isFloatingPointTexture,filter:s.filter,wrap:s.wrap||$.CLAMP_TO_EDGE});let l=null;n&&(l=new $(r,{isDepthTexture:!0})),this._options=s;const c=r.gl.createFramebuffer(),u=r.gl.createRenderbuffer();this.getWidth=function(){return o},this.getHeight=function(){return h},this.getGlFrameBuffer=function(){return c},this.getDepthRenderBuffer=function(){return u},this.getTextureColor=function(){return a},this.getTextureDepth=function(){return l},this.setFilter=function(t){a.filter=t,a.setSize(o,h)},this.setSize=function(t,e){if(t<2&&(t=2),e<2&&(e=2),o=Math.ceil(t),h=Math.ceil(e),r.profileData.profileFrameBuffercreate++,r.gl.bindFramebuffer(r.gl.FRAMEBUFFER,c),r.gl.bindRenderbuffer(r.gl.RENDERBUFFER,u),a.setSize(o,h),l&&l.setSize(o,h),n&&r.gl.renderbufferStorage(r.gl.RENDERBUFFER,r.gl.DEPTH_COMPONENT16,o,h),r.gl.framebufferTexture2D(r.gl.FRAMEBUFFER,r.gl.COLOR_ATTACHMENT0,r.gl.TEXTURE_2D,a.tex,0),n&&(r.gl.framebufferRenderbuffer(r.gl.FRAMEBUFFER,r.gl.DEPTH_ATTACHMENT,r.gl.RENDERBUFFER,u),r.gl.framebufferTexture2D(r.gl.FRAMEBUFFER,r.gl.DEPTH_ATTACHMENT,r.gl.TEXTURE_2D,l.tex,0)),!r.gl.isFramebuffer(c))throw new Error("Invalid framebuffer");const i=r.gl.checkFramebufferStatus(r.gl.FRAMEBUFFER);switch(i){case r.gl.FRAMEBUFFER_COMPLETE:break;case r.gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:throw this._log.warn("FRAMEBUFFER_INCOMPLETE_ATTACHMENT...",o,h,a.tex,u),new Error("Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_ATTACHMENT");case r.gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:throw this._log.warn("FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT"),new Error("Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT");case r.gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:throw this._log.warn("FRAMEBUFFER_INCOMPLETE_DIMENSIONS"),new Error("Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_DIMENSIONS");case r.gl.FRAMEBUFFER_UNSUPPORTED:throw this._log.warn("FRAMEBUFFER_UNSUPPORTED"),new Error("Incomplete framebuffer: FRAMEBUFFER_UNSUPPORTED");case 36059:this._log.warn("Incomplete: FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER from ext. Or Safari/iOS undefined behaviour.");break;default:throw this._log.warn("incomplete framebuffer",i),new Error("Incomplete framebuffer: "+i)}r.gl.bindTexture(r.gl.TEXTURE_2D,null),r.gl.bindRenderbuffer(r.gl.RENDERBUFFER,null),r.gl.bindFramebuffer(r.gl.FRAMEBUFFER,null)},this.renderStart=function(){r.pushModelMatrix(),r.gl.bindFramebuffer(r.gl.FRAMEBUFFER,c),r.pushGlFrameBuffer(c),r.pushFrameBuffer(this),r.pushPMatrix(),r.gl.viewport(0,0,o,h),this._options.clear&&(r.gl.clearColor(0,0,0,0),r.gl.clear(r.gl.COLOR_BUFFER_BIT|r.gl.DEPTH_BUFFER_BIT))},this.renderEnd=function(){r.popPMatrix(),r.gl.bindFramebuffer(r.gl.FRAMEBUFFER,r.popGlFrameBuffer()),r.popFrameBuffer(),r.popModelMatrix(),r.resetViewPort()},this.delete=function(){a.delete(),l&&l.delete(),r.gl.deleteRenderbuffer(u),r.gl.deleteFramebuffer(c)},this.setSize(o,h)},Framebuffer2:tt,Geometry:it,BoundingBox:et,Marker:function(t){const e=new it("marker");e.setPointVertices([1e-5,0,0,1,0,0,0,1e-5,0,0,1,0,0,0,1e-5,0,0,1]);const i=new ht(t,e,t.gl.LINES);i.setGeom(e);const s=new yt(t,"markermaterial"),r="".endl()+"precision highp float;".endl()+"IN vec3 axisColor;".endl()+"void main()".endl()+"{".endl()+"    vec4 col=vec4(axisColor,1.0);".endl()+"    outColor = col;".endl()+"}",n="".endl()+"IN vec3 vPosition;".endl()+"UNI mat4 projMatrix;".endl()+"UNI mat4 mvMatrix;".endl()+"OUT vec3 axisColor;".endl()+"void main()".endl()+"{".endl()+"   vec4 pos=vec4(vPosition, 1.0);".endl()+"   if(pos.x!=0.0)axisColor=vec3(1.0,0.3,0.0);".endl()+"   if(pos.y!=0.0)axisColor=vec3(0.0,1.0,0.2);".endl()+"   if(pos.z!=0.0)axisColor=vec3(0.0,0.5,1.0);".endl()+"   gl_Position = projMatrix * mvMatrix * pos;".endl()+"}";s.setSource(n,r),this._vScale=vec3.create(),this.draw=function(t,e,r){const n=e||2;t.pushModelMatrix(),t.pushShader(s),vec3.set(this._vScale,n,n,n),mat4.scale(t.mvMatrix,t.mvMatrix,this._vScale),t.pushDepthTest(1==r),i.render(t.getShader()),t.popDepthTest(),t.popShader(),t.popModelMatrix()}},WirePoint:function(t){const e=t.gl.createBuffer(),i=vec3.create();this.render=function(t,s){t.pushModelMatrix(),vec3.set(i,s,s,s),mat4.scale(t.mvMatrix,t.mvMatrix,i);const r=t.getShader();r&&(r.bind(),t.gl.bindBuffer(t.gl.ARRAY_BUFFER,e),t.gl.vertexAttribPointer(r.getAttrVertexPos(),e.itemSize,t.gl.FLOAT,!1,0,0),t.gl.enableVertexAttribArray(r.getAttrVertexPos()),t.gl.bindBuffer(t.gl.ARRAY_BUFFER,e),t.gl.drawArrays(t.gl.LINE_STRIP,0,e.numItems)),t.popModelMatrix()},function(){const i=[];let s=0,r=0;for(s=0;s<=Math.round(24);s++)r=360/Math.round(24)*s*gt,i.push(.5*Math.cos(r)),i.push(0),i.push(.5*Math.sin(r));for(s=0;s<=Math.round(24);s++)r=360/Math.round(24)*s*gt,i.push(.5*Math.cos(r)),i.push(.5*Math.sin(r)),i.push(0);for(s=0;s<=Math.round(24);s++)r=360/Math.round(24)*s*gt,i.push(0),i.push(.5*Math.cos(r)),i.push(.5*Math.sin(r));t.gl.bindBuffer(t.gl.ARRAY_BUFFER,e),t.gl.bufferData(t.gl.ARRAY_BUFFER,new Float32Array(i),t.gl.STATIC_DRAW),e.itemSize=3,e.numItems=i.length/e.itemSize}()},WireCube:function(t){const e=t.gl.createBuffer(),i=vec3.create();this.render=function(t,s,r,n){t.pushModelMatrix(),vec3.set(i,s||1,r||1,n||1),mat4.scale(t.mvMatrix,t.mvMatrix,i);const o=t.getShader();o&&(o.bind(),t.gl.bindBuffer(t.gl.ARRAY_BUFFER,e),t.gl.vertexAttribPointer(o.getAttrVertexPos(),e.itemSize,t.gl.FLOAT,!1,0,0),t.gl.enableVertexAttribArray(o.getAttrVertexPos()),t.gl.bindBuffer(t.gl.ARRAY_BUFFER,e),t.gl.drawArrays(t.gl.LINE_STRIP,0,e.numItems)),t.popModelMatrix()},function(){const i=[];i.push(-1,-1,1),i.push(1,-1,1),i.push(1,1,1),i.push(-1,1,1),i.push(-1,-1,1),i.push(-1,-1,-1),i.push(1,-1,-1),i.push(1,1,-1),i.push(-1,1,-1),i.push(-1,-1,-1),i.push(-1,-1,-1),i.push(-1,1,-1),i.push(-1,1,1),i.push(-1,-1,1),i.push(-1,-1,-1),i.push(1,-1,-1),i.push(1,1,-1),i.push(1,1,1),i.push(1,-1,1),i.push(1,-1,-1),t.gl.bindBuffer(t.gl.ARRAY_BUFFER,e),t.gl.bufferData(t.gl.ARRAY_BUFFER,new Float32Array(i),t.gl.STATIC_DRAW),e.itemSize=3,e.numItems=i.length/e.itemSize}()},MatrixStack:xt,Mesh:ht,MESH:ot,ShaderLibMods:ct,Shader:yt,Uniform:st,MESHES:at,Context:It,Texture:$,TextureEffect:lt,isWindows:dt,getWheelSpeed:mt,getWheelDelta:Et,onLoadingAssetsFinished:null,profileData:void 0,UniColorShader:class{constructor(t){this.shader=new CGL.Shader(t,"markermaterial");const e="".endl()+"void main()".endl()+"{".endl()+"    outColor = vec4(color.rgb,1.0);".endl()+"}",i="".endl()+"IN vec3 vPosition;".endl()+"UNI mat4 projMatrix;".endl()+"UNI mat4 mvMatrix;".endl()+"void main()".endl()+"{".endl()+"   gl_Position = projMatrix * mvMatrix * vec4(vPosition,1.0);".endl()+"}";this.shader.setSource(i,e),this.coloruni=this.shader.addUniformFrag("4f","color",[1,.777,1,1])}setColor(t,e,i,s){this.coloruni.set(t,e,i,s)}}},nt.BLEND_MODES,nt.SHADER,nt.MATH,nt.BLEND_MODES);window.CGL=Ot;const Rt=function(t){this._log=new _("LoadingStatus"),this._loadingAssets={},this._cbFinished=[],this._assetTasks=[],this._percent=0,this._count=0,this._countFinished=0,this._order=0,this._startTime=0,this._patch=t,this._wasFinishedPrinted=!1,this._loadingAssetTaskCb=!1};Rt.prototype.setOnFinishedLoading=function(t){this._cbFinished.push(t)},Rt.prototype.getNumAssets=function(){return this._countFinished},Rt.prototype.getProgress=function(){return this._percent},Rt.prototype.checkStatus=function(){this._countFinished=0,this._count=0;for(const t in this._loadingAssets)this._count++,this._loadingAssets[t].finished||this._countFinished++;if(this._percent=(this._count-this._countFinished)/this._count,0===this._countFinished){for(let t=0;t<this._cbFinished.length;t++)if(this._cbFinished[t]){const e=this._cbFinished[t];setTimeout(()=>{e(this._patch)},200)}this._wasFinishedPrinted||(this._wasFinishedPrinted=!0,this.print())}},Rt.prototype.getListJobs=function(){let t=[];for(const e in this._loadingAssets)this._loadingAssets[e].finished||t.push(this._loadingAssets[e].name);return t},Rt.prototype.print=function(){if(this._patch.config.silent)return;const t=[];for(const e in this._loadingAssets)t.push([this._loadingAssets[e].order,this._loadingAssets[e].type,this._loadingAssets[e].name,(this._loadingAssets[e].timeEnd-this._loadingAssets[e].timeStart)/1e3+"s"]);this._log.groupCollapsed("finished loading "+this._order+" assets in "+(Date.now()-this._startTime)/1e3+"s"),this._log.table(t),this._log.groupEnd()},Rt.prototype.finished=function(t){this._loadingAssets[t]&&(this._loadingAssets[t].finished=!0,this._loadingAssets[t].timeEnd=Date.now()),this.checkStatus()},Rt.prototype._startAssetTasks=function(){for(let t=0;t<this._assetTasks.length;t++)this._assetTasks[t]();this._assetTasks.length=0},Rt.prototype.addAssetLoadingTask=function(t){this._patch.isEditorMode()&&!CABLES.UI.loaded?(this._assetTasks.push(t),this._loadingAssetTaskCb||window.gui.addEventListener("uiloaded",this._startAssetTasks.bind(this)),this._loadingAssetTaskCb=!0):t()},Rt.prototype.existByName=function(t){for(let e in this._loadingAssets)if(this._loadingAssets[e].name==t&&!this._loadingAssets[e].finished)return!0},Rt.prototype.start=function(t,e){0==this._startTime&&(this._startTime=Date.now());const i=A();return this._loadingAssets[i]={id:i,type:t,name:e,finished:!1,timeStart:Date.now(),order:this._order},this._order++,i};const Pt=function(){this._loops=[],this._indizes=[],this._index=0};Pt.prototype.pushLoop=function(t){this._loops.push(Math.abs(Math.floor(t))),this._indizes.push(this._index)},Pt.prototype.popLoop=function(){this._loops.pop(),this._index=this._indizes.pop(),0===this._loops.length&&(this._index=0)},Pt.prototype.numLoops=function(){return this._loops.length},Pt.prototype.numCycles=function(){if(0===this._loops.length)return 0;let t=this._loops[0];for(let e=1;e<this._loops.length;e++)t*=this._loops[e];return t},Pt.prototype.inLoop=function(){return this._loops.length>0},Pt.prototype.increment=function(){this._index++},Pt.prototype.index=function(){return this._index};const Nt=function(t){this.startFrame=t.getFrameNum();let e={},i=null,s=0;this.getItems=function(){return e},this.clear=function(){e={}},this.add=function(r,n){null!==i&&(n&&n.id==i||e[i]&&(e[i].timeUsed+=performance.now()-s,(!e[i].peakTime||_t()-e[i].peakTime>5e3)&&(e[i].peak=0,e[i].peakTime=_t()),e[i].peak=Math.max(e[i].peak,performance.now()-s))),null!==n?(e[n.id]||(e[n.id]={numTriggers:0,timeUsed:0}),e[n.id].lastFrame!=t.getFrameNum()&&(e[n.id].numTriggers=0),e[n.id].lastFrame=t.getFrameNum(),e[n.id].numTriggers++,e[n.id].opid=n.parent.id,e[n.id].title=n.parent.name+"."+n.name,e[n.id].subPatch=n.parent.uiAttribs.subPatch,i=n.id,s=performance.now()):i=null},this.print=function(){console.log("--------");for(const t in e)console.log(e[t].title+": "+e[t].numTriggers+" / "+e[t].timeUsed)}},St=function(t){this._patch=t,this.result=[]};St.MIDI=0,St.POINTERLOCK=1,St.WEBAUDIO=2,St.WEBGL2=3,(St.infos=[])[St.POINTERLOCK]={title:"pointerLock",caniuse:"https://caniuse.com/#search=pointerlock"},St.infos[St.MIDI]={title:"midi API",caniuse:"https://caniuse.com/#search=midi"},St.infos[St.WEBAUDIO]={title:"web audio",caniuse:"https://caniuse.com/#search=webaudio"},St.infos[St.WEBGL2]={title:"WebGL 2"},St.prototype.checkRequirement=function(t,e){switch(this.result=[],t){case St.WEBGL2:return e.patch.cgl.glVersion>=2;case St.POINTERLOCK:return"exitPointerLock"in document;case St.MIDI:return"MIDIAccess"in window;case St.WEBAUDIO:let t=!1;return window.audioContext&&(t=!0),t||!("webkitAudioContext"in window)&&!("AudioContext"in window)||(t=!0),t}},St.prototype.checkOp=function(t){if(t&&t.requirements)for(let e=0;e<t.requirements.length;e++){const i=t.requirements[e];if(!this.result[i]){const e=this.checkRequirement(i,t);if(!e){t.patch.cgl&&t.patch.cgl.canvas&&t.patch.cgl.canvas.remove();let e=St.infos[i].title;throw St.infos[i].caniuse&&(e='<a href="'+St.infos[i].caniuse+'" target="_blank">'+St.infos[i].title+" ("+t.objName+")</a>"),new Error("this browser does not meet requirement: "+St.infos[i].title+" ("+t.objName+")")}this.result[i]={success:e,info:St.infos[i]}}}};const Ft=function(t){p.apply(this),this._log=new _("core_patch"),this.ops=[],this.settings={},this.config=t||{glCanvasResizeToWindow:!1,prefixAssetPath:"",prefixJsPath:"",silent:!0,onError:null,onFinishedLoading:null,onFirstFrameRendered:null,onPatchLoaded:null,fpsLimit:0},this.timer=new pt,this.freeTimer=new pt,this.animFrameOps=[],this.animFrameCallbacks=[],this.gui=!1,CABLES.logSilent=this.silent=!0,this.profiler=null,this.aborted=!1,this._crashedOps=[],this._renderOneFrame=!1,this._animReq=null,this._opIdCache={},this._triggerStack=[],this.loading=new Rt(this),this._perf={fps:0,ms:0,_fpsFrameCount:0,_fpsMsCount:0,_fpsStart:0},this._volumeListeners=[],this._paused=!1,this._frameNum=0,this.instancing=new Pt,this.onOneFrameRendered=null,this.namedTriggers={},this._origData=null,this._frameNext=0,this._frameInterval=0,this._lastFrameTime=0,this._frameWasdelayed=!0,function(){return!this}()||this._log.warn("not in strict mode: core patch"),this._isLocal=0===document.location.href.indexOf("file:"),this.config.hasOwnProperty("silent")&&(this.silent=CABLES.logSilent=this.config.silent),this.config.hasOwnProperty("doRequestAnimation")||(this.config.doRequestAnimation=!0),this.config.prefixAssetPath||(this.config.prefixAssetPath=""),this.config.prefixJsPath||(this.config.prefixJsPath=""),this.config.masterVolume||(this.config.masterVolume=1),this._variables={},this._variableListeners=[],this.vars={},t&&t.vars&&(this.vars=t.vars),this.cgl=new It(this),this.cgl.setCanvas(this.config.glCanvasId||this.config.glCanvas||"glcanvas"),!0===this.config.glCanvasResizeToWindow&&this.cgl.setAutoResize("window"),!0===this.config.glCanvasResizeToParent&&this.cgl.setAutoResize("parent"),this.loading.setOnFinishedLoading(this.config.onFinishedLoading),this.cgl.aborted&&(this.aborted=!0),this.cgl.silent&&(this.silent=!0),this.freeTimer.play(),this.exec(),this.aborted||(this.config.patch?this.deSerialize(this.config.patch):this.config.patchFile&&M(this.config.patchFile,(t,e)=>{const i=JSON.parse(e);if(t){return this._log.error("err",t),this._log.error("data",i),void this._log.error("data",i.msg)}this.deSerialize(i)}),this.timer.play()),console.log("made with https://cables.gl")};Ft.prototype.isPlaying=function(){return!this._paused},Ft.prototype.isRenderingOneFrame=function(){return this._renderOneFrame},Ft.prototype.renderOneFrame=function(){this._paused=!0,this._renderOneFrame=!0,this.exec(),this._renderOneFrame=!1},Ft.prototype.getFPS=function(){return this._perf.fps},Ft.prototype.isEditorMode=function(){return!0===this.config.editorMode},Ft.prototype.pause=function(){cancelAnimationFrame(this._animReq),this.emitEvent("pause"),this._animReq=null,this._paused=!0,this.freeTimer.pause()},Ft.prototype.resume=function(){this._paused&&(cancelAnimationFrame(this._animReq),this._paused=!1,this.freeTimer.play(),this.emitEvent("resume"),this.exec())},Ft.prototype.setVolume=function(t){this.config.masterVolume=t;for(let e=0;e<this._volumeListeners.length;e++)this._volumeListeners[e].onMasterVolumeChanged(t)},Ft.prototype.getAssetPath=function(){if(this.isEditorMode())return"/assets/"+gui.project()._id+"/";if(document.location.href.indexOf("cables.gl")>0){const t=document.location.href.split("/");return"/assets/"+t[t.length-1]+"/"}return"assets/"},Ft.prototype.getFilePath=function(t){return this._isLocal&&!this.config.allowLocalFileAccess&&this.exitError("localAccess","Browser security forbids loading files directly without a webserver. Upload files to a server to work. use allowLocalFileAccess:true to ignore this."),t?0===(t=String(t)).indexOf("https:")||0===t.indexOf("http:")?t:(t=t.replace("//","/"),this.config.prefixAssetPath+t+(this.config.suffixAssetPath||"")):t},Ft.prototype.clear=function(){for(this.cgl.TextureEffectMesh=null,this.animFrameOps.length=0,this.timer=new pt;this.ops.length>0;)this.deleteOp(this.ops[0].id)},Ft.getOpClass=function(t){const e=t.split(".");let i=null;try{return 2==e.length?i=window[e[0]][e[1]]:3==e.length?i=window[e[0]][e[1]][e[2]]:4==e.length?i=window[e[0]][e[1]][e[2]][e[3]]:5==e.length?i=window[e[0]][e[1]][e[2]][e[3]][e[4]]:6==e.length?i=window[e[0]][e[1]][e[2]][e[3]][e[4]][e[5]]:7==e.length?i=window[e[0]][e[1]][e[2]][e[3]][e[4]][e[5]][e[6]]:8==e.length?i=window[e[0]][e[1]][e[2]][e[3]][e[4]][e[5]][e[6]][e[7]]:9==e.length?i=window[e[0]][e[1]][e[2]][e[3]][e[4]][e[5]][e[6]][e[7]][e[8]]:10==e.length&&(i=window[e[0]][e[1]][e[2]][e[3]][e[4]][e[5]][e[6]][e[7]][e[8]][e[9]]),i}catch(t){return null}},Ft.prototype.createOp=function(t,e){const i=t.split(".");let s=null,r="";try{if(-1==t.indexOf("Ops.")){const i=t;if(!CABLES.OPS[i])throw new Error("could not find op by id: "+i);r=CABLES.OPS[i].objName,s=new CABLES.OPS[i].f(this,r,e,i),s.opId=i}if(!s){r=t;if(!Ft.getOpClass(r))throw this.emitEvent("criticalError","unknown op","unknown op: "+r),this._log.error("unknown op: "+r),new Error("unknown op: "+r);if(2==i.length?s=new window[i[0]][i[1]](this,r,e):3==i.length?s=new window[i[0]][i[1]][i[2]](this,r,e):4==i.length?s=new window[i[0]][i[1]][i[2]][i[3]](this,r,e):5==i.length?s=new window[i[0]][i[1]][i[2]][i[3]][i[4]](this,r,e):6==i.length?s=new window[i[0]][i[1]][i[2]][i[3]][i[4]][i[5]](this,r,e):7==i.length?s=new window[i[0]][i[1]][i[2]][i[3]][i[4]][i[5]][i[6]](this,r,e):8==i.length?s=new window[i[0]][i[1]][i[2]][i[3]][i[4]][i[5]][i[6]][i[7]](this,r,e):9==i.length?s=new window[i[0]][i[1]][i[2]][i[3]][i[4]][i[5]][i[6]][i[7]][i[8]](this,r,e):10==i.length?s=new window[i[0]][i[1]][i[2]][i[3]][i[4]][i[5]][i[6]][i[7]][i[8]][i[9]](this,r,e):this._log.warn("parts.length",i.length),s){s.opId=null;for(const t in CABLES.OPS)CABLES.OPS[t].objName==r&&(s.opId=t)}}}catch(t){if(this._crashedOps.push(r),this._log.error(t),this.emitEvent("exceptionOp",t,r),!this.isEditorMode())throw this._log.error("[instancing error] "+r,t),CABLES.api&&CABLES.api.sendErrorReport(t),this.exitError("INSTANCE_ERR","Instancing Error "+r,t),new Error("instancing error "+r)}return s?(s.objName=r,s.patch=this):this._log.log("no op was created!?",t,e),s},Ft.prototype.addOp=function(t,e,i,s){const r=this.createOp(t,i);if(r){if(e&&e.hasOwnProperty("errors")&&delete e.errors,e&&e.hasOwnProperty("error")&&delete e.error,r.uiAttr(e),r.onCreate&&r.onCreate(),r.hasOwnProperty("onAnimFrame")&&this.addOnAnimFrame(r),r.hasOwnProperty("onMasterVolumeChanged")&&this._volumeListeners.push(r),this._opIdCache[r.id])return void this._log.warn("opid with id "+r.id+" already exists in patch!");this.ops.push(r),this._opIdCache[r.id]=r,this.emitEvent("onOpAdd",r,s),r.init&&r.init()}else this._log.error("addop: no op.....");return r},Ft.prototype.addOnAnimFrame=function(t){for(let e=0;e<this.animFrameOps.length;e++)if(this.animFrameOps[e]==t)return;this.animFrameOps.push(t)},Ft.prototype.removeOnAnimFrame=function(t){for(let e=0;e<this.animFrameOps.length;e++)if(this.animFrameOps[e]==t)return void this.animFrameOps.splice(e,1)},Ft.prototype.addOnAnimFrameCallback=function(t){this.animFrameCallbacks.push(t)},Ft.prototype.removeOnAnimCallback=function(t){for(let e=0;e<this.animFrameCallbacks.length;e++)if(this.animFrameCallbacks[e]==t)return void this.animFrameCallbacks.splice(e,1)},Ft.prototype.deleteOp=function(t,e,i){let s=!1;for(const r in this.ops)if(this.ops[r].id==t){const n=this.ops[r];let o=null,h=null;if(n){s=!0,e&&n.portsIn.length>0&&n.portsIn[0].isLinked()&&n.portsOut.length>0&&n.portsOut[0].isLinked()&&n.portsIn[0].getType()==n.portsOut[0].getType()&&(o=n.portsIn[0].links[0].getOtherPort(n.portsIn[0]),h=n.portsOut[0].links[0].getOtherPort(n.portsOut[0]));const a=this.ops[r];a.removeLinks(),this.onDelete&&(this._log.warn("deprecated this.onDelete",this.onDelete),this.onDelete(a)),this.ops.splice(r,1),this.emitEvent("onOpDelete",a,i),a.onDelete&&a.onDelete(i),a.cleanUp(),null!==o&&null!==h&&this.link(o.parent,o.getName(),h.parent,h.getName()),delete this._opIdCache[t];break}}s||this._log.warn("core patch deleteop: not found...")},Ft.prototype.getFrameNum=function(){return this._frameNum},Ft.prototype.renderFrame=function(t){this.timer.update(),this.freeTimer.update();const e=this.timer.getTime(),i=performance.now();for(let t=0;t<this.animFrameCallbacks.length;++t)this.animFrameCallbacks[t]&&this.animFrameCallbacks[t](e,this._frameNum);for(let t=0;t<this.animFrameOps.length;++t)this.animFrameOps[t].onAnimFrame&&this.animFrameOps[t].onAnimFrame(e);this.cgl.profileData.profileOnAnimFrameOps=performance.now()-i,this.emitEvent("onRenderFrame",e),this._frameNum++,1==this._frameNum&&this.config.onFirstFrameRendered&&this.config.onFirstFrameRendered()},Ft.prototype.exec=function(t){if(!this._renderOneFrame&&(this._paused||this.aborted))return;this.config.fpsLimit=this.config.fpsLimit||0,this.config.fpsLimit&&(this._frameInterval=1e3/this.config.fpsLimit);const e=CABLES.now(),i=e-this._frameNext;if(this.isEditorMode()&&!this._renderOneFrame&&e-this._lastFrameTime>=500&&0!==this._lastFrameTime&&!this._frameWasdelayed)return this._lastFrameTime=0,setTimeout(this.exec.bind(this),500),this.emitEvent("renderDelayStart"),void(this._frameWasdelayed=!0);if(this._renderOneFrame||0===this.config.fpsLimit||i>this._frameInterval||this._frameWasdelayed){const t=CABLES.now();this.renderFrame(),this._perf._lastFrameTime=CABLES.now(),this._perf._fpsFrameCount++,this._perf._fpsMsCount+=CABLES.now()-t,this._frameInterval&&(this._frameNext=e-i%this._frameInterval)}this._frameWasdelayed&&(this.emitEvent("renderDelayEnd"),this._frameWasdelayed=!1),this._renderOneFrame&&(this.onOneFrameRendered&&this.onOneFrameRendered(),this.emitEvent("renderedOneFrame"),this._renderOneFrame=!1),CABLES.now()-this._perf._fpsStart>=1e3&&this._perf.fps!=this._perf._fpsFrameCount&&(this._perf.fps=this._perf._fpsFrameCount,this._perf.ms=Math.round(this._perf._fpsMsCount/this._perf._fpsFrameCount),this.emitEvent("performance",this._perf),this._perf._fpsFrameCount=0,this._perf._fpsMsCount=0,this._perf._fpsStart=CABLES.now()),this.config.doRequestAnimation&&(this._animReq=requestAnimationFrame(this.exec.bind(this)))},Ft.prototype.link=function(t,e,i,s,r,n){if(!t)return void this._log.warn("link: op1 is null ");if(!i)return void this._log.warn("link: op2 is null");const o=t.getPort(e,r),h=i.getPort(s,r);if(o)if(h){if(!o.shouldLink(o,h)||!h.shouldLink(o,h))return!1;if(J.canLink(o,h)){const t=new J(this);return t.link(o,h),this.emitEvent("onLink",o,h,t,n),t}}else this._log.warn("port not found! "+s+" of "+i.name+"("+i.objName+")");else this._log.warn("port not found! "+e+"("+t.objName+")")},Ft.prototype.serialize=function(t){const e={ops:[]};e.settings=this.settings;for(const t in this.ops)e.ops.push(this.ops[t].getSerialized());return t?e:JSON.stringify(e)},Ft.prototype.getOpById=function(t){return this._opIdCache[t]},Ft.prototype.getOpsByName=function(t){const e=[];for(const i in this.ops)this.ops[i].name==t&&e.push(this.ops[i]);return e},Ft.prototype.getOpsByObjName=function(t){const e=[];for(const i in this.ops)this.ops[i].objName==t&&e.push(this.ops[i]);return e},Ft.prototype.loadLib=function(t){C("/ui/libs/"+t+".js",(t,e)=>{const i=document.createElement("script");i.type="text/javascript",i.text=e,document.getElementsByTagName("head")[0].appendChild(i)},"GET")},Ft.prototype.reloadOp=function(t,e){let i=0;const s=[],r=[];for(const e in this.ops)this.ops[e].objName==t&&r.push(this.ops[e]);for(let e=0;e<r.length;e++){i++;const n=r[e];n.deleted=!0;const o=this,h=this.addOp(t,n.uiAttribs);let a,l;for(a in s.push(h),n.portsIn)if(0===n.portsIn[a].links.length){const t=h.getPort(n.portsIn[a].name);t?(t.set(n.portsIn[a].get()),n.portsIn[a].getVariableName()&&t.setVariable(n.portsIn[a].getVariableName())):this._log.error("[reloadOp] could not set port "+n.portsIn[a].name+", propably renamed port ?")}else for(;n.portsIn[a].links.length;){const t=n.portsIn[a].links[0].portIn.name,e=n.portsIn[a].links[0].portOut.name,i=n.portsIn[a].links[0].portOut.parent;n.portsIn[a].links[0].remove(),l=o.link(h,t,i,e),l?l.setValue():this._log.warn("[reloadOp] relink after op reload not successfull for port "+e)}for(a in n.portsOut)for(;n.portsOut[a].links.length;){const t=n.portsOut[a].links[0].portOut.name,e=n.portsOut[a].links[0].portIn.name,i=n.portsOut[a].links[0].portIn.parent;n.portsOut[a].links[0].remove(),l=o.link(h,t,i,e),l?l.setValue():this._log.warn("relink after op reload not successfull for port "+e)}this.deleteOp(n.id,!1,!0)}e(i,s)},Ft.prototype.getSubPatchOps=function(t){const e=[];for(const i in this.ops)this.ops[i].uiAttribs&&this.ops[i].uiAttribs.subPatch==t&&e.push(this.ops[i]);return e},Ft.prototype.getSubPatchOp=function(t,e){for(const i in this.ops)if(this.ops[i].uiAttribs&&this.ops[i].uiAttribs.subPatch==t&&this.ops[i].objName==e)return this.ops[i];return!1},Ft.prototype.deSerialize=function(t,e){if(this.aborted)return;const i=this.loading.start("core","deserialize");this.namespace=t.namespace||"",this.name=t.name||"","string"==typeof t&&(t=JSON.parse(t));const s=this;function r(t,e,i,r){s.link(s.getOpById(t),i,s.getOpById(e),r,!1,!0)}this.settings=t.settings;const n=new St(this);for(const i in t.ops){const s=CABLES.now(),r=t.ops[i];let o=null;try{o=r.opId?this.addOp(r.opId,r.uiAttribs,r.id,!0):this.addOp(r.objName,r.uiAttribs,r.id,!0)}catch(t){throw this._log.warn("[instancing error] op data:",r,t),new Error("instancing error: "+r.objName)}if(n.checkOp(o),o){e&&(o.id=b()),o.portsInData=r.portsIn,o._origData=r,o.storage=r.storage;for(const t in r.portsIn){const e=r.portsIn[t],i=o.getPort(e.name);!i||"bool"!=i.uiAttribs.display&&"bool"!=i.uiAttribs.type||isNaN(e.value)||(e.value=!0===e.value),i&&void 0!==e.value&&i.type!=B.OP_PORT_TYPE_TEXTURE&&i.set(e.value),i&&i.deSerializeSettings(e)}for(const e in r.portsOut){const s=o.getPort(r.portsOut[e].name);s&&s.type!=B.OP_PORT_TYPE_TEXTURE&&r.portsOut[e].hasOwnProperty("value")&&s.set(t.ops[i].portsOut[e].value)}}const h=Math.round(100*(CABLES.now()-s))/100;!this.silent&&h>200&&this._log.warn("long op init ",t.ops[i].objName,h)}for(const t in this.ops)this.ops[t].onLoadedValueSet&&(this.ops[t].onLoadedValueSet(this.ops[t]._origData),this.ops[t].onLoadedValueSet=null,this.ops[t]._origData=null);if(t.ops)for(let e=0;e<t.ops.length;e++){if(t.ops[e].portsIn)for(let i=0;i<t.ops[e].portsIn.length;i++)if(t.ops[e].portsIn[i].links)for(let s=0;s<t.ops[e].portsIn[i].links.length;s++)t.ops[e].portsIn[i].links[s]&&r(t.ops[e].portsIn[i].links[s].objIn,t.ops[e].portsIn[i].links[s].objOut,t.ops[e].portsIn[i].links[s].portIn,t.ops[e].portsIn[i].links[s].portOut);if(t.ops[e].portsOut)for(let i=0;i<t.ops[e].portsOut.length;i++)if(t.ops[e].portsOut[i].links)for(let s=0;s<t.ops[e].portsOut[i].links.length;s++)t.ops[e].portsOut[i].links[s]&&r(t.ops[e].portsOut[i].links[s].objIn,t.ops[e].portsOut[i].links[s].objOut,t.ops[e].portsOut[i].links[s].portIn,t.ops[e].portsOut[i].links[s].portOut)}for(const t in this.ops)this.ops[t].onLoaded&&(this.ops[t].onLoaded(),this.ops[t].onLoaded=null);for(const t in this.ops)this.ops[t].init&&(this.ops[t].init(),this.ops[t].init=null);if(this.config.variables)for(const t in this.config.variables)this.setVarValue(t,this.config.variables[t]);for(const t in this.ops)this.ops[t].initVarPorts(),delete this.ops[t].uiAttribs.pasted;setTimeout(()=>{this.loading.finished(i)},100),this.config.onPatchLoaded&&this.config.onPatchLoaded(this),this.emitEvent("patchLoadEnd")},Ft.prototype.profile=function(t){this.profiler=new Nt(this);for(const e in this.ops)this.ops[e].profile(t)},(Ft.Variable=function(t,e,i){this._name=t,this._changeListeners=[],this.type=i,this.setValue(e)}).prototype.getValue=function(){return this._v},Ft.Variable.prototype.getName=function(){return this._name},Ft.Variable.prototype.setValue=function(t){this._v=t;for(let e=0;e<this._changeListeners.length;e++)this._changeListeners[e](t,this)},Ft.Variable.prototype.addListener=function(t){-1==this._changeListeners.indexOf(t)&&this._changeListeners.push(t)},Ft.Variable.prototype.removeListener=function(t){const e=this._changeListeners.indexOf(t);this._changeListeners.splice(e,1)},Ft.prototype.setVariable=function(t,e){void 0!==this._variables[t]?this._variables[t].setValue(e):this._log.warn("variable "+t+" not found!")},Ft.prototype._sortVars=function(){if(!this.isEditorMode())return;const t={};Object.keys(this._variables).sort((t,e)=>t.localeCompare(e,"en",{sensitivity:"base"})).forEach(e=>{t[e]=this._variables[e]}),this._variables=t},Ft.prototype.hasVar=function(t){return void 0!==this._variables[t]},Ft.prototype.setVarValue=function(t,e){return this.hasVar(t)?this._variables[t].setValue(e):(this._variables[t]=new Ft.Variable(t,e),this._sortVars(),this.emitEvent("variablesChanged")),this._variables[t]},Ft.prototype.getVarValue=function(t,e){if(this._variables.hasOwnProperty(t))return this._variables[t].getValue()},Ft.prototype.getVar=function(t){if(this._variables.hasOwnProperty(t))return this._variables[t]},Ft.prototype.deleteVar=function(t){for(let e=0;e<this.ops.length;e++)for(let i=0;i<this.ops[e].portsIn.length;i++)this.ops[e].portsIn[i].getVariableName()==t&&this.ops[e].portsIn[i].setVariable(null);delete this._variables[t],this.emitEvent("variableDeleted",t),this.emitEvent("variablesChanged")},Ft.prototype.getVars=function(t){if(void 0===t)return this._variables;const e=[];t==CABLES.OP_PORT_TYPE_STRING&&(t="string"),t==CABLES.OP_PORT_TYPE_VALUE&&(t="number"),t==CABLES.OP_PORT_TYPE_ARRAY&&(t="array"),t==CABLES.OP_PORT_TYPE_OBJECT&&(t="object");for(const i in this._variables)this._variables[i].type&&this._variables[i].type!=t||e.push(this._variables[i]);return e},Ft.prototype.exitError=function(t,e,i){if(this.aborted=!0,this&&this.config&&this.config.onError)this.config.onError(t,e);else if(!this.isEditorMode()){const s=document.createElement("div"),r=this.cgl.canvas.getBoundingClientRect();s.setAttribute("style","position:absolute;border:5px solid red;padding:15px;background-color:black;color:white;font-family:monospace;"),s.style.top=r.top+"px",s.style.left=r.left+"px";let n="cables - An error occured:<br/>";n+="["+t+"] - "+e,i&&(n+="<br/>Exception: "+i.message),s.innerHTML=n;const o=this.cgl.canvas.parentElement;for(;o.hasChildNodes();)o.removeChild(o.lastChild);document.body.appendChild(s)}},Ft.prototype.preRenderOps=function(){this._log.log("prerendering...");for(let t=0;t<this.ops.length;t++)this.ops[t].preRender&&(this.ops[t].preRender(),this._log.log("prerender "+this.ops[t].objName))},Ft.prototype.dispose=function(){this.pause(),this.clear()},Ft.prototype.pushTriggerStack=function(t){this._triggerStack.push(t)},Ft.prototype.popTriggerStack=function(){this._triggerStack.pop()},Ft.prototype.printTriggerStack=function(){if(0==this._triggerStack.length)return void console.log("stack length",this._triggerStack.length);console.groupCollapsed("trigger port stack "+this._triggerStack[this._triggerStack.length-1].parent.name+"."+this._triggerStack[this._triggerStack.length-1].name);const t=[];for(let e=0;e<this._triggerStack.length;e++)t.push(e+". "+this._triggerStack[e].parent.name+" "+this._triggerStack[e].name);console.table(t),console.groupEnd()};var Ct=Ft;const Mt={addPatch:function(t,e){let i=t,s=A();if("string"==typeof t&&(s=t,i=document.getElementById(s),!i))return void console.error(s+" Polyshape Container Element not found!");const r=document.createElement("canvas");return r.id="glcanvas_"+s,r.width=i.clientWidth,r.height=i.clientHeight,window.addEventListener("resize",function(){this.setAttribute("width",i.clientWidth),this.height=i.clientHeight}.bind(r)),i.appendChild(r),(e=e||{}).glCanvasId=r.id,e.onError||(e.onError=function(t){console.error(t)}),CABLES.patch=new Ct(e),r}},wt={toneJsInitialized:!1,createAudioContext:function(t){if(window.AudioContext=window.AudioContext||window.webkitAudioContext,window.AudioContext)return window.audioContext||(window.audioContext=new AudioContext),window.Tone&&!wt.toneJsInitialized&&(Tone.setContext(window.audioContext),wt.toneJsInitialized=!0),window.audioContext;t.patch.config.onError("NO_WEBAUDIO","Web Audio is not supported in this browser.")},getAudioContext:function(){return window.audioContext},createAudioInPort:function(t,e,i,s){if(!t||!e||!i){const e="ERROR: createAudioInPort needs three parameters, op, portName and audioNode";throw t.log(e),new Error(e)}s||(s=0),t.webAudio=t.webAudio||{},t.webAudio.audioInPorts=t.webAudio.audioInPorts||[];const r=t.inObject(e);return r.webAudio={},r.webAudio.previousAudioInNode=null,r.webAudio.audioNode=i,t.webAudio.audioInPorts[e]=r,r.onChange=function(){const e=r.get();if(e)try{e.connect?(e.connect(r.webAudio.audioNode,0,s),t.setUiError("audioCtx",null)):t.setUiError("audioCtx","The passed input is not an audio context. Please make sure you connect an audio context to the input.",2)}catch(i){throw t.log("Error: Failed to connect web audio node!",i),t.log("port.webAudio.audioNode",r.webAudio.audioNode),t.log("audioInNode: ",e),t.log("inputChannelIndex:",s),t.log("audioInNode.connect: ",e.connect),i}else if(r.webAudio.previousAudioInNode)try{r.webAudio.previousAudioInNode.disconnect&&r.webAudio.previousAudioInNode.disconnect(r.webAudio.audioNode,0,s),t.setUiError("audioCtx",null)}catch(e){try{r.webAudio.previousAudioInNode.disconnect(r.webAudio.audioNode)}catch(i){throw t.log("Disconnecting audio node with in/out port index, as well as without in/out-port-index did not work ",e),e.printStackTrace&&e.printStackTrace(),e}}r.webAudio.previousAudioInNode=e},r},replaceNodeInPort:function(t,e,i){const s=t.webAudio.previousAudioInNode;if(s&&s.disconnect){try{s.disconnect(e)}catch(t){throw t.printStackTrace&&t.printStackTrace(),new Error("replaceNodeInPort: Could not disconnect old audio node. "+t.name+" "+t.message)}t.webAudio.audioNode=i;try{s.connect(i)}catch(t){throw t.printStackTrace&&t.printStackTrace(),new Error("replaceNodeInPort: Could not connect to new node. "+t.name+" "+t.message)}}},createAudioOutPort:function(t,e,i){if(!t||!e||!i){const e="ERROR: createAudioOutPort needs three parameters, op, portName and audioNode";throw t.log(e),new Error(e)}const s=t.outObject(e);return s.set(i),s},createAudioParamInPort:function(t,e,i,s,r){if(!t||!e||!i)return t.log("ERROR: createAudioParamInPort needs three parameters, op, portName and audioNode"),t&&t.name&&t.log("opname: ",t.name),t.log("portName",e),void t.log("audioNode: ",i);t.webAudio=t.webAudio||{},t.webAudio.audioInPorts=t.webAudio.audioInPorts||[];const n=t.inDynamic(e,[B.OP_PORT_TYPE_VALUE,B.OP_PORT_TYPE_OBJECT],s,r);return n.webAudio={},n.webAudio.previousAudioInNode=null,n.webAudio.audioNode=i,t.webAudio.audioInPorts[e]=n,n.onChange=function(){const e=n.get(),i=n.webAudio.audioNode,s=wt.getAudioContext();if(null!=e)if("object"==typeof e&&e.connect){try{e.connect(i)}catch(e){throw t.log("Could not connect audio node: ",e),e.printStackTrace&&e.printStackTrace(),e}n.webAudio.previousAudioInNode=e}else{if(i._param&&i._param.minValue&&i._param.maxValue)if(e>=i._param.minValue&&e<=i._param.maxValue)try{i.setValueAtTime?i.setValueAtTime(e,s.currentTime):i.value=e}catch(e){throw t.log("Possible AudioParam problem with tone.js op: ",e),e.printStackTrace&&e.printStackTrace(),e}else t.log("Warning: The value for an audio parameter is out of range!");else if(i.minValue&&i.maxValue)if(e>=i.minValue&&e<=i.maxValue)try{i.setValueAtTime?i.setValueAtTime(e,s.currentTime):i.value=e}catch(e){throw t.log("AudioParam has minValue / maxValue defined, and value is in range, but setting the value failed! ",e),e.printStackTrace&&e.printStackTrace(),e}else t.log("Warning: The value for an audio parameter is out of range!");else try{i.setValueAtTime?i.setValueAtTime(e,s.currentTime):i.value=e}catch(e){throw t.log("Possible AudioParam problem (without minValue / maxValue): ",e),e.printStackTrace&&e.printStackTrace(),e}if(n.webAudio.previousAudioInNode&&n.webAudio.previousAudioInNode.disconnect){try{n.webAudio.previousAudioInNode.disconnect(i)}catch(e){throw t.log("Could not disconnect previous audio node: ",e),e}n.webAudio.previousAudioInNode=void 0}}else n.webAudio.previousAudioInNode},n},loadAudioFile:function(t,e,i,s,r){const n=wt.createAudioContext();let o=null;(r||void 0===r)&&(o=t.loading.start("audio",e),t.isEditorMode()&&gui.jobs().start({id:"loadaudio"+o,title:" loading audio ("+e+")"}));const h=new XMLHttpRequest;e&&(h.open("GET",e,!0),h.responseType="arraybuffer",h.onload=function(){t.loading.finished(o),t.isEditorMode()&&gui.jobs().finish("loadaudio"+o),n.decodeAudioData(h.response,i,s)},h.send())},isValidToneTime:function(t){try{new Tone.Time(t)}catch(t){return!1}return!0},isValidToneNote:function(t){try{Tone.Frequency(t)}catch(t){return!1}return!0}},Ut=function(t,e,i){this._patch=t,this.connector=i,this._log=new _("PatchConnectionReceiver")};Ut.prototype._receive=function(t){let e={};if(e=t.hasOwnProperty("event")?t:JSON.parse(t.data),e.event==k.PACO_OP_CREATE){if(this._log.log("op create: data.vars.objName"),this._patch.getOpById(e.vars.opId))return;let t=null;window.gui?gui.serverOps.loadOpLibs(e.vars.objName,()=>{t=this._patch.addOp(e.vars.objName,null,e.vars.opId),t.id=e.vars.opId}):(t=this._patch.addOp(e.vars.objName,null,e.vars.opId),t.id=e.vars.opId)}else if(e.event==k.PACO_LOAD)this._log.log("PACO load patch....."),this._patch.clear(),this._patch.deSerialize(e.vars.patch);else if(e.event==k.PACO_CLEAR)this._patch.clear(),this._log.log("clear");else if(e.event==k.PACO_OP_DELETE)this._log.log("op delete"),this._patch.deleteOp(e.vars.op,!0);else if(e.event==k.PACO_OP_ENABLE){const t=this._patch.getOpById(e.vars.op);t&&(t.enabled=!0)}else if(e.event==k.PACO_OP_DISABLE){const t=this._patch.getOpById(e.vars.op);t&&(t.enabled=!1)}else if(e.event==k.PACO_UNLINK){const t=this._patch.getOpById(e.vars.op1),i=this._patch.getOpById(e.vars.op2);if(!t||!i)return void console.log("[paco] unlink op not found ");const s=t.getPort(e.vars.port1),r=i.getPort(e.vars.port2);s.removeLinkTo(r)}else if(e.event==k.PACO_LINK){const t=this._patch.getOpById(e.vars.op1),i=this._patch.getOpById(e.vars.op2);this._patch.link(t,e.vars.port1,i,e.vars.port2)}else if(e.event==k.PACO_VALUECHANGE){this._patch.getOpById(e.vars.op).getPort(e.vars.port).set(e.vars.v)}else this._log.warn("unknown patchConnectionEvent!",t)};const Bt=function(t){this.connectors=[],t.addEventListener("onOpDelete",t=>{this.send(CABLES.PACO_OP_DELETE,{op:t.id})}),t.addEventListener("onOpAdd",t=>{this.send(CABLES.PACO_OP_CREATE,{opId:t.id,objName:t.objName})}),t.addEventListener("onUnLink",(t,e)=>{this.send(CABLES.PACO_UNLINK,{op1:t.parent.id,op2:e.parent.id,port1:t.getName(),port2:e.getName()})}),t.addEventListener("onLink",(t,e)=>{this.send(CABLES.PACO_LINK,{op1:t.parent.id,op2:e.parent.id,port1:t.name,port2:e.name})})};Bt.prototype.send=function(t,e){for(let i=0;i<this.connectors.length;i++)this.connectors[i].send(t,e)};const Lt=function(){window.BroadcastChannel&&(this.bc=new BroadcastChannel("test_channel"))};Lt.prototype.receive=function(t){this.bc&&(this._log.log("init"),this.bc.onmessage=t._receive.bind(t))},Lt.prototype.send=function(t,e){if(!this.bc)return;const i={};i.event=t,i.vars=e,this.bc.postMessage(JSON.stringify(i))};const kt=Object.assign({EventTarget:p,EMBED:Mt,Link:J,Port:D,Op:Z,Profiler:Nt,Requirements:St,Patch:Ct,Instancing:Pt,Timer:pt,WEBAUDIO:wt,Variable:function(){let t=null;const e=[];this.onChanged=function(t){e.push(t)},this.getValue=function(){return t},this.setValue=function(e){t=e,this.emitChanged()},this.emitChanged=function(){for(let t=0;t<e.length;t++)e[t]()}},LoadingStatus:Rt,now:_t,internalNow:ut},s,r,n,U,o,L,k,U,B);e.default=kt;(function(){return!this})()||console.warn("not in strict mode: index core")}]).default;
//# sourceMappingURL=cables.min.js.mapvar CABLES = CABLES || {}; CABLES.build = {"timestamp":1642088436991,"created":"2022-01-13T15:40:36.991Z","git":{"branch":"master","commit":"c537af9dc816369192a4c7405dc4d949add1219c","date":null,"message":null}};
/*!
@fileoverview gl-matrix - High performance matrix and vector operations
@author Brandon Jones
@author Colin MacKenzie IV
@version 3.1.0

Copyright (c) 2015-2019, Brandon Jones, Colin MacKenzie IV.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/
!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports):"function"==typeof define&&define.amd?define(["exports"],n):n((t=t||self).glMatrix={})}(this,function(t){"use strict";var n=1e-6,a="undefined"!=typeof Float32Array?Float32Array:Array,r=Math.random;var u=Math.PI/180;Math.hypot||(Math.hypot=function(){for(var t=0,n=arguments.length;n--;)t+=arguments[n]*arguments[n];return Math.sqrt(t)});var e=Object.freeze({EPSILON:n,get ARRAY_TYPE(){return a},RANDOM:r,setMatrixArrayType:function(t){a=t},toRadian:function(t){return t*u},equals:function(t,a){return Math.abs(t-a)<=n*Math.max(1,Math.abs(t),Math.abs(a))}});function o(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=a[0],c=a[1],h=a[2],s=a[3];return t[0]=r*i+e*c,t[1]=u*i+o*c,t[2]=r*h+e*s,t[3]=u*h+o*s,t}function i(t,n,a){return t[0]=n[0]-a[0],t[1]=n[1]-a[1],t[2]=n[2]-a[2],t[3]=n[3]-a[3],t}var c=o,h=i,s=Object.freeze({create:function(){var t=new a(4);return a!=Float32Array&&(t[1]=0,t[2]=0),t[0]=1,t[3]=1,t},clone:function(t){var n=new a(4);return n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=t[3],n},copy:function(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t},identity:function(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t},fromValues:function(t,n,r,u){var e=new a(4);return e[0]=t,e[1]=n,e[2]=r,e[3]=u,e},set:function(t,n,a,r,u){return t[0]=n,t[1]=a,t[2]=r,t[3]=u,t},transpose:function(t,n){if(t===n){var a=n[1];t[1]=n[2],t[2]=a}else t[0]=n[0],t[1]=n[2],t[2]=n[1],t[3]=n[3];return t},invert:function(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=a*e-u*r;return o?(o=1/o,t[0]=e*o,t[1]=-r*o,t[2]=-u*o,t[3]=a*o,t):null},adjoint:function(t,n){var a=n[0];return t[0]=n[3],t[1]=-n[1],t[2]=-n[2],t[3]=a,t},determinant:function(t){return t[0]*t[3]-t[2]*t[1]},multiply:o,rotate:function(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=Math.sin(a),c=Math.cos(a);return t[0]=r*c+e*i,t[1]=u*c+o*i,t[2]=r*-i+e*c,t[3]=u*-i+o*c,t},scale:function(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=a[0],c=a[1];return t[0]=r*i,t[1]=u*i,t[2]=e*c,t[3]=o*c,t},fromRotation:function(t,n){var a=Math.sin(n),r=Math.cos(n);return t[0]=r,t[1]=a,t[2]=-a,t[3]=r,t},fromScaling:function(t,n){return t[0]=n[0],t[1]=0,t[2]=0,t[3]=n[1],t},str:function(t){return"mat2("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+")"},frob:function(t){return Math.hypot(t[0],t[1],t[2],t[3])},LDU:function(t,n,a,r){return t[2]=r[2]/r[0],a[0]=r[0],a[1]=r[1],a[3]=r[3]-t[2]*a[1],[t,n,a]},add:function(t,n,a){return t[0]=n[0]+a[0],t[1]=n[1]+a[1],t[2]=n[2]+a[2],t[3]=n[3]+a[3],t},subtract:i,exactEquals:function(t,n){return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]&&t[3]===n[3]},equals:function(t,a){var r=t[0],u=t[1],e=t[2],o=t[3],i=a[0],c=a[1],h=a[2],s=a[3];return Math.abs(r-i)<=n*Math.max(1,Math.abs(r),Math.abs(i))&&Math.abs(u-c)<=n*Math.max(1,Math.abs(u),Math.abs(c))&&Math.abs(e-h)<=n*Math.max(1,Math.abs(e),Math.abs(h))&&Math.abs(o-s)<=n*Math.max(1,Math.abs(o),Math.abs(s))},multiplyScalar:function(t,n,a){return t[0]=n[0]*a,t[1]=n[1]*a,t[2]=n[2]*a,t[3]=n[3]*a,t},multiplyScalarAndAdd:function(t,n,a,r){return t[0]=n[0]+a[0]*r,t[1]=n[1]+a[1]*r,t[2]=n[2]+a[2]*r,t[3]=n[3]+a[3]*r,t},mul:c,sub:h});function M(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=n[4],c=n[5],h=a[0],s=a[1],M=a[2],f=a[3],l=a[4],v=a[5];return t[0]=r*h+e*s,t[1]=u*h+o*s,t[2]=r*M+e*f,t[3]=u*M+o*f,t[4]=r*l+e*v+i,t[5]=u*l+o*v+c,t}function f(t,n,a){return t[0]=n[0]-a[0],t[1]=n[1]-a[1],t[2]=n[2]-a[2],t[3]=n[3]-a[3],t[4]=n[4]-a[4],t[5]=n[5]-a[5],t}var l=M,v=f,b=Object.freeze({create:function(){var t=new a(6);return a!=Float32Array&&(t[1]=0,t[2]=0,t[4]=0,t[5]=0),t[0]=1,t[3]=1,t},clone:function(t){var n=new a(6);return n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=t[3],n[4]=t[4],n[5]=t[5],n},copy:function(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t},identity:function(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t[4]=0,t[5]=0,t},fromValues:function(t,n,r,u,e,o){var i=new a(6);return i[0]=t,i[1]=n,i[2]=r,i[3]=u,i[4]=e,i[5]=o,i},set:function(t,n,a,r,u,e,o){return t[0]=n,t[1]=a,t[2]=r,t[3]=u,t[4]=e,t[5]=o,t},invert:function(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=n[4],i=n[5],c=a*e-r*u;return c?(c=1/c,t[0]=e*c,t[1]=-r*c,t[2]=-u*c,t[3]=a*c,t[4]=(u*i-e*o)*c,t[5]=(r*o-a*i)*c,t):null},determinant:function(t){return t[0]*t[3]-t[1]*t[2]},multiply:M,rotate:function(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=n[4],c=n[5],h=Math.sin(a),s=Math.cos(a);return t[0]=r*s+e*h,t[1]=u*s+o*h,t[2]=r*-h+e*s,t[3]=u*-h+o*s,t[4]=i,t[5]=c,t},scale:function(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=n[4],c=n[5],h=a[0],s=a[1];return t[0]=r*h,t[1]=u*h,t[2]=e*s,t[3]=o*s,t[4]=i,t[5]=c,t},translate:function(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=n[4],c=n[5],h=a[0],s=a[1];return t[0]=r,t[1]=u,t[2]=e,t[3]=o,t[4]=r*h+e*s+i,t[5]=u*h+o*s+c,t},fromRotation:function(t,n){var a=Math.sin(n),r=Math.cos(n);return t[0]=r,t[1]=a,t[2]=-a,t[3]=r,t[4]=0,t[5]=0,t},fromScaling:function(t,n){return t[0]=n[0],t[1]=0,t[2]=0,t[3]=n[1],t[4]=0,t[5]=0,t},fromTranslation:function(t,n){return t[0]=1,t[1]=0,t[2]=0,t[3]=1,t[4]=n[0],t[5]=n[1],t},str:function(t){return"mat2d("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+", "+t[4]+", "+t[5]+")"},frob:function(t){return Math.hypot(t[0],t[1],t[2],t[3],t[4],t[5],1)},add:function(t,n,a){return t[0]=n[0]+a[0],t[1]=n[1]+a[1],t[2]=n[2]+a[2],t[3]=n[3]+a[3],t[4]=n[4]+a[4],t[5]=n[5]+a[5],t},subtract:f,multiplyScalar:function(t,n,a){return t[0]=n[0]*a,t[1]=n[1]*a,t[2]=n[2]*a,t[3]=n[3]*a,t[4]=n[4]*a,t[5]=n[5]*a,t},multiplyScalarAndAdd:function(t,n,a,r){return t[0]=n[0]+a[0]*r,t[1]=n[1]+a[1]*r,t[2]=n[2]+a[2]*r,t[3]=n[3]+a[3]*r,t[4]=n[4]+a[4]*r,t[5]=n[5]+a[5]*r,t},exactEquals:function(t,n){return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]&&t[3]===n[3]&&t[4]===n[4]&&t[5]===n[5]},equals:function(t,a){var r=t[0],u=t[1],e=t[2],o=t[3],i=t[4],c=t[5],h=a[0],s=a[1],M=a[2],f=a[3],l=a[4],v=a[5];return Math.abs(r-h)<=n*Math.max(1,Math.abs(r),Math.abs(h))&&Math.abs(u-s)<=n*Math.max(1,Math.abs(u),Math.abs(s))&&Math.abs(e-M)<=n*Math.max(1,Math.abs(e),Math.abs(M))&&Math.abs(o-f)<=n*Math.max(1,Math.abs(o),Math.abs(f))&&Math.abs(i-l)<=n*Math.max(1,Math.abs(i),Math.abs(l))&&Math.abs(c-v)<=n*Math.max(1,Math.abs(c),Math.abs(v))},mul:l,sub:v});function m(){var t=new a(9);return a!=Float32Array&&(t[1]=0,t[2]=0,t[3]=0,t[5]=0,t[6]=0,t[7]=0),t[0]=1,t[4]=1,t[8]=1,t}function d(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=n[4],c=n[5],h=n[6],s=n[7],M=n[8],f=a[0],l=a[1],v=a[2],b=a[3],m=a[4],d=a[5],x=a[6],p=a[7],y=a[8];return t[0]=f*r+l*o+v*h,t[1]=f*u+l*i+v*s,t[2]=f*e+l*c+v*M,t[3]=b*r+m*o+d*h,t[4]=b*u+m*i+d*s,t[5]=b*e+m*c+d*M,t[6]=x*r+p*o+y*h,t[7]=x*u+p*i+y*s,t[8]=x*e+p*c+y*M,t}function x(t,n,a){return t[0]=n[0]-a[0],t[1]=n[1]-a[1],t[2]=n[2]-a[2],t[3]=n[3]-a[3],t[4]=n[4]-a[4],t[5]=n[5]-a[5],t[6]=n[6]-a[6],t[7]=n[7]-a[7],t[8]=n[8]-a[8],t}var p=d,y=x,q=Object.freeze({create:m,fromMat4:function(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[4],t[4]=n[5],t[5]=n[6],t[6]=n[8],t[7]=n[9],t[8]=n[10],t},clone:function(t){var n=new a(9);return n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=t[3],n[4]=t[4],n[5]=t[5],n[6]=t[6],n[7]=t[7],n[8]=t[8],n},copy:function(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t},fromValues:function(t,n,r,u,e,o,i,c,h){var s=new a(9);return s[0]=t,s[1]=n,s[2]=r,s[3]=u,s[4]=e,s[5]=o,s[6]=i,s[7]=c,s[8]=h,s},set:function(t,n,a,r,u,e,o,i,c,h){return t[0]=n,t[1]=a,t[2]=r,t[3]=u,t[4]=e,t[5]=o,t[6]=i,t[7]=c,t[8]=h,t},identity:function(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=0,t[7]=0,t[8]=1,t},transpose:function(t,n){if(t===n){var a=n[1],r=n[2],u=n[5];t[1]=n[3],t[2]=n[6],t[3]=a,t[5]=n[7],t[6]=r,t[7]=u}else t[0]=n[0],t[1]=n[3],t[2]=n[6],t[3]=n[1],t[4]=n[4],t[5]=n[7],t[6]=n[2],t[7]=n[5],t[8]=n[8];return t},invert:function(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=n[4],i=n[5],c=n[6],h=n[7],s=n[8],M=s*o-i*h,f=-s*e+i*c,l=h*e-o*c,v=a*M+r*f+u*l;return v?(v=1/v,t[0]=M*v,t[1]=(-s*r+u*h)*v,t[2]=(i*r-u*o)*v,t[3]=f*v,t[4]=(s*a-u*c)*v,t[5]=(-i*a+u*e)*v,t[6]=l*v,t[7]=(-h*a+r*c)*v,t[8]=(o*a-r*e)*v,t):null},adjoint:function(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=n[4],i=n[5],c=n[6],h=n[7],s=n[8];return t[0]=o*s-i*h,t[1]=u*h-r*s,t[2]=r*i-u*o,t[3]=i*c-e*s,t[4]=a*s-u*c,t[5]=u*e-a*i,t[6]=e*h-o*c,t[7]=r*c-a*h,t[8]=a*o-r*e,t},determinant:function(t){var n=t[0],a=t[1],r=t[2],u=t[3],e=t[4],o=t[5],i=t[6],c=t[7],h=t[8];return n*(h*e-o*c)+a*(-h*u+o*i)+r*(c*u-e*i)},multiply:d,translate:function(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=n[4],c=n[5],h=n[6],s=n[7],M=n[8],f=a[0],l=a[1];return t[0]=r,t[1]=u,t[2]=e,t[3]=o,t[4]=i,t[5]=c,t[6]=f*r+l*o+h,t[7]=f*u+l*i+s,t[8]=f*e+l*c+M,t},rotate:function(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=n[4],c=n[5],h=n[6],s=n[7],M=n[8],f=Math.sin(a),l=Math.cos(a);return t[0]=l*r+f*o,t[1]=l*u+f*i,t[2]=l*e+f*c,t[3]=l*o-f*r,t[4]=l*i-f*u,t[5]=l*c-f*e,t[6]=h,t[7]=s,t[8]=M,t},scale:function(t,n,a){var r=a[0],u=a[1];return t[0]=r*n[0],t[1]=r*n[1],t[2]=r*n[2],t[3]=u*n[3],t[4]=u*n[4],t[5]=u*n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t},fromTranslation:function(t,n){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=n[0],t[7]=n[1],t[8]=1,t},fromRotation:function(t,n){var a=Math.sin(n),r=Math.cos(n);return t[0]=r,t[1]=a,t[2]=0,t[3]=-a,t[4]=r,t[5]=0,t[6]=0,t[7]=0,t[8]=1,t},fromScaling:function(t,n){return t[0]=n[0],t[1]=0,t[2]=0,t[3]=0,t[4]=n[1],t[5]=0,t[6]=0,t[7]=0,t[8]=1,t},fromMat2d:function(t,n){return t[0]=n[0],t[1]=n[1],t[2]=0,t[3]=n[2],t[4]=n[3],t[5]=0,t[6]=n[4],t[7]=n[5],t[8]=1,t},fromQuat:function(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=a+a,i=r+r,c=u+u,h=a*o,s=r*o,M=r*i,f=u*o,l=u*i,v=u*c,b=e*o,m=e*i,d=e*c;return t[0]=1-M-v,t[3]=s-d,t[6]=f+m,t[1]=s+d,t[4]=1-h-v,t[7]=l-b,t[2]=f-m,t[5]=l+b,t[8]=1-h-M,t},normalFromMat4:function(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=n[4],i=n[5],c=n[6],h=n[7],s=n[8],M=n[9],f=n[10],l=n[11],v=n[12],b=n[13],m=n[14],d=n[15],x=a*i-r*o,p=a*c-u*o,y=a*h-e*o,q=r*c-u*i,g=r*h-e*i,A=u*h-e*c,w=s*b-M*v,R=s*m-f*v,z=s*d-l*v,P=M*m-f*b,j=M*d-l*b,I=f*d-l*m,S=x*I-p*j+y*P+q*z-g*R+A*w;return S?(S=1/S,t[0]=(i*I-c*j+h*P)*S,t[1]=(c*z-o*I-h*R)*S,t[2]=(o*j-i*z+h*w)*S,t[3]=(u*j-r*I-e*P)*S,t[4]=(a*I-u*z+e*R)*S,t[5]=(r*z-a*j-e*w)*S,t[6]=(b*A-m*g+d*q)*S,t[7]=(m*y-v*A-d*p)*S,t[8]=(v*g-b*y+d*x)*S,t):null},projection:function(t,n,a){return t[0]=2/n,t[1]=0,t[2]=0,t[3]=0,t[4]=-2/a,t[5]=0,t[6]=-1,t[7]=1,t[8]=1,t},str:function(t){return"mat3("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+", "+t[4]+", "+t[5]+", "+t[6]+", "+t[7]+", "+t[8]+")"},frob:function(t){return Math.hypot(t[0],t[1],t[2],t[3],t[4],t[5],t[6],t[7],t[8])},add:function(t,n,a){return t[0]=n[0]+a[0],t[1]=n[1]+a[1],t[2]=n[2]+a[2],t[3]=n[3]+a[3],t[4]=n[4]+a[4],t[5]=n[5]+a[5],t[6]=n[6]+a[6],t[7]=n[7]+a[7],t[8]=n[8]+a[8],t},subtract:x,multiplyScalar:function(t,n,a){return t[0]=n[0]*a,t[1]=n[1]*a,t[2]=n[2]*a,t[3]=n[3]*a,t[4]=n[4]*a,t[5]=n[5]*a,t[6]=n[6]*a,t[7]=n[7]*a,t[8]=n[8]*a,t},multiplyScalarAndAdd:function(t,n,a,r){return t[0]=n[0]+a[0]*r,t[1]=n[1]+a[1]*r,t[2]=n[2]+a[2]*r,t[3]=n[3]+a[3]*r,t[4]=n[4]+a[4]*r,t[5]=n[5]+a[5]*r,t[6]=n[6]+a[6]*r,t[7]=n[7]+a[7]*r,t[8]=n[8]+a[8]*r,t},exactEquals:function(t,n){return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]&&t[3]===n[3]&&t[4]===n[4]&&t[5]===n[5]&&t[6]===n[6]&&t[7]===n[7]&&t[8]===n[8]},equals:function(t,a){var r=t[0],u=t[1],e=t[2],o=t[3],i=t[4],c=t[5],h=t[6],s=t[7],M=t[8],f=a[0],l=a[1],v=a[2],b=a[3],m=a[4],d=a[5],x=a[6],p=a[7],y=a[8];return Math.abs(r-f)<=n*Math.max(1,Math.abs(r),Math.abs(f))&&Math.abs(u-l)<=n*Math.max(1,Math.abs(u),Math.abs(l))&&Math.abs(e-v)<=n*Math.max(1,Math.abs(e),Math.abs(v))&&Math.abs(o-b)<=n*Math.max(1,Math.abs(o),Math.abs(b))&&Math.abs(i-m)<=n*Math.max(1,Math.abs(i),Math.abs(m))&&Math.abs(c-d)<=n*Math.max(1,Math.abs(c),Math.abs(d))&&Math.abs(h-x)<=n*Math.max(1,Math.abs(h),Math.abs(x))&&Math.abs(s-p)<=n*Math.max(1,Math.abs(s),Math.abs(p))&&Math.abs(M-y)<=n*Math.max(1,Math.abs(M),Math.abs(y))},mul:p,sub:y});function g(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}function A(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=n[4],c=n[5],h=n[6],s=n[7],M=n[8],f=n[9],l=n[10],v=n[11],b=n[12],m=n[13],d=n[14],x=n[15],p=a[0],y=a[1],q=a[2],g=a[3];return t[0]=p*r+y*i+q*M+g*b,t[1]=p*u+y*c+q*f+g*m,t[2]=p*e+y*h+q*l+g*d,t[3]=p*o+y*s+q*v+g*x,p=a[4],y=a[5],q=a[6],g=a[7],t[4]=p*r+y*i+q*M+g*b,t[5]=p*u+y*c+q*f+g*m,t[6]=p*e+y*h+q*l+g*d,t[7]=p*o+y*s+q*v+g*x,p=a[8],y=a[9],q=a[10],g=a[11],t[8]=p*r+y*i+q*M+g*b,t[9]=p*u+y*c+q*f+g*m,t[10]=p*e+y*h+q*l+g*d,t[11]=p*o+y*s+q*v+g*x,p=a[12],y=a[13],q=a[14],g=a[15],t[12]=p*r+y*i+q*M+g*b,t[13]=p*u+y*c+q*f+g*m,t[14]=p*e+y*h+q*l+g*d,t[15]=p*o+y*s+q*v+g*x,t}function w(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=r+r,c=u+u,h=e+e,s=r*i,M=r*c,f=r*h,l=u*c,v=u*h,b=e*h,m=o*i,d=o*c,x=o*h;return t[0]=1-(l+b),t[1]=M+x,t[2]=f-d,t[3]=0,t[4]=M-x,t[5]=1-(s+b),t[6]=v+m,t[7]=0,t[8]=f+d,t[9]=v-m,t[10]=1-(s+l),t[11]=0,t[12]=a[0],t[13]=a[1],t[14]=a[2],t[15]=1,t}function R(t,n){return t[0]=n[12],t[1]=n[13],t[2]=n[14],t}function z(t,n){var a=n[0],r=n[1],u=n[2],e=n[4],o=n[5],i=n[6],c=n[8],h=n[9],s=n[10];return t[0]=Math.hypot(a,r,u),t[1]=Math.hypot(e,o,i),t[2]=Math.hypot(c,h,s),t}function P(t,n){var r=new a(3);z(r,n);var u=1/r[0],e=1/r[1],o=1/r[2],i=n[0]*u,c=n[1]*e,h=n[2]*o,s=n[4]*u,M=n[5]*e,f=n[6]*o,l=n[8]*u,v=n[9]*e,b=n[10]*o,m=i+M+b,d=0;return m>0?(d=2*Math.sqrt(m+1),t[3]=.25*d,t[0]=(f-v)/d,t[1]=(l-h)/d,t[2]=(c-s)/d):i>M&&i>b?(d=2*Math.sqrt(1+i-M-b),t[3]=(f-v)/d,t[0]=.25*d,t[1]=(c+s)/d,t[2]=(l+h)/d):M>b?(d=2*Math.sqrt(1+M-i-b),t[3]=(l-h)/d,t[0]=(c+s)/d,t[1]=.25*d,t[2]=(f+v)/d):(d=2*Math.sqrt(1+b-i-M),t[3]=(c-s)/d,t[0]=(l+h)/d,t[1]=(f+v)/d,t[2]=.25*d),t}function j(t,n,a){return t[0]=n[0]-a[0],t[1]=n[1]-a[1],t[2]=n[2]-a[2],t[3]=n[3]-a[3],t[4]=n[4]-a[4],t[5]=n[5]-a[5],t[6]=n[6]-a[6],t[7]=n[7]-a[7],t[8]=n[8]-a[8],t[9]=n[9]-a[9],t[10]=n[10]-a[10],t[11]=n[11]-a[11],t[12]=n[12]-a[12],t[13]=n[13]-a[13],t[14]=n[14]-a[14],t[15]=n[15]-a[15],t}var I=A,S=j,E=Object.freeze({create:function(){var t=new a(16);return a!=Float32Array&&(t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0),t[0]=1,t[5]=1,t[10]=1,t[15]=1,t},clone:function(t){var n=new a(16);return n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=t[3],n[4]=t[4],n[5]=t[5],n[6]=t[6],n[7]=t[7],n[8]=t[8],n[9]=t[9],n[10]=t[10],n[11]=t[11],n[12]=t[12],n[13]=t[13],n[14]=t[14],n[15]=t[15],n},copy:function(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],t},fromValues:function(t,n,r,u,e,o,i,c,h,s,M,f,l,v,b,m){var d=new a(16);return d[0]=t,d[1]=n,d[2]=r,d[3]=u,d[4]=e,d[5]=o,d[6]=i,d[7]=c,d[8]=h,d[9]=s,d[10]=M,d[11]=f,d[12]=l,d[13]=v,d[14]=b,d[15]=m,d},set:function(t,n,a,r,u,e,o,i,c,h,s,M,f,l,v,b,m){return t[0]=n,t[1]=a,t[2]=r,t[3]=u,t[4]=e,t[5]=o,t[6]=i,t[7]=c,t[8]=h,t[9]=s,t[10]=M,t[11]=f,t[12]=l,t[13]=v,t[14]=b,t[15]=m,t},identity:g,transpose:function(t,n){if(t===n){var a=n[1],r=n[2],u=n[3],e=n[6],o=n[7],i=n[11];t[1]=n[4],t[2]=n[8],t[3]=n[12],t[4]=a,t[6]=n[9],t[7]=n[13],t[8]=r,t[9]=e,t[11]=n[14],t[12]=u,t[13]=o,t[14]=i}else t[0]=n[0],t[1]=n[4],t[2]=n[8],t[3]=n[12],t[4]=n[1],t[5]=n[5],t[6]=n[9],t[7]=n[13],t[8]=n[2],t[9]=n[6],t[10]=n[10],t[11]=n[14],t[12]=n[3],t[13]=n[7],t[14]=n[11],t[15]=n[15];return t},invert:function(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=n[4],i=n[5],c=n[6],h=n[7],s=n[8],M=n[9],f=n[10],l=n[11],v=n[12],b=n[13],m=n[14],d=n[15],x=a*i-r*o,p=a*c-u*o,y=a*h-e*o,q=r*c-u*i,g=r*h-e*i,A=u*h-e*c,w=s*b-M*v,R=s*m-f*v,z=s*d-l*v,P=M*m-f*b,j=M*d-l*b,I=f*d-l*m,S=x*I-p*j+y*P+q*z-g*R+A*w;return S?(S=1/S,t[0]=(i*I-c*j+h*P)*S,t[1]=(u*j-r*I-e*P)*S,t[2]=(b*A-m*g+d*q)*S,t[3]=(f*g-M*A-l*q)*S,t[4]=(c*z-o*I-h*R)*S,t[5]=(a*I-u*z+e*R)*S,t[6]=(m*y-v*A-d*p)*S,t[7]=(s*A-f*y+l*p)*S,t[8]=(o*j-i*z+h*w)*S,t[9]=(r*z-a*j-e*w)*S,t[10]=(v*g-b*y+d*x)*S,t[11]=(M*y-s*g-l*x)*S,t[12]=(i*R-o*P-c*w)*S,t[13]=(a*P-r*R+u*w)*S,t[14]=(b*p-v*q-m*x)*S,t[15]=(s*q-M*p+f*x)*S,t):null},adjoint:function(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=n[4],i=n[5],c=n[6],h=n[7],s=n[8],M=n[9],f=n[10],l=n[11],v=n[12],b=n[13],m=n[14],d=n[15];return t[0]=i*(f*d-l*m)-M*(c*d-h*m)+b*(c*l-h*f),t[1]=-(r*(f*d-l*m)-M*(u*d-e*m)+b*(u*l-e*f)),t[2]=r*(c*d-h*m)-i*(u*d-e*m)+b*(u*h-e*c),t[3]=-(r*(c*l-h*f)-i*(u*l-e*f)+M*(u*h-e*c)),t[4]=-(o*(f*d-l*m)-s*(c*d-h*m)+v*(c*l-h*f)),t[5]=a*(f*d-l*m)-s*(u*d-e*m)+v*(u*l-e*f),t[6]=-(a*(c*d-h*m)-o*(u*d-e*m)+v*(u*h-e*c)),t[7]=a*(c*l-h*f)-o*(u*l-e*f)+s*(u*h-e*c),t[8]=o*(M*d-l*b)-s*(i*d-h*b)+v*(i*l-h*M),t[9]=-(a*(M*d-l*b)-s*(r*d-e*b)+v*(r*l-e*M)),t[10]=a*(i*d-h*b)-o*(r*d-e*b)+v*(r*h-e*i),t[11]=-(a*(i*l-h*M)-o*(r*l-e*M)+s*(r*h-e*i)),t[12]=-(o*(M*m-f*b)-s*(i*m-c*b)+v*(i*f-c*M)),t[13]=a*(M*m-f*b)-s*(r*m-u*b)+v*(r*f-u*M),t[14]=-(a*(i*m-c*b)-o*(r*m-u*b)+v*(r*c-u*i)),t[15]=a*(i*f-c*M)-o*(r*f-u*M)+s*(r*c-u*i),t},determinant:function(t){var n=t[0],a=t[1],r=t[2],u=t[3],e=t[4],o=t[5],i=t[6],c=t[7],h=t[8],s=t[9],M=t[10],f=t[11],l=t[12],v=t[13],b=t[14],m=t[15];return(n*o-a*e)*(M*m-f*b)-(n*i-r*e)*(s*m-f*v)+(n*c-u*e)*(s*b-M*v)+(a*i-r*o)*(h*m-f*l)-(a*c-u*o)*(h*b-M*l)+(r*c-u*i)*(h*v-s*l)},multiply:A,translate:function(t,n,a){var r,u,e,o,i,c,h,s,M,f,l,v,b=a[0],m=a[1],d=a[2];return n===t?(t[12]=n[0]*b+n[4]*m+n[8]*d+n[12],t[13]=n[1]*b+n[5]*m+n[9]*d+n[13],t[14]=n[2]*b+n[6]*m+n[10]*d+n[14],t[15]=n[3]*b+n[7]*m+n[11]*d+n[15]):(r=n[0],u=n[1],e=n[2],o=n[3],i=n[4],c=n[5],h=n[6],s=n[7],M=n[8],f=n[9],l=n[10],v=n[11],t[0]=r,t[1]=u,t[2]=e,t[3]=o,t[4]=i,t[5]=c,t[6]=h,t[7]=s,t[8]=M,t[9]=f,t[10]=l,t[11]=v,t[12]=r*b+i*m+M*d+n[12],t[13]=u*b+c*m+f*d+n[13],t[14]=e*b+h*m+l*d+n[14],t[15]=o*b+s*m+v*d+n[15]),t},scale:function(t,n,a){var r=a[0],u=a[1],e=a[2];return t[0]=n[0]*r,t[1]=n[1]*r,t[2]=n[2]*r,t[3]=n[3]*r,t[4]=n[4]*u,t[5]=n[5]*u,t[6]=n[6]*u,t[7]=n[7]*u,t[8]=n[8]*e,t[9]=n[9]*e,t[10]=n[10]*e,t[11]=n[11]*e,t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],t},rotate:function(t,a,r,u){var e,o,i,c,h,s,M,f,l,v,b,m,d,x,p,y,q,g,A,w,R,z,P,j,I=u[0],S=u[1],E=u[2],O=Math.hypot(I,S,E);return O<n?null:(I*=O=1/O,S*=O,E*=O,e=Math.sin(r),i=1-(o=Math.cos(r)),c=a[0],h=a[1],s=a[2],M=a[3],f=a[4],l=a[5],v=a[6],b=a[7],m=a[8],d=a[9],x=a[10],p=a[11],y=I*I*i+o,q=S*I*i+E*e,g=E*I*i-S*e,A=I*S*i-E*e,w=S*S*i+o,R=E*S*i+I*e,z=I*E*i+S*e,P=S*E*i-I*e,j=E*E*i+o,t[0]=c*y+f*q+m*g,t[1]=h*y+l*q+d*g,t[2]=s*y+v*q+x*g,t[3]=M*y+b*q+p*g,t[4]=c*A+f*w+m*R,t[5]=h*A+l*w+d*R,t[6]=s*A+v*w+x*R,t[7]=M*A+b*w+p*R,t[8]=c*z+f*P+m*j,t[9]=h*z+l*P+d*j,t[10]=s*z+v*P+x*j,t[11]=M*z+b*P+p*j,a!==t&&(t[12]=a[12],t[13]=a[13],t[14]=a[14],t[15]=a[15]),t)},rotateX:function(t,n,a){var r=Math.sin(a),u=Math.cos(a),e=n[4],o=n[5],i=n[6],c=n[7],h=n[8],s=n[9],M=n[10],f=n[11];return n!==t&&(t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15]),t[4]=e*u+h*r,t[5]=o*u+s*r,t[6]=i*u+M*r,t[7]=c*u+f*r,t[8]=h*u-e*r,t[9]=s*u-o*r,t[10]=M*u-i*r,t[11]=f*u-c*r,t},rotateY:function(t,n,a){var r=Math.sin(a),u=Math.cos(a),e=n[0],o=n[1],i=n[2],c=n[3],h=n[8],s=n[9],M=n[10],f=n[11];return n!==t&&(t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15]),t[0]=e*u-h*r,t[1]=o*u-s*r,t[2]=i*u-M*r,t[3]=c*u-f*r,t[8]=e*r+h*u,t[9]=o*r+s*u,t[10]=i*r+M*u,t[11]=c*r+f*u,t},rotateZ:function(t,n,a){var r=Math.sin(a),u=Math.cos(a),e=n[0],o=n[1],i=n[2],c=n[3],h=n[4],s=n[5],M=n[6],f=n[7];return n!==t&&(t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15]),t[0]=e*u+h*r,t[1]=o*u+s*r,t[2]=i*u+M*r,t[3]=c*u+f*r,t[4]=h*u-e*r,t[5]=s*u-o*r,t[6]=M*u-i*r,t[7]=f*u-c*r,t},fromTranslation:function(t,n){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=n[0],t[13]=n[1],t[14]=n[2],t[15]=1,t},fromScaling:function(t,n){return t[0]=n[0],t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=n[1],t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=n[2],t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},fromRotation:function(t,a,r){var u,e,o,i=r[0],c=r[1],h=r[2],s=Math.hypot(i,c,h);return s<n?null:(i*=s=1/s,c*=s,h*=s,u=Math.sin(a),o=1-(e=Math.cos(a)),t[0]=i*i*o+e,t[1]=c*i*o+h*u,t[2]=h*i*o-c*u,t[3]=0,t[4]=i*c*o-h*u,t[5]=c*c*o+e,t[6]=h*c*o+i*u,t[7]=0,t[8]=i*h*o+c*u,t[9]=c*h*o-i*u,t[10]=h*h*o+e,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t)},fromXRotation:function(t,n){var a=Math.sin(n),r=Math.cos(n);return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=r,t[6]=a,t[7]=0,t[8]=0,t[9]=-a,t[10]=r,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},fromYRotation:function(t,n){var a=Math.sin(n),r=Math.cos(n);return t[0]=r,t[1]=0,t[2]=-a,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=a,t[9]=0,t[10]=r,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},fromZRotation:function(t,n){var a=Math.sin(n),r=Math.cos(n);return t[0]=r,t[1]=a,t[2]=0,t[3]=0,t[4]=-a,t[5]=r,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},fromRotationTranslation:w,fromQuat2:function(t,n){var r=new a(3),u=-n[0],e=-n[1],o=-n[2],i=n[3],c=n[4],h=n[5],s=n[6],M=n[7],f=u*u+e*e+o*o+i*i;return f>0?(r[0]=2*(c*i+M*u+h*o-s*e)/f,r[1]=2*(h*i+M*e+s*u-c*o)/f,r[2]=2*(s*i+M*o+c*e-h*u)/f):(r[0]=2*(c*i+M*u+h*o-s*e),r[1]=2*(h*i+M*e+s*u-c*o),r[2]=2*(s*i+M*o+c*e-h*u)),w(t,n,r),t},getTranslation:R,getScaling:z,getRotation:P,fromRotationTranslationScale:function(t,n,a,r){var u=n[0],e=n[1],o=n[2],i=n[3],c=u+u,h=e+e,s=o+o,M=u*c,f=u*h,l=u*s,v=e*h,b=e*s,m=o*s,d=i*c,x=i*h,p=i*s,y=r[0],q=r[1],g=r[2];return t[0]=(1-(v+m))*y,t[1]=(f+p)*y,t[2]=(l-x)*y,t[3]=0,t[4]=(f-p)*q,t[5]=(1-(M+m))*q,t[6]=(b+d)*q,t[7]=0,t[8]=(l+x)*g,t[9]=(b-d)*g,t[10]=(1-(M+v))*g,t[11]=0,t[12]=a[0],t[13]=a[1],t[14]=a[2],t[15]=1,t},fromRotationTranslationScaleOrigin:function(t,n,a,r,u){var e=n[0],o=n[1],i=n[2],c=n[3],h=e+e,s=o+o,M=i+i,f=e*h,l=e*s,v=e*M,b=o*s,m=o*M,d=i*M,x=c*h,p=c*s,y=c*M,q=r[0],g=r[1],A=r[2],w=u[0],R=u[1],z=u[2],P=(1-(b+d))*q,j=(l+y)*q,I=(v-p)*q,S=(l-y)*g,E=(1-(f+d))*g,O=(m+x)*g,T=(v+p)*A,D=(m-x)*A,F=(1-(f+b))*A;return t[0]=P,t[1]=j,t[2]=I,t[3]=0,t[4]=S,t[5]=E,t[6]=O,t[7]=0,t[8]=T,t[9]=D,t[10]=F,t[11]=0,t[12]=a[0]+w-(P*w+S*R+T*z),t[13]=a[1]+R-(j*w+E*R+D*z),t[14]=a[2]+z-(I*w+O*R+F*z),t[15]=1,t},fromQuat:function(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=a+a,i=r+r,c=u+u,h=a*o,s=r*o,M=r*i,f=u*o,l=u*i,v=u*c,b=e*o,m=e*i,d=e*c;return t[0]=1-M-v,t[1]=s+d,t[2]=f-m,t[3]=0,t[4]=s-d,t[5]=1-h-v,t[6]=l+b,t[7]=0,t[8]=f+m,t[9]=l-b,t[10]=1-h-M,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},frustum:function(t,n,a,r,u,e,o){var i=1/(a-n),c=1/(u-r),h=1/(e-o);return t[0]=2*e*i,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=2*e*c,t[6]=0,t[7]=0,t[8]=(a+n)*i,t[9]=(u+r)*c,t[10]=(o+e)*h,t[11]=-1,t[12]=0,t[13]=0,t[14]=o*e*2*h,t[15]=0,t},perspective:function(t,n,a,r,u){var e,o=1/Math.tan(n/2);return t[0]=o/a,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=o,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=-1,t[12]=0,t[13]=0,t[15]=0,null!=u&&u!==1/0?(e=1/(r-u),t[10]=(u+r)*e,t[14]=2*u*r*e):(t[10]=-1,t[14]=-2*r),t},perspectiveFromFieldOfView:function(t,n,a,r){var u=Math.tan(n.upDegrees*Math.PI/180),e=Math.tan(n.downDegrees*Math.PI/180),o=Math.tan(n.leftDegrees*Math.PI/180),i=Math.tan(n.rightDegrees*Math.PI/180),c=2/(o+i),h=2/(u+e);return t[0]=c,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=h,t[6]=0,t[7]=0,t[8]=-(o-i)*c*.5,t[9]=(u-e)*h*.5,t[10]=r/(a-r),t[11]=-1,t[12]=0,t[13]=0,t[14]=r*a/(a-r),t[15]=0,t},ortho:function(t,n,a,r,u,e,o){var i=1/(n-a),c=1/(r-u),h=1/(e-o);return t[0]=-2*i,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=-2*c,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=2*h,t[11]=0,t[12]=(n+a)*i,t[13]=(u+r)*c,t[14]=(o+e)*h,t[15]=1,t},lookAt:function(t,a,r,u){var e,o,i,c,h,s,M,f,l,v,b=a[0],m=a[1],d=a[2],x=u[0],p=u[1],y=u[2],q=r[0],A=r[1],w=r[2];return Math.abs(b-q)<n&&Math.abs(m-A)<n&&Math.abs(d-w)<n?g(t):(M=b-q,f=m-A,l=d-w,e=p*(l*=v=1/Math.hypot(M,f,l))-y*(f*=v),o=y*(M*=v)-x*l,i=x*f-p*M,(v=Math.hypot(e,o,i))?(e*=v=1/v,o*=v,i*=v):(e=0,o=0,i=0),c=f*i-l*o,h=l*e-M*i,s=M*o-f*e,(v=Math.hypot(c,h,s))?(c*=v=1/v,h*=v,s*=v):(c=0,h=0,s=0),t[0]=e,t[1]=c,t[2]=M,t[3]=0,t[4]=o,t[5]=h,t[6]=f,t[7]=0,t[8]=i,t[9]=s,t[10]=l,t[11]=0,t[12]=-(e*b+o*m+i*d),t[13]=-(c*b+h*m+s*d),t[14]=-(M*b+f*m+l*d),t[15]=1,t)},targetTo:function(t,n,a,r){var u=n[0],e=n[1],o=n[2],i=r[0],c=r[1],h=r[2],s=u-a[0],M=e-a[1],f=o-a[2],l=s*s+M*M+f*f;l>0&&(s*=l=1/Math.sqrt(l),M*=l,f*=l);var v=c*f-h*M,b=h*s-i*f,m=i*M-c*s;return(l=v*v+b*b+m*m)>0&&(v*=l=1/Math.sqrt(l),b*=l,m*=l),t[0]=v,t[1]=b,t[2]=m,t[3]=0,t[4]=M*m-f*b,t[5]=f*v-s*m,t[6]=s*b-M*v,t[7]=0,t[8]=s,t[9]=M,t[10]=f,t[11]=0,t[12]=u,t[13]=e,t[14]=o,t[15]=1,t},str:function(t){return"mat4("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+", "+t[4]+", "+t[5]+", "+t[6]+", "+t[7]+", "+t[8]+", "+t[9]+", "+t[10]+", "+t[11]+", "+t[12]+", "+t[13]+", "+t[14]+", "+t[15]+")"},frob:function(t){return Math.hypot(t[0],t[1],t[3],t[4],t[5],t[6],t[7],t[8],t[9],t[10],t[11],t[12],t[13],t[14],t[15])},add:function(t,n,a){return t[0]=n[0]+a[0],t[1]=n[1]+a[1],t[2]=n[2]+a[2],t[3]=n[3]+a[3],t[4]=n[4]+a[4],t[5]=n[5]+a[5],t[6]=n[6]+a[6],t[7]=n[7]+a[7],t[8]=n[8]+a[8],t[9]=n[9]+a[9],t[10]=n[10]+a[10],t[11]=n[11]+a[11],t[12]=n[12]+a[12],t[13]=n[13]+a[13],t[14]=n[14]+a[14],t[15]=n[15]+a[15],t},subtract:j,multiplyScalar:function(t,n,a){return t[0]=n[0]*a,t[1]=n[1]*a,t[2]=n[2]*a,t[3]=n[3]*a,t[4]=n[4]*a,t[5]=n[5]*a,t[6]=n[6]*a,t[7]=n[7]*a,t[8]=n[8]*a,t[9]=n[9]*a,t[10]=n[10]*a,t[11]=n[11]*a,t[12]=n[12]*a,t[13]=n[13]*a,t[14]=n[14]*a,t[15]=n[15]*a,t},multiplyScalarAndAdd:function(t,n,a,r){return t[0]=n[0]+a[0]*r,t[1]=n[1]+a[1]*r,t[2]=n[2]+a[2]*r,t[3]=n[3]+a[3]*r,t[4]=n[4]+a[4]*r,t[5]=n[5]+a[5]*r,t[6]=n[6]+a[6]*r,t[7]=n[7]+a[7]*r,t[8]=n[8]+a[8]*r,t[9]=n[9]+a[9]*r,t[10]=n[10]+a[10]*r,t[11]=n[11]+a[11]*r,t[12]=n[12]+a[12]*r,t[13]=n[13]+a[13]*r,t[14]=n[14]+a[14]*r,t[15]=n[15]+a[15]*r,t},exactEquals:function(t,n){return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]&&t[3]===n[3]&&t[4]===n[4]&&t[5]===n[5]&&t[6]===n[6]&&t[7]===n[7]&&t[8]===n[8]&&t[9]===n[9]&&t[10]===n[10]&&t[11]===n[11]&&t[12]===n[12]&&t[13]===n[13]&&t[14]===n[14]&&t[15]===n[15]},equals:function(t,a){var r=t[0],u=t[1],e=t[2],o=t[3],i=t[4],c=t[5],h=t[6],s=t[7],M=t[8],f=t[9],l=t[10],v=t[11],b=t[12],m=t[13],d=t[14],x=t[15],p=a[0],y=a[1],q=a[2],g=a[3],A=a[4],w=a[5],R=a[6],z=a[7],P=a[8],j=a[9],I=a[10],S=a[11],E=a[12],O=a[13],T=a[14],D=a[15];return Math.abs(r-p)<=n*Math.max(1,Math.abs(r),Math.abs(p))&&Math.abs(u-y)<=n*Math.max(1,Math.abs(u),Math.abs(y))&&Math.abs(e-q)<=n*Math.max(1,Math.abs(e),Math.abs(q))&&Math.abs(o-g)<=n*Math.max(1,Math.abs(o),Math.abs(g))&&Math.abs(i-A)<=n*Math.max(1,Math.abs(i),Math.abs(A))&&Math.abs(c-w)<=n*Math.max(1,Math.abs(c),Math.abs(w))&&Math.abs(h-R)<=n*Math.max(1,Math.abs(h),Math.abs(R))&&Math.abs(s-z)<=n*Math.max(1,Math.abs(s),Math.abs(z))&&Math.abs(M-P)<=n*Math.max(1,Math.abs(M),Math.abs(P))&&Math.abs(f-j)<=n*Math.max(1,Math.abs(f),Math.abs(j))&&Math.abs(l-I)<=n*Math.max(1,Math.abs(l),Math.abs(I))&&Math.abs(v-S)<=n*Math.max(1,Math.abs(v),Math.abs(S))&&Math.abs(b-E)<=n*Math.max(1,Math.abs(b),Math.abs(E))&&Math.abs(m-O)<=n*Math.max(1,Math.abs(m),Math.abs(O))&&Math.abs(d-T)<=n*Math.max(1,Math.abs(d),Math.abs(T))&&Math.abs(x-D)<=n*Math.max(1,Math.abs(x),Math.abs(D))},mul:I,sub:S});function O(){var t=new a(3);return a!=Float32Array&&(t[0]=0,t[1]=0,t[2]=0),t}function T(t){var n=t[0],a=t[1],r=t[2];return Math.hypot(n,a,r)}function D(t,n,r){var u=new a(3);return u[0]=t,u[1]=n,u[2]=r,u}function F(t,n,a){return t[0]=n[0]-a[0],t[1]=n[1]-a[1],t[2]=n[2]-a[2],t}function L(t,n,a){return t[0]=n[0]*a[0],t[1]=n[1]*a[1],t[2]=n[2]*a[2],t}function V(t,n,a){return t[0]=n[0]/a[0],t[1]=n[1]/a[1],t[2]=n[2]/a[2],t}function Q(t,n){var a=n[0]-t[0],r=n[1]-t[1],u=n[2]-t[2];return Math.hypot(a,r,u)}function Y(t,n){var a=n[0]-t[0],r=n[1]-t[1],u=n[2]-t[2];return a*a+r*r+u*u}function X(t){var n=t[0],a=t[1],r=t[2];return n*n+a*a+r*r}function Z(t,n){var a=n[0],r=n[1],u=n[2],e=a*a+r*r+u*u;return e>0&&(e=1/Math.sqrt(e)),t[0]=n[0]*e,t[1]=n[1]*e,t[2]=n[2]*e,t}function _(t,n){return t[0]*n[0]+t[1]*n[1]+t[2]*n[2]}function B(t,n,a){var r=n[0],u=n[1],e=n[2],o=a[0],i=a[1],c=a[2];return t[0]=u*c-e*i,t[1]=e*o-r*c,t[2]=r*i-u*o,t}var N,k=F,U=L,W=V,C=Q,G=Y,H=T,J=X,K=(N=O(),function(t,n,a,r,u,e){var o,i;for(n||(n=3),a||(a=0),i=r?Math.min(r*n+a,t.length):t.length,o=a;o<i;o+=n)N[0]=t[o],N[1]=t[o+1],N[2]=t[o+2],u(N,N,e),t[o]=N[0],t[o+1]=N[1],t[o+2]=N[2];return t}),$=Object.freeze({create:O,clone:function(t){var n=new a(3);return n[0]=t[0],n[1]=t[1],n[2]=t[2],n},length:T,fromValues:D,copy:function(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t},set:function(t,n,a,r){return t[0]=n,t[1]=a,t[2]=r,t},add:function(t,n,a){return t[0]=n[0]+a[0],t[1]=n[1]+a[1],t[2]=n[2]+a[2],t},subtract:F,multiply:L,divide:V,ceil:function(t,n){return t[0]=Math.ceil(n[0]),t[1]=Math.ceil(n[1]),t[2]=Math.ceil(n[2]),t},floor:function(t,n){return t[0]=Math.floor(n[0]),t[1]=Math.floor(n[1]),t[2]=Math.floor(n[2]),t},min:function(t,n,a){return t[0]=Math.min(n[0],a[0]),t[1]=Math.min(n[1],a[1]),t[2]=Math.min(n[2],a[2]),t},max:function(t,n,a){return t[0]=Math.max(n[0],a[0]),t[1]=Math.max(n[1],a[1]),t[2]=Math.max(n[2],a[2]),t},round:function(t,n){return t[0]=Math.round(n[0]),t[1]=Math.round(n[1]),t[2]=Math.round(n[2]),t},scale:function(t,n,a){return t[0]=n[0]*a,t[1]=n[1]*a,t[2]=n[2]*a,t},scaleAndAdd:function(t,n,a,r){return t[0]=n[0]+a[0]*r,t[1]=n[1]+a[1]*r,t[2]=n[2]+a[2]*r,t},distance:Q,squaredDistance:Y,squaredLength:X,negate:function(t,n){return t[0]=-n[0],t[1]=-n[1],t[2]=-n[2],t},inverse:function(t,n){return t[0]=1/n[0],t[1]=1/n[1],t[2]=1/n[2],t},normalize:Z,dot:_,cross:B,lerp:function(t,n,a,r){var u=n[0],e=n[1],o=n[2];return t[0]=u+r*(a[0]-u),t[1]=e+r*(a[1]-e),t[2]=o+r*(a[2]-o),t},hermite:function(t,n,a,r,u,e){var o=e*e,i=o*(2*e-3)+1,c=o*(e-2)+e,h=o*(e-1),s=o*(3-2*e);return t[0]=n[0]*i+a[0]*c+r[0]*h+u[0]*s,t[1]=n[1]*i+a[1]*c+r[1]*h+u[1]*s,t[2]=n[2]*i+a[2]*c+r[2]*h+u[2]*s,t},bezier:function(t,n,a,r,u,e){var o=1-e,i=o*o,c=e*e,h=i*o,s=3*e*i,M=3*c*o,f=c*e;return t[0]=n[0]*h+a[0]*s+r[0]*M+u[0]*f,t[1]=n[1]*h+a[1]*s+r[1]*M+u[1]*f,t[2]=n[2]*h+a[2]*s+r[2]*M+u[2]*f,t},random:function(t,n){n=n||1;var a=2*r()*Math.PI,u=2*r()-1,e=Math.sqrt(1-u*u)*n;return t[0]=Math.cos(a)*e,t[1]=Math.sin(a)*e,t[2]=u*n,t},transformMat4:function(t,n,a){var r=n[0],u=n[1],e=n[2],o=a[3]*r+a[7]*u+a[11]*e+a[15];return o=o||1,t[0]=(a[0]*r+a[4]*u+a[8]*e+a[12])/o,t[1]=(a[1]*r+a[5]*u+a[9]*e+a[13])/o,t[2]=(a[2]*r+a[6]*u+a[10]*e+a[14])/o,t},transformMat3:function(t,n,a){var r=n[0],u=n[1],e=n[2];return t[0]=r*a[0]+u*a[3]+e*a[6],t[1]=r*a[1]+u*a[4]+e*a[7],t[2]=r*a[2]+u*a[5]+e*a[8],t},transformQuat:function(t,n,a){var r=a[0],u=a[1],e=a[2],o=a[3],i=n[0],c=n[1],h=n[2],s=u*h-e*c,M=e*i-r*h,f=r*c-u*i,l=u*f-e*M,v=e*s-r*f,b=r*M-u*s,m=2*o;return s*=m,M*=m,f*=m,l*=2,v*=2,b*=2,t[0]=i+s+l,t[1]=c+M+v,t[2]=h+f+b,t},rotateX:function(t,n,a,r){var u=[],e=[];return u[0]=n[0]-a[0],u[1]=n[1]-a[1],u[2]=n[2]-a[2],e[0]=u[0],e[1]=u[1]*Math.cos(r)-u[2]*Math.sin(r),e[2]=u[1]*Math.sin(r)+u[2]*Math.cos(r),t[0]=e[0]+a[0],t[1]=e[1]+a[1],t[2]=e[2]+a[2],t},rotateY:function(t,n,a,r){var u=[],e=[];return u[0]=n[0]-a[0],u[1]=n[1]-a[1],u[2]=n[2]-a[2],e[0]=u[2]*Math.sin(r)+u[0]*Math.cos(r),e[1]=u[1],e[2]=u[2]*Math.cos(r)-u[0]*Math.sin(r),t[0]=e[0]+a[0],t[1]=e[1]+a[1],t[2]=e[2]+a[2],t},rotateZ:function(t,n,a,r){var u=[],e=[];return u[0]=n[0]-a[0],u[1]=n[1]-a[1],u[2]=n[2]-a[2],e[0]=u[0]*Math.cos(r)-u[1]*Math.sin(r),e[1]=u[0]*Math.sin(r)+u[1]*Math.cos(r),e[2]=u[2],t[0]=e[0]+a[0],t[1]=e[1]+a[1],t[2]=e[2]+a[2],t},angle:function(t,n){var a=D(t[0],t[1],t[2]),r=D(n[0],n[1],n[2]);Z(a,a),Z(r,r);var u=_(a,r);return u>1?0:u<-1?Math.PI:Math.acos(u)},zero:function(t){return t[0]=0,t[1]=0,t[2]=0,t},str:function(t){return"vec3("+t[0]+", "+t[1]+", "+t[2]+")"},exactEquals:function(t,n){return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]},equals:function(t,a){var r=t[0],u=t[1],e=t[2],o=a[0],i=a[1],c=a[2];return Math.abs(r-o)<=n*Math.max(1,Math.abs(r),Math.abs(o))&&Math.abs(u-i)<=n*Math.max(1,Math.abs(u),Math.abs(i))&&Math.abs(e-c)<=n*Math.max(1,Math.abs(e),Math.abs(c))},sub:k,mul:U,div:W,dist:C,sqrDist:G,len:H,sqrLen:J,forEach:K});function tt(){var t=new a(4);return a!=Float32Array&&(t[0]=0,t[1]=0,t[2]=0,t[3]=0),t}function nt(t){var n=new a(4);return n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=t[3],n}function at(t,n,r,u){var e=new a(4);return e[0]=t,e[1]=n,e[2]=r,e[3]=u,e}function rt(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t}function ut(t,n,a,r,u){return t[0]=n,t[1]=a,t[2]=r,t[3]=u,t}function et(t,n,a){return t[0]=n[0]+a[0],t[1]=n[1]+a[1],t[2]=n[2]+a[2],t[3]=n[3]+a[3],t}function ot(t,n,a){return t[0]=n[0]-a[0],t[1]=n[1]-a[1],t[2]=n[2]-a[2],t[3]=n[3]-a[3],t}function it(t,n,a){return t[0]=n[0]*a[0],t[1]=n[1]*a[1],t[2]=n[2]*a[2],t[3]=n[3]*a[3],t}function ct(t,n,a){return t[0]=n[0]/a[0],t[1]=n[1]/a[1],t[2]=n[2]/a[2],t[3]=n[3]/a[3],t}function ht(t,n,a){return t[0]=n[0]*a,t[1]=n[1]*a,t[2]=n[2]*a,t[3]=n[3]*a,t}function st(t,n){var a=n[0]-t[0],r=n[1]-t[1],u=n[2]-t[2],e=n[3]-t[3];return Math.hypot(a,r,u,e)}function Mt(t,n){var a=n[0]-t[0],r=n[1]-t[1],u=n[2]-t[2],e=n[3]-t[3];return a*a+r*r+u*u+e*e}function ft(t){var n=t[0],a=t[1],r=t[2],u=t[3];return Math.hypot(n,a,r,u)}function lt(t){var n=t[0],a=t[1],r=t[2],u=t[3];return n*n+a*a+r*r+u*u}function vt(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=a*a+r*r+u*u+e*e;return o>0&&(o=1/Math.sqrt(o)),t[0]=a*o,t[1]=r*o,t[2]=u*o,t[3]=e*o,t}function bt(t,n){return t[0]*n[0]+t[1]*n[1]+t[2]*n[2]+t[3]*n[3]}function mt(t,n,a,r){var u=n[0],e=n[1],o=n[2],i=n[3];return t[0]=u+r*(a[0]-u),t[1]=e+r*(a[1]-e),t[2]=o+r*(a[2]-o),t[3]=i+r*(a[3]-i),t}function dt(t,n){return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]&&t[3]===n[3]}function xt(t,a){var r=t[0],u=t[1],e=t[2],o=t[3],i=a[0],c=a[1],h=a[2],s=a[3];return Math.abs(r-i)<=n*Math.max(1,Math.abs(r),Math.abs(i))&&Math.abs(u-c)<=n*Math.max(1,Math.abs(u),Math.abs(c))&&Math.abs(e-h)<=n*Math.max(1,Math.abs(e),Math.abs(h))&&Math.abs(o-s)<=n*Math.max(1,Math.abs(o),Math.abs(s))}var pt=ot,yt=it,qt=ct,gt=st,At=Mt,wt=ft,Rt=lt,zt=function(){var t=tt();return function(n,a,r,u,e,o){var i,c;for(a||(a=4),r||(r=0),c=u?Math.min(u*a+r,n.length):n.length,i=r;i<c;i+=a)t[0]=n[i],t[1]=n[i+1],t[2]=n[i+2],t[3]=n[i+3],e(t,t,o),n[i]=t[0],n[i+1]=t[1],n[i+2]=t[2],n[i+3]=t[3];return n}}(),Pt=Object.freeze({create:tt,clone:nt,fromValues:at,copy:rt,set:ut,add:et,subtract:ot,multiply:it,divide:ct,ceil:function(t,n){return t[0]=Math.ceil(n[0]),t[1]=Math.ceil(n[1]),t[2]=Math.ceil(n[2]),t[3]=Math.ceil(n[3]),t},floor:function(t,n){return t[0]=Math.floor(n[0]),t[1]=Math.floor(n[1]),t[2]=Math.floor(n[2]),t[3]=Math.floor(n[3]),t},min:function(t,n,a){return t[0]=Math.min(n[0],a[0]),t[1]=Math.min(n[1],a[1]),t[2]=Math.min(n[2],a[2]),t[3]=Math.min(n[3],a[3]),t},max:function(t,n,a){return t[0]=Math.max(n[0],a[0]),t[1]=Math.max(n[1],a[1]),t[2]=Math.max(n[2],a[2]),t[3]=Math.max(n[3],a[3]),t},round:function(t,n){return t[0]=Math.round(n[0]),t[1]=Math.round(n[1]),t[2]=Math.round(n[2]),t[3]=Math.round(n[3]),t},scale:ht,scaleAndAdd:function(t,n,a,r){return t[0]=n[0]+a[0]*r,t[1]=n[1]+a[1]*r,t[2]=n[2]+a[2]*r,t[3]=n[3]+a[3]*r,t},distance:st,squaredDistance:Mt,length:ft,squaredLength:lt,negate:function(t,n){return t[0]=-n[0],t[1]=-n[1],t[2]=-n[2],t[3]=-n[3],t},inverse:function(t,n){return t[0]=1/n[0],t[1]=1/n[1],t[2]=1/n[2],t[3]=1/n[3],t},normalize:vt,dot:bt,cross:function(t,n,a,r){var u=a[0]*r[1]-a[1]*r[0],e=a[0]*r[2]-a[2]*r[0],o=a[0]*r[3]-a[3]*r[0],i=a[1]*r[2]-a[2]*r[1],c=a[1]*r[3]-a[3]*r[1],h=a[2]*r[3]-a[3]*r[2],s=n[0],M=n[1],f=n[2],l=n[3];return t[0]=M*h-f*c+l*i,t[1]=-s*h+f*o-l*e,t[2]=s*c-M*o+l*u,t[3]=-s*i+M*e-f*u,t},lerp:mt,random:function(t,n){var a,u,e,o,i,c;n=n||1;do{i=(a=2*r()-1)*a+(u=2*r()-1)*u}while(i>=1);do{c=(e=2*r()-1)*e+(o=2*r()-1)*o}while(c>=1);var h=Math.sqrt((1-i)/c);return t[0]=n*a,t[1]=n*u,t[2]=n*e*h,t[3]=n*o*h,t},transformMat4:function(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3];return t[0]=a[0]*r+a[4]*u+a[8]*e+a[12]*o,t[1]=a[1]*r+a[5]*u+a[9]*e+a[13]*o,t[2]=a[2]*r+a[6]*u+a[10]*e+a[14]*o,t[3]=a[3]*r+a[7]*u+a[11]*e+a[15]*o,t},transformQuat:function(t,n,a){var r=n[0],u=n[1],e=n[2],o=a[0],i=a[1],c=a[2],h=a[3],s=h*r+i*e-c*u,M=h*u+c*r-o*e,f=h*e+o*u-i*r,l=-o*r-i*u-c*e;return t[0]=s*h+l*-o+M*-c-f*-i,t[1]=M*h+l*-i+f*-o-s*-c,t[2]=f*h+l*-c+s*-i-M*-o,t[3]=n[3],t},zero:function(t){return t[0]=0,t[1]=0,t[2]=0,t[3]=0,t},str:function(t){return"vec4("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+")"},exactEquals:dt,equals:xt,sub:pt,mul:yt,div:qt,dist:gt,sqrDist:At,len:wt,sqrLen:Rt,forEach:zt});function jt(){var t=new a(4);return a!=Float32Array&&(t[0]=0,t[1]=0,t[2]=0),t[3]=1,t}function It(t,n,a){a*=.5;var r=Math.sin(a);return t[0]=r*n[0],t[1]=r*n[1],t[2]=r*n[2],t[3]=Math.cos(a),t}function St(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=a[0],c=a[1],h=a[2],s=a[3];return t[0]=r*s+o*i+u*h-e*c,t[1]=u*s+o*c+e*i-r*h,t[2]=e*s+o*h+r*c-u*i,t[3]=o*s-r*i-u*c-e*h,t}function Et(t,n,a){a*=.5;var r=n[0],u=n[1],e=n[2],o=n[3],i=Math.sin(a),c=Math.cos(a);return t[0]=r*c+o*i,t[1]=u*c+e*i,t[2]=e*c-u*i,t[3]=o*c-r*i,t}function Ot(t,n,a){a*=.5;var r=n[0],u=n[1],e=n[2],o=n[3],i=Math.sin(a),c=Math.cos(a);return t[0]=r*c-e*i,t[1]=u*c+o*i,t[2]=e*c+r*i,t[3]=o*c-u*i,t}function Tt(t,n,a){a*=.5;var r=n[0],u=n[1],e=n[2],o=n[3],i=Math.sin(a),c=Math.cos(a);return t[0]=r*c+u*i,t[1]=u*c-r*i,t[2]=e*c+o*i,t[3]=o*c-e*i,t}function Dt(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=Math.sqrt(a*a+r*r+u*u),i=Math.exp(e),c=o>0?i*Math.sin(o)/o:0;return t[0]=a*c,t[1]=r*c,t[2]=u*c,t[3]=i*Math.cos(o),t}function Ft(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=Math.sqrt(a*a+r*r+u*u),i=o>0?Math.atan2(o,e)/o:0;return t[0]=a*i,t[1]=r*i,t[2]=u*i,t[3]=.5*Math.log(a*a+r*r+u*u+e*e),t}function Lt(t,a,r,u){var e,o,i,c,h,s=a[0],M=a[1],f=a[2],l=a[3],v=r[0],b=r[1],m=r[2],d=r[3];return(o=s*v+M*b+f*m+l*d)<0&&(o=-o,v=-v,b=-b,m=-m,d=-d),1-o>n?(e=Math.acos(o),i=Math.sin(e),c=Math.sin((1-u)*e)/i,h=Math.sin(u*e)/i):(c=1-u,h=u),t[0]=c*s+h*v,t[1]=c*M+h*b,t[2]=c*f+h*m,t[3]=c*l+h*d,t}function Vt(t,n){var a,r=n[0]+n[4]+n[8];if(r>0)a=Math.sqrt(r+1),t[3]=.5*a,a=.5/a,t[0]=(n[5]-n[7])*a,t[1]=(n[6]-n[2])*a,t[2]=(n[1]-n[3])*a;else{var u=0;n[4]>n[0]&&(u=1),n[8]>n[3*u+u]&&(u=2);var e=(u+1)%3,o=(u+2)%3;a=Math.sqrt(n[3*u+u]-n[3*e+e]-n[3*o+o]+1),t[u]=.5*a,a=.5/a,t[3]=(n[3*e+o]-n[3*o+e])*a,t[e]=(n[3*e+u]+n[3*u+e])*a,t[o]=(n[3*o+u]+n[3*u+o])*a}return t}var Qt,Yt,Xt,Zt,_t,Bt,Nt=nt,kt=at,Ut=rt,Wt=ut,Ct=et,Gt=St,Ht=ht,Jt=bt,Kt=mt,$t=ft,tn=$t,nn=lt,an=nn,rn=vt,un=dt,en=xt,on=(Qt=O(),Yt=D(1,0,0),Xt=D(0,1,0),function(t,n,a){var r=_(n,a);return r<-.999999?(B(Qt,Yt,n),H(Qt)<1e-6&&B(Qt,Xt,n),Z(Qt,Qt),It(t,Qt,Math.PI),t):r>.999999?(t[0]=0,t[1]=0,t[2]=0,t[3]=1,t):(B(Qt,n,a),t[0]=Qt[0],t[1]=Qt[1],t[2]=Qt[2],t[3]=1+r,rn(t,t))}),cn=(Zt=jt(),_t=jt(),function(t,n,a,r,u,e){return Lt(Zt,n,u,e),Lt(_t,a,r,e),Lt(t,Zt,_t,2*e*(1-e)),t}),hn=(Bt=m(),function(t,n,a,r){return Bt[0]=a[0],Bt[3]=a[1],Bt[6]=a[2],Bt[1]=r[0],Bt[4]=r[1],Bt[7]=r[2],Bt[2]=-n[0],Bt[5]=-n[1],Bt[8]=-n[2],rn(t,Vt(t,Bt))}),sn=Object.freeze({create:jt,identity:function(t){return t[0]=0,t[1]=0,t[2]=0,t[3]=1,t},setAxisAngle:It,getAxisAngle:function(t,a){var r=2*Math.acos(a[3]),u=Math.sin(r/2);return u>n?(t[0]=a[0]/u,t[1]=a[1]/u,t[2]=a[2]/u):(t[0]=1,t[1]=0,t[2]=0),r},getAngle:function(t,n){var a=Jt(t,n);return Math.acos(2*a*a-1)},multiply:St,rotateX:Et,rotateY:Ot,rotateZ:Tt,calculateW:function(t,n){var a=n[0],r=n[1],u=n[2];return t[0]=a,t[1]=r,t[2]=u,t[3]=Math.sqrt(Math.abs(1-a*a-r*r-u*u)),t},exp:Dt,ln:Ft,pow:function(t,n,a){return Ft(t,n),Ht(t,t,a),Dt(t,t),t},slerp:Lt,random:function(t){var n=r(),a=r(),u=r(),e=Math.sqrt(1-n),o=Math.sqrt(n);return t[0]=e*Math.sin(2*Math.PI*a),t[1]=e*Math.cos(2*Math.PI*a),t[2]=o*Math.sin(2*Math.PI*u),t[3]=o*Math.cos(2*Math.PI*u),t},invert:function(t,n){var a=n[0],r=n[1],u=n[2],e=n[3],o=a*a+r*r+u*u+e*e,i=o?1/o:0;return t[0]=-a*i,t[1]=-r*i,t[2]=-u*i,t[3]=e*i,t},conjugate:function(t,n){return t[0]=-n[0],t[1]=-n[1],t[2]=-n[2],t[3]=n[3],t},fromMat3:Vt,fromEuler:function(t,n,a,r){var u=.5*Math.PI/180;n*=u,a*=u,r*=u;var e=Math.sin(n),o=Math.cos(n),i=Math.sin(a),c=Math.cos(a),h=Math.sin(r),s=Math.cos(r);return t[0]=e*c*s-o*i*h,t[1]=o*i*s+e*c*h,t[2]=o*c*h-e*i*s,t[3]=o*c*s+e*i*h,t},str:function(t){return"quat("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+")"},clone:Nt,fromValues:kt,copy:Ut,set:Wt,add:Ct,mul:Gt,scale:Ht,dot:Jt,lerp:Kt,length:$t,len:tn,squaredLength:nn,sqrLen:an,normalize:rn,exactEquals:un,equals:en,rotationTo:on,sqlerp:cn,setAxes:hn});function Mn(t,n,a){var r=.5*a[0],u=.5*a[1],e=.5*a[2],o=n[0],i=n[1],c=n[2],h=n[3];return t[0]=o,t[1]=i,t[2]=c,t[3]=h,t[4]=r*h+u*c-e*i,t[5]=u*h+e*o-r*c,t[6]=e*h+r*i-u*o,t[7]=-r*o-u*i-e*c,t}function fn(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t}var ln=Ut;var vn=Ut;function bn(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=a[4],c=a[5],h=a[6],s=a[7],M=n[4],f=n[5],l=n[6],v=n[7],b=a[0],m=a[1],d=a[2],x=a[3];return t[0]=r*x+o*b+u*d-e*m,t[1]=u*x+o*m+e*b-r*d,t[2]=e*x+o*d+r*m-u*b,t[3]=o*x-r*b-u*m-e*d,t[4]=r*s+o*i+u*h-e*c+M*x+v*b+f*d-l*m,t[5]=u*s+o*c+e*i-r*h+f*x+v*m+l*b-M*d,t[6]=e*s+o*h+r*c-u*i+l*x+v*d+M*m-f*b,t[7]=o*s-r*i-u*c-e*h+v*x-M*b-f*m-l*d,t}var mn=bn;var dn=Jt;var xn=$t,pn=xn,yn=nn,qn=yn;var gn=Object.freeze({create:function(){var t=new a(8);return a!=Float32Array&&(t[0]=0,t[1]=0,t[2]=0,t[4]=0,t[5]=0,t[6]=0,t[7]=0),t[3]=1,t},clone:function(t){var n=new a(8);return n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=t[3],n[4]=t[4],n[5]=t[5],n[6]=t[6],n[7]=t[7],n},fromValues:function(t,n,r,u,e,o,i,c){var h=new a(8);return h[0]=t,h[1]=n,h[2]=r,h[3]=u,h[4]=e,h[5]=o,h[6]=i,h[7]=c,h},fromRotationTranslationValues:function(t,n,r,u,e,o,i){var c=new a(8);c[0]=t,c[1]=n,c[2]=r,c[3]=u;var h=.5*e,s=.5*o,M=.5*i;return c[4]=h*u+s*r-M*n,c[5]=s*u+M*t-h*r,c[6]=M*u+h*n-s*t,c[7]=-h*t-s*n-M*r,c},fromRotationTranslation:Mn,fromTranslation:function(t,n){return t[0]=0,t[1]=0,t[2]=0,t[3]=1,t[4]=.5*n[0],t[5]=.5*n[1],t[6]=.5*n[2],t[7]=0,t},fromRotation:function(t,n){return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=0,t[5]=0,t[6]=0,t[7]=0,t},fromMat4:function(t,n){var r=jt();P(r,n);var u=new a(3);return R(u,n),Mn(t,r,u),t},copy:fn,identity:function(t){return t[0]=0,t[1]=0,t[2]=0,t[3]=1,t[4]=0,t[5]=0,t[6]=0,t[7]=0,t},set:function(t,n,a,r,u,e,o,i,c){return t[0]=n,t[1]=a,t[2]=r,t[3]=u,t[4]=e,t[5]=o,t[6]=i,t[7]=c,t},getReal:ln,getDual:function(t,n){return t[0]=n[4],t[1]=n[5],t[2]=n[6],t[3]=n[7],t},setReal:vn,setDual:function(t,n){return t[4]=n[0],t[5]=n[1],t[6]=n[2],t[7]=n[3],t},getTranslation:function(t,n){var a=n[4],r=n[5],u=n[6],e=n[7],o=-n[0],i=-n[1],c=-n[2],h=n[3];return t[0]=2*(a*h+e*o+r*c-u*i),t[1]=2*(r*h+e*i+u*o-a*c),t[2]=2*(u*h+e*c+a*i-r*o),t},translate:function(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=.5*a[0],c=.5*a[1],h=.5*a[2],s=n[4],M=n[5],f=n[6],l=n[7];return t[0]=r,t[1]=u,t[2]=e,t[3]=o,t[4]=o*i+u*h-e*c+s,t[5]=o*c+e*i-r*h+M,t[6]=o*h+r*c-u*i+f,t[7]=-r*i-u*c-e*h+l,t},rotateX:function(t,n,a){var r=-n[0],u=-n[1],e=-n[2],o=n[3],i=n[4],c=n[5],h=n[6],s=n[7],M=i*o+s*r+c*e-h*u,f=c*o+s*u+h*r-i*e,l=h*o+s*e+i*u-c*r,v=s*o-i*r-c*u-h*e;return Et(t,n,a),r=t[0],u=t[1],e=t[2],o=t[3],t[4]=M*o+v*r+f*e-l*u,t[5]=f*o+v*u+l*r-M*e,t[6]=l*o+v*e+M*u-f*r,t[7]=v*o-M*r-f*u-l*e,t},rotateY:function(t,n,a){var r=-n[0],u=-n[1],e=-n[2],o=n[3],i=n[4],c=n[5],h=n[6],s=n[7],M=i*o+s*r+c*e-h*u,f=c*o+s*u+h*r-i*e,l=h*o+s*e+i*u-c*r,v=s*o-i*r-c*u-h*e;return Ot(t,n,a),r=t[0],u=t[1],e=t[2],o=t[3],t[4]=M*o+v*r+f*e-l*u,t[5]=f*o+v*u+l*r-M*e,t[6]=l*o+v*e+M*u-f*r,t[7]=v*o-M*r-f*u-l*e,t},rotateZ:function(t,n,a){var r=-n[0],u=-n[1],e=-n[2],o=n[3],i=n[4],c=n[5],h=n[6],s=n[7],M=i*o+s*r+c*e-h*u,f=c*o+s*u+h*r-i*e,l=h*o+s*e+i*u-c*r,v=s*o-i*r-c*u-h*e;return Tt(t,n,a),r=t[0],u=t[1],e=t[2],o=t[3],t[4]=M*o+v*r+f*e-l*u,t[5]=f*o+v*u+l*r-M*e,t[6]=l*o+v*e+M*u-f*r,t[7]=v*o-M*r-f*u-l*e,t},rotateByQuatAppend:function(t,n,a){var r=a[0],u=a[1],e=a[2],o=a[3],i=n[0],c=n[1],h=n[2],s=n[3];return t[0]=i*o+s*r+c*e-h*u,t[1]=c*o+s*u+h*r-i*e,t[2]=h*o+s*e+i*u-c*r,t[3]=s*o-i*r-c*u-h*e,i=n[4],c=n[5],h=n[6],s=n[7],t[4]=i*o+s*r+c*e-h*u,t[5]=c*o+s*u+h*r-i*e,t[6]=h*o+s*e+i*u-c*r,t[7]=s*o-i*r-c*u-h*e,t},rotateByQuatPrepend:function(t,n,a){var r=n[0],u=n[1],e=n[2],o=n[3],i=a[0],c=a[1],h=a[2],s=a[3];return t[0]=r*s+o*i+u*h-e*c,t[1]=u*s+o*c+e*i-r*h,t[2]=e*s+o*h+r*c-u*i,t[3]=o*s-r*i-u*c-e*h,i=a[4],c=a[5],h=a[6],s=a[7],t[4]=r*s+o*i+u*h-e*c,t[5]=u*s+o*c+e*i-r*h,t[6]=e*s+o*h+r*c-u*i,t[7]=o*s-r*i-u*c-e*h,t},rotateAroundAxis:function(t,a,r,u){if(Math.abs(u)<n)return fn(t,a);var e=Math.hypot(r[0],r[1],r[2]);u*=.5;var o=Math.sin(u),i=o*r[0]/e,c=o*r[1]/e,h=o*r[2]/e,s=Math.cos(u),M=a[0],f=a[1],l=a[2],v=a[3];t[0]=M*s+v*i+f*h-l*c,t[1]=f*s+v*c+l*i-M*h,t[2]=l*s+v*h+M*c-f*i,t[3]=v*s-M*i-f*c-l*h;var b=a[4],m=a[5],d=a[6],x=a[7];return t[4]=b*s+x*i+m*h-d*c,t[5]=m*s+x*c+d*i-b*h,t[6]=d*s+x*h+b*c-m*i,t[7]=x*s-b*i-m*c-d*h,t},add:function(t,n,a){return t[0]=n[0]+a[0],t[1]=n[1]+a[1],t[2]=n[2]+a[2],t[3]=n[3]+a[3],t[4]=n[4]+a[4],t[5]=n[5]+a[5],t[6]=n[6]+a[6],t[7]=n[7]+a[7],t},multiply:bn,mul:mn,scale:function(t,n,a){return t[0]=n[0]*a,t[1]=n[1]*a,t[2]=n[2]*a,t[3]=n[3]*a,t[4]=n[4]*a,t[5]=n[5]*a,t[6]=n[6]*a,t[7]=n[7]*a,t},dot:dn,lerp:function(t,n,a,r){var u=1-r;return dn(n,a)<0&&(r=-r),t[0]=n[0]*u+a[0]*r,t[1]=n[1]*u+a[1]*r,t[2]=n[2]*u+a[2]*r,t[3]=n[3]*u+a[3]*r,t[4]=n[4]*u+a[4]*r,t[5]=n[5]*u+a[5]*r,t[6]=n[6]*u+a[6]*r,t[7]=n[7]*u+a[7]*r,t},invert:function(t,n){var a=yn(n);return t[0]=-n[0]/a,t[1]=-n[1]/a,t[2]=-n[2]/a,t[3]=n[3]/a,t[4]=-n[4]/a,t[5]=-n[5]/a,t[6]=-n[6]/a,t[7]=n[7]/a,t},conjugate:function(t,n){return t[0]=-n[0],t[1]=-n[1],t[2]=-n[2],t[3]=n[3],t[4]=-n[4],t[5]=-n[5],t[6]=-n[6],t[7]=n[7],t},length:xn,len:pn,squaredLength:yn,sqrLen:qn,normalize:function(t,n){var a=yn(n);if(a>0){a=Math.sqrt(a);var r=n[0]/a,u=n[1]/a,e=n[2]/a,o=n[3]/a,i=n[4],c=n[5],h=n[6],s=n[7],M=r*i+u*c+e*h+o*s;t[0]=r,t[1]=u,t[2]=e,t[3]=o,t[4]=(i-r*M)/a,t[5]=(c-u*M)/a,t[6]=(h-e*M)/a,t[7]=(s-o*M)/a}return t},str:function(t){return"quat2("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+", "+t[4]+", "+t[5]+", "+t[6]+", "+t[7]+")"},exactEquals:function(t,n){return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]&&t[3]===n[3]&&t[4]===n[4]&&t[5]===n[5]&&t[6]===n[6]&&t[7]===n[7]},equals:function(t,a){var r=t[0],u=t[1],e=t[2],o=t[3],i=t[4],c=t[5],h=t[6],s=t[7],M=a[0],f=a[1],l=a[2],v=a[3],b=a[4],m=a[5],d=a[6],x=a[7];return Math.abs(r-M)<=n*Math.max(1,Math.abs(r),Math.abs(M))&&Math.abs(u-f)<=n*Math.max(1,Math.abs(u),Math.abs(f))&&Math.abs(e-l)<=n*Math.max(1,Math.abs(e),Math.abs(l))&&Math.abs(o-v)<=n*Math.max(1,Math.abs(o),Math.abs(v))&&Math.abs(i-b)<=n*Math.max(1,Math.abs(i),Math.abs(b))&&Math.abs(c-m)<=n*Math.max(1,Math.abs(c),Math.abs(m))&&Math.abs(h-d)<=n*Math.max(1,Math.abs(h),Math.abs(d))&&Math.abs(s-x)<=n*Math.max(1,Math.abs(s),Math.abs(x))}});function An(){var t=new a(2);return a!=Float32Array&&(t[0]=0,t[1]=0),t}function wn(t,n,a){return t[0]=n[0]-a[0],t[1]=n[1]-a[1],t}function Rn(t,n,a){return t[0]=n[0]*a[0],t[1]=n[1]*a[1],t}function zn(t,n,a){return t[0]=n[0]/a[0],t[1]=n[1]/a[1],t}function Pn(t,n){var a=n[0]-t[0],r=n[1]-t[1];return Math.hypot(a,r)}function jn(t,n){var a=n[0]-t[0],r=n[1]-t[1];return a*a+r*r}function In(t){var n=t[0],a=t[1];return Math.hypot(n,a)}function Sn(t){var n=t[0],a=t[1];return n*n+a*a}var En=In,On=wn,Tn=Rn,Dn=zn,Fn=Pn,Ln=jn,Vn=Sn,Qn=function(){var t=An();return function(n,a,r,u,e,o){var i,c;for(a||(a=2),r||(r=0),c=u?Math.min(u*a+r,n.length):n.length,i=r;i<c;i+=a)t[0]=n[i],t[1]=n[i+1],e(t,t,o),n[i]=t[0],n[i+1]=t[1];return n}}(),Yn=Object.freeze({create:An,clone:function(t){var n=new a(2);return n[0]=t[0],n[1]=t[1],n},fromValues:function(t,n){var r=new a(2);return r[0]=t,r[1]=n,r},copy:function(t,n){return t[0]=n[0],t[1]=n[1],t},set:function(t,n,a){return t[0]=n,t[1]=a,t},add:function(t,n,a){return t[0]=n[0]+a[0],t[1]=n[1]+a[1],t},subtract:wn,multiply:Rn,divide:zn,ceil:function(t,n){return t[0]=Math.ceil(n[0]),t[1]=Math.ceil(n[1]),t},floor:function(t,n){return t[0]=Math.floor(n[0]),t[1]=Math.floor(n[1]),t},min:function(t,n,a){return t[0]=Math.min(n[0],a[0]),t[1]=Math.min(n[1],a[1]),t},max:function(t,n,a){return t[0]=Math.max(n[0],a[0]),t[1]=Math.max(n[1],a[1]),t},round:function(t,n){return t[0]=Math.round(n[0]),t[1]=Math.round(n[1]),t},scale:function(t,n,a){return t[0]=n[0]*a,t[1]=n[1]*a,t},scaleAndAdd:function(t,n,a,r){return t[0]=n[0]+a[0]*r,t[1]=n[1]+a[1]*r,t},distance:Pn,squaredDistance:jn,length:In,squaredLength:Sn,negate:function(t,n){return t[0]=-n[0],t[1]=-n[1],t},inverse:function(t,n){return t[0]=1/n[0],t[1]=1/n[1],t},normalize:function(t,n){var a=n[0],r=n[1],u=a*a+r*r;return u>0&&(u=1/Math.sqrt(u)),t[0]=n[0]*u,t[1]=n[1]*u,t},dot:function(t,n){return t[0]*n[0]+t[1]*n[1]},cross:function(t,n,a){var r=n[0]*a[1]-n[1]*a[0];return t[0]=t[1]=0,t[2]=r,t},lerp:function(t,n,a,r){var u=n[0],e=n[1];return t[0]=u+r*(a[0]-u),t[1]=e+r*(a[1]-e),t},random:function(t,n){n=n||1;var a=2*r()*Math.PI;return t[0]=Math.cos(a)*n,t[1]=Math.sin(a)*n,t},transformMat2:function(t,n,a){var r=n[0],u=n[1];return t[0]=a[0]*r+a[2]*u,t[1]=a[1]*r+a[3]*u,t},transformMat2d:function(t,n,a){var r=n[0],u=n[1];return t[0]=a[0]*r+a[2]*u+a[4],t[1]=a[1]*r+a[3]*u+a[5],t},transformMat3:function(t,n,a){var r=n[0],u=n[1];return t[0]=a[0]*r+a[3]*u+a[6],t[1]=a[1]*r+a[4]*u+a[7],t},transformMat4:function(t,n,a){var r=n[0],u=n[1];return t[0]=a[0]*r+a[4]*u+a[12],t[1]=a[1]*r+a[5]*u+a[13],t},rotate:function(t,n,a,r){var u=n[0]-a[0],e=n[1]-a[1],o=Math.sin(r),i=Math.cos(r);return t[0]=u*i-e*o+a[0],t[1]=u*o+e*i+a[1],t},angle:function(t,n){var a=t[0],r=t[1],u=n[0],e=n[1],o=a*a+r*r;o>0&&(o=1/Math.sqrt(o));var i=u*u+e*e;i>0&&(i=1/Math.sqrt(i));var c=(a*u+r*e)*o*i;return c>1?0:c<-1?Math.PI:Math.acos(c)},zero:function(t){return t[0]=0,t[1]=0,t},str:function(t){return"vec2("+t[0]+", "+t[1]+")"},exactEquals:function(t,n){return t[0]===n[0]&&t[1]===n[1]},equals:function(t,a){var r=t[0],u=t[1],e=a[0],o=a[1];return Math.abs(r-e)<=n*Math.max(1,Math.abs(r),Math.abs(e))&&Math.abs(u-o)<=n*Math.max(1,Math.abs(u),Math.abs(o))},len:En,sub:On,mul:Tn,div:Dn,dist:Fn,sqrDist:Ln,sqrLen:Vn,forEach:Qn});t.glMatrix=e,t.mat2=s,t.mat2d=b,t.mat3=q,t.mat4=E,t.quat=sn,t.quat2=gn,t.vec2=Yn,t.vec3=$,t.vec4=Pt,Object.defineProperty(t,"__esModule",{value:!0})});

// ["glMatrix", "mat2", "mat2d", "mat3", "mat4", "quat", "quat2", "vec2", "vec3", "vec4"]
window.glMatrix = glMatrix;
window.mat2 = glMatrix.mat2;
window.mat2d = glMatrix.mat2d;
window.mat3 = glMatrix.mat3;
window.mat4 = glMatrix.mat4;
window.quat = glMatrix.quat;
window.quat2 = glMatrix.quat2;
window.vec2 = glMatrix.vec2;
window.vec3 = glMatrix.vec3;
window.vec4 = glMatrix.vec4;

var CABLES = CABLES || {}; CABLES.build = {"timestamp":1642088436991,"created":"2022-01-13T15:40:36.991Z","git":{"branch":"master","commit":"c537af9dc816369192a4c7405dc4d949add1219c","date":null,"message":null}};
if(!CABLES.exportedPatches)CABLES.exportedPatches={};CABLES.exportedPatches["glXh2X"]={settings:{opExample:[],licence:"none",isPublic:false,secret:"lTpmmfkExgYFWSCf"},ops:[{objName:"Ops.Gl.MainLoop",id:"0",uiAttribs:{subPatch:0},portsIn:[{name:"FPS Limit",value:60},{name:"Reduce FPS not focussed",value:true},{name:"Reduce FPS loading",value:false},{name:"Clear",value:true},{name:"ClearAlpha",value:true},{name:"Fullscreen Button",value:false},{name:"Active",value:true},{name:"Hires Displays",value:false}],portsOut:[{name:"trigger",links:[{portIn:"exe",portOut:"trigger",objIn:"1",objOut:"0"}]},{name:"width",value:665},{name:"height",value:473}]},{objName:"Ops.Sequence",id:"1",uiAttribs:{subPatch:0},portsIn:[{name:"exe"},{name:"Clean up connections",value:0},{name:"exe 0",value:0},{name:"exe 1",value:0},{name:"exe 2",value:0},{name:"exe 3",value:0},{name:"exe 4",value:0},{name:"exe 5",value:0},{name:"exe 6",value:0},{name:"exe 7",value:0},{name:"exe 8",value:0},{name:"exe 9",value:0},{name:"exe 10",value:0},{name:"exe 11",value:0},{name:"exe 12",value:0},{name:"exe 13",value:0},{name:"exe 14",value:0}],portsOut:[{name:"trigger 0",links:[{portIn:"render",portOut:"trigger 0",objIn:"34",objOut:"1"}]},{name:"trigger 1",links:[{portIn:"render",portOut:"trigger 1",objIn:"37",objOut:"1"}]},{name:"trigger 2",links:[{portIn:"render",portOut:"trigger 2",objIn:"5",objOut:"1"}]},{name:"trigger 3",links:[{portIn:"render",portOut:"trigger 3",objIn:"35",objOut:"1"}]},{name:"trigger 4",links:[{portIn:"render",portOut:"trigger 4",objIn:"36",objOut:"1"}]},{name:"trigger 5",links:[{portIn:"render",portOut:"trigger 5",objIn:"11",objOut:"1"}]},{name:"trigger 6",links:[{portIn:"render",portOut:"trigger 6",objIn:"33",objOut:"1"}]},{name:"trigger 7",value:0},{name:"trigger 8",value:0},{name:"trigger 9",links:[{portIn:"render",portOut:"trigger 9",objIn:"44",objOut:"1"}]},{name:"trigger 10",links:[{portIn:"render",portOut:"trigger 10",objIn:"38",objOut:"1"}]},{name:"trigger 11",value:0},{name:"trigger 12",links:[{portIn:"render",portOut:"trigger 12",objIn:"39",objOut:"1"}]},{name:"trigger 13",value:0},{name:"trigger 14",links:[{portIn:"render",portOut:"trigger 14",objIn:"42",objOut:"1"}]},{name:"trigger 15",links:[{portIn:"render",portOut:"trigger 15",objIn:"40",objOut:"1"}]}]},{objName:"Ops.Gl.Shader.MatCapMaterialNew_v2",id:"2",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"MatCap"},{name:"Diffuse",value:0},{name:"Normal",value:0},{name:"Specular",value:0},{name:"Specular MatCap",value:0},{name:"AO Texture",value:0},{name:"Opacity Texture",value:0},{name:"r",value:1},{name:"g",value:1},{name:"b",value:1},{name:"Opacity",value:1},{name:"AO Intensity",value:1},{name:"Repeat X",value:1},{name:"Repeat Y",value:1},{name:"Offset X",value:0},{name:"Offset Y",value:0},{name:"calc normal tangents",value:true},{name:"projectCoords index",value:0},{name:"projectCoords",value:"no"},{name:"Screen Space Normals",value:false},{name:"Alpha Mask Source index",value:0},{name:"Alpha Mask Source",value:"Luminance"},{name:"Opacity TexCoords Transform",value:false},{name:"Discard Transparent Pixels",value:false}],portsOut:[{name:"trigger",links:[{portIn:"render",portOut:"trigger",objIn:"3",objOut:"2"}]},{name:"Shader"}]},{objName:"Ops.Gl.ShaderEffects.PerlinAreaDeform_v3",id:"3",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"Scale"},{name:"Size"},{name:"Strength"},{name:"Calc Normals",value:true},{name:"Falloff",value:0},{name:"Output index",value:1},{name:"Output",value:"Add XYZ"},{name:"x",value:0},{name:"y",value:0},{name:"z",value:0},{name:"Scroll X"},{name:"Scroll Y",value:0},{name:"Scroll Z",value:0},{name:"WorldSpace",value:false}],portsOut:[{name:"trigger",links:[{portIn:"render",portOut:"trigger",objIn:"55",objOut:"3"}]}]},{objName:"Ops.Anim.Timer_v2",id:"4",uiAttribs:{subPatch:0},portsIn:[{name:"Speed",value:.5},{name:"Play",value:true},{name:"Reset",value:0},{name:"Sync to timeline",value:false}],portsOut:[{name:"Time",links:[{portIn:"Scroll X",portOut:"Time",objIn:"3",objOut:"4"},{portIn:"number1",portOut:"Time",objIn:"10",objOut:"4"},{portIn:"Scroll X",portOut:"Time",objIn:"13",objOut:"4"}]}]},{objName:"Ops.Gl.Render2Texture",id:"5",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"use viewport size",value:true},{name:"texture width",value:665},{name:"texture height",value:473},{name:"Auto Aspect",value:false},{name:"filter index",value:1},{name:"filter",value:"mipmap"},{name:"Wrap index",value:1},{name:"Wrap",value:"Repeat"},{name:"MSAA index",value:0},{name:"MSAA",value:"8x"},{name:"HDR",value:false},{name:"Depth",value:true},{name:"Clear",value:true}],portsOut:[{name:"trigger",links:[{portIn:"render",portOut:"trigger",objIn:"2",objOut:"5"}]},{name:"texture",links:[{portIn:"image",portOut:"texture",objIn:"8",objOut:"5"},{portIn:"image",portOut:"texture",objIn:"77",objOut:"5"}]},{name:"textureDepth"}]},{objName:"Ops.Gl.TextureEffects.DrawImage_v2",id:"6",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"blendMode index",value:0},{name:"blendMode",value:"normal"},{name:"amount",value:1},{name:"image"},{name:"removeAlphaSrc",value:false},{name:"imageAlpha"},{name:"alphaSrc index",value:0},{name:"alphaSrc",value:"luminance"},{name:"invert alpha channel",value:false},{name:"Aspect Ratio",value:false},{name:"Stretch Axis index",value:0},{name:"Stretch Axis",value:"X"},{name:"Position",value:0},{name:"Crop",value:false},{name:"flip x",value:false},{name:"flip y",value:false},{name:"Transform",value:false},{name:"Scale X",value:1},{name:"Scale Y",value:.595},{name:"Position X",value:0},{name:"Position Y",value:0},{name:"Rotation",value:0},{name:"Clip Repeat",value:false}],portsOut:[{name:"trigger",links:[{portIn:"render",portOut:"trigger",objIn:"52",objOut:"6"}]}]},{objName:"Ops.Gl.TextureEffects.PixelDisplacement_v3",id:"7",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"displaceTex"},{name:"Blend Mode index",value:0},{name:"Blend Mode",value:"normal"},{name:"Amount",value:1},{name:"amount X",value:"0.013"},{name:"amount Y",value:0},{name:"Wrap index",value:0},{name:"Wrap",value:"Repeat"},{name:"Input index",value:0},{name:"Input",value:"Luminance"},{name:"Zero Displace index",value:0},{name:"Zero Displace",value:"Black"}],portsOut:[{name:"trigger",links:[{portIn:"render",portOut:"trigger",objIn:"88",objOut:"7"}]}]},{objName:"Ops.Gl.TextureEffects.DrawImage_v2",id:"8",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"blendMode index",value:0},{name:"blendMode",value:"normal"},{name:"amount",value:1},{name:"image"},{name:"removeAlphaSrc",value:false},{name:"imageAlpha",value:0},{name:"alphaSrc index",value:0},{name:"alphaSrc",value:"alpha channel"},{name:"invert alpha channel",value:false},{name:"Aspect Ratio",value:false},{name:"Stretch Axis index",value:0},{name:"Stretch Axis",value:"X"},{name:"Position",value:0},{name:"Crop",value:false},{name:"flip x",value:false},{name:"flip y",value:false},{name:"Transform",value:false},{name:"Scale X",value:1},{name:"Scale Y",value:1},{name:"Position X",value:0},{name:"Position Y",value:0},{name:"Rotation",value:0},{name:"Clip Repeat",value:false}],portsOut:[{name:"trigger",links:[{portIn:"render",portOut:"trigger",objIn:"41",objOut:"8"}]}]},{objName:"Ops.Gl.TextureEffects.Levels",id:"9",uiAttribs:{subPatch:0},portsIn:[{name:"Render"},{name:"In Min",value:0},{name:"Midpoint",value:.25},{name:"In Max",value:.548},{name:"Out Min",value:0},{name:"Out Max",value:1}],portsOut:[{name:"Next",value:0}]},{objName:"Ops.Math.Multiply",id:"10",uiAttribs:{subPatch:0},portsIn:[{name:"number1"},{name:"number2",value:.2}],portsOut:[{name:"result",links:[{portIn:"offset X",portOut:"result",objIn:"32",objOut:"10"}]}]},{objName:"Ops.Gl.Render2Texture",id:"11",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"use viewport size",value:true},{name:"texture width",value:665},{name:"texture height",value:473},{name:"Auto Aspect",value:false},{name:"filter index",value:1},{name:"filter",value:"mipmap"},{name:"Wrap index",value:1},{name:"Wrap",value:"Repeat"},{name:"MSAA index",value:0},{name:"MSAA",value:"8x"},{name:"HDR",value:false},{name:"Depth",value:true},{name:"Clear",value:true}],portsOut:[{name:"trigger",links:[{portIn:"render",portOut:"trigger",objIn:"12",objOut:"11"}]},{name:"texture",links:[{portIn:"imageAlpha",portOut:"texture",objIn:"6",objOut:"11"},{portIn:"image",portOut:"texture",objIn:"78",objOut:"11"}]},{name:"textureDepth"}]},{objName:"Ops.Gl.Shader.MatCapMaterialNew_v2",id:"12",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"MatCap"},{name:"Diffuse",value:0},{name:"Normal",value:0},{name:"Specular",value:0},{name:"Specular MatCap",value:0},{name:"AO Texture",value:0},{name:"Opacity Texture",value:0},{name:"r",value:1},{name:"g",value:1},{name:"b",value:1},{name:"Opacity",value:1},{name:"AO Intensity",value:1},{name:"Repeat X",value:0},{name:"Repeat Y",value:1},{name:"Offset X",value:0},{name:"Offset Y",value:0},{name:"calc normal tangents",value:true},{name:"projectCoords index",value:0},{name:"projectCoords",value:"no"},{name:"Screen Space Normals",value:false},{name:"Alpha Mask Source index",value:0},{name:"Alpha Mask Source",value:"Luminance"},{name:"Opacity TexCoords Transform",value:false},{name:"Discard Transparent Pixels",value:false}],portsOut:[{name:"trigger",links:[{portIn:"render",portOut:"trigger",objIn:"13",objOut:"12"}]},{name:"Shader"}]},{objName:"Ops.Gl.ShaderEffects.PerlinAreaDeform_v3",id:"13",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"Scale"},{name:"Size"},{name:"Strength"},{name:"Calc Normals",value:true},{name:"Falloff",value:0},{name:"Output index",value:1},{name:"Output",value:"Add XYZ"},{name:"x",value:0},{name:"y",value:0},{name:"z",value:0},{name:"Scroll X"},{name:"Scroll Y",value:0},{name:"Scroll Z",value:0},{name:"WorldSpace",value:false}],portsOut:[{name:"trigger",links:[{portIn:"render",portOut:"trigger",objIn:"55",objOut:"13"}]}]},{objName:"Ops.Gl.TextureEffects.Gradient",id:"14",uiAttribs:{subPatch:0},portsIn:[{name:"Render"},{name:"Blend Mode index",value:0},{name:"Blend Mode",value:"normal"},{name:"Amount",value:1},{name:"Width",value:.45},{name:"Type index",value:0},{name:"Type",value:"Radial"},{name:"Pos",value:.525},{name:"Smoothstep",value:true},{name:"r",value:1},{name:"g",value:1},{name:"b",value:1},{name:"r2",value:0},{name:"g2",value:0},{name:"b2",value:0},{name:"r3",value:1},{name:"g3",value:1},{name:"b3",value:1},{name:"Randomize",value:0}],portsOut:[{name:"Next",links:[{portIn:"render",portOut:"Next",objIn:"32",objOut:"14"}]}]},{objName:"Ops.Gl.TextureEffects.Gradient",id:"15",uiAttribs:{subPatch:0},portsIn:[{name:"Render"},{name:"Blend Mode index",value:0},{name:"Blend Mode",value:"normal"},{name:"Amount",value:1},{name:"Width",value:.75},{name:"Type index",value:0},{name:"Type",value:"Radial"},{name:"Pos",value:0},{name:"Smoothstep",value:true},{name:"r",value:1},{name:"g",value:1},{name:"b",value:1},{name:"r2",value:1},{name:"g2",value:1},{name:"b2",value:1},{name:"r3",value:0},{name:"g3",value:0},{name:"b3",value:0},{name:"Randomize",value:0}],portsOut:[{name:"Next",value:0}]},{objName:"Ops.Gl.Matrix.Transform",id:"16",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"posX",value:0},{name:"posY"},{name:"posZ",value:-.02},{name:"scale",value:3},{name:"rotX"},{name:"rotY"},{name:"rotZ",value:0}],portsOut:[{name:"trigger",links:[{portIn:"render",portOut:"trigger",objIn:"31",objOut:"16"},{portIn:"render",portOut:"trigger",objIn:"48",objOut:"16"},{portIn:"render",portOut:"trigger",objIn:"87",objOut:"16"}]}]},{objName:"Ops.Value.Number",id:"17",uiAttribs:{subPatch:0},portsIn:[{name:"value",value:1.25}],portsOut:[{name:"result",links:[{portIn:"Scale",portOut:"result",objIn:"3",objOut:"17"},{portIn:"Scale",portOut:"result",objIn:"13",objOut:"17"}]}]},{objName:"Ops.Value.Number",id:"18",uiAttribs:{subPatch:0},portsIn:[{name:"value",value:1.5}],portsOut:[{name:"result",links:[{portIn:"Size",portOut:"result",objIn:"3",objOut:"18"},{portIn:"Size",portOut:"result",objIn:"13",objOut:"18"}]}]},{objName:"Ops.Value.Number",id:"19",uiAttribs:{subPatch:0},portsIn:[{name:"value",value:.4}],portsOut:[{name:"result",links:[{portIn:"Strength",portOut:"result",objIn:"3",objOut:"19"},{portIn:"Strength",portOut:"result",objIn:"13",objOut:"19"}]}]},{objName:"Ops.Gl.TextureEffects.Levels",id:"20",uiAttribs:{subPatch:0},portsIn:[{name:"Render"},{name:"In Min",value:0},{name:"Midpoint",value:0},{name:"In Max",value:1},{name:"Out Min",value:0},{name:"Out Max",value:1}],portsOut:[{name:"Next",value:0}]},{objName:"Ops.Gl.TextureEffects.DrawImage_v2",id:"21",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"blendMode index",value:0},{name:"blendMode",value:"normal"},{name:"amount",value:1},{name:"image"},{name:"removeAlphaSrc",value:false},{name:"imageAlpha",value:0},{name:"alphaSrc index",value:0},{name:"alphaSrc",value:"alpha channel"},{name:"invert alpha channel",value:false},{name:"Aspect Ratio",value:false},{name:"Stretch Axis index",value:0},{name:"Stretch Axis",value:"X"},{name:"Position",value:0},{name:"Crop",value:false},{name:"flip x",value:false},{name:"flip y",value:false},{name:"Transform",value:true},{name:"Scale X",value:1},{name:"Scale Y",value:1},{name:"Position X",value:.5},{name:"Position Y",value:.1},{name:"Rotation",value:0},{name:"Clip Repeat",value:false}],portsOut:[{name:"trigger",value:0}]},{objName:"Ops.Gl.TextureEffects.DrawImage_v2",id:"22",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"blendMode index",value:0},{name:"blendMode",value:"normal"},{name:"amount",value:1},{name:"image"},{name:"removeAlphaSrc",value:false},{name:"imageAlpha",value:0},{name:"alphaSrc index",value:0},{name:"alphaSrc",value:"alpha channel"},{name:"invert alpha channel",value:false},{name:"Aspect Ratio",value:false},{name:"Stretch Axis index",value:0},{name:"Stretch Axis",value:"X"},{name:"Position",value:0},{name:"Crop",value:false},{name:"flip x",value:false},{name:"flip y",value:false},{name:"Transform",value:true},{name:"Scale X",value:1},{name:"Scale Y",value:.7},{name:"Position X",value:.02},{name:"Position Y",value:-.15},{name:"Rotation",value:0},{name:"Clip Repeat",value:false}],portsOut:[{name:"trigger",links:[{portIn:"Render",portOut:"trigger",objIn:"9",objOut:"22"}]}]},{objName:"Ops.Gl.TextureEffects.Desaturate",id:"23",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"amount",value:1},{name:"Mask",value:0},{name:"Invert Mask",value:false}],portsOut:[{name:"trigger",links:[{portIn:"Render",portOut:"trigger",objIn:"20",objOut:"23"}]}]},{objName:"Ops.Gl.TextureEffects.Levels",id:"24",uiAttribs:{subPatch:0},portsIn:[{name:"Render"},{name:"In Min",value:.048},{name:"Midpoint",value:.466},{name:"In Max",value:.761},{name:"Out Min",value:0},{name:"Out Max",value:.942}],portsOut:[{name:"Next",value:0}]},{objName:"Ops.Sequence",id:"25",uiAttribs:{subPatch:0},portsIn:[{name:"exe"},{name:"Clean up connections",value:0},{name:"exe 0",value:0},{name:"exe 1",value:0},{name:"exe 2",value:0},{name:"exe 3",value:0},{name:"exe 4",value:0},{name:"exe 5",value:0},{name:"exe 6",value:0},{name:"exe 7",value:0},{name:"exe 8",value:0},{name:"exe 9",value:0},{name:"exe 10",value:0},{name:"exe 11",value:0},{name:"exe 12",value:0},{name:"exe 13",value:0},{name:"exe 14",value:0}],portsOut:[{name:"trigger 0",links:[{portIn:"render",portOut:"trigger 0",objIn:"16",objOut:"25"}]},{name:"trigger 1",value:0},{name:"trigger 2",value:0},{name:"trigger 3",value:0},{name:"trigger 4",value:0},{name:"trigger 5",value:0},{name:"trigger 6",value:0},{name:"trigger 7",value:0},{name:"trigger 8",value:0},{name:"trigger 9",value:0},{name:"trigger 10",value:0},{name:"trigger 11",value:0},{name:"trigger 12",value:0},{name:"trigger 13",value:0},{name:"trigger 14",value:0},{name:"trigger 15",value:0}]},{objName:"Ops.Gl.Matrix.Transform",id:"26",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"posX",value:0},{name:"posY",value:"0"},{name:"posZ",value:0},{name:"scale",value:1},{name:"rotX",value:0},{name:"rotY",value:0},{name:"rotZ",value:0}],portsOut:[{name:"trigger",links:[{portIn:"exe",portOut:"trigger",objIn:"25",objOut:"26"}]}]},{objName:"Ops.Gl.TextureEffects.Vibrance",id:"27",uiAttribs:{subPatch:0},portsIn:[{name:"Render"},{name:"amount",value:22}],portsOut:[{name:"Trigger",links:[{portIn:"render",portOut:"Trigger",objIn:"62",objOut:"27"}]}]},{objName:"Ops.Gl.TextureEffects.Noise.Noise",id:"28",uiAttribs:{subPatch:0},portsIn:[{name:"Render"},{name:"Blend Mode index",value:0},{name:"Blend Mode",value:"color burn"},{name:"Amount",value:.019},{name:"Animated",value:true},{name:"RGB",value:true}],portsOut:[{name:"Next",links:[{portIn:"Render",portOut:"Next",objIn:"24",objOut:"28"}]}]},{objName:"Ops.Gl.Meshes.TextMesh_v2",id:"29",uiAttribs:{subPatch:0},portsIn:[{name:"Render"},{name:"Text",value:"Raphaël Miller"},{name:"Scale",value:.16},{name:"Font",value:"Gotham"},{name:"align index",value:1},{name:"align",value:"center"},{name:"vertical align index",value:1},{name:"vertical align",value:"Middle"},{name:"Line Height",value:1},{name:"Letter Spacing",value:0},{name:"filter index",value:2},{name:"filter",value:"mipmap"},{name:"Anisotropic index",value:0},{name:"Anisotropic",value:0},{name:"Texture Color",value:0},{name:"Texture Mask",value:0},{name:"r",value:1},{name:"g",value:1},{name:"b",value:1},{name:"a",value:1}],portsOut:[{name:"Next",value:0},{name:"texture"},{name:"Total Lines",value:1},{name:"Width",value:.4113714272635323},{name:"Font Available",value:true}]},{objName:"Ops.Gl.Meshes.TextMesh_v2",id:"30",uiAttribs:{subPatch:0},portsIn:[{name:"Render"},{name:"Text",value:"Portfolio"},{name:"Scale",value:.35},{name:"Font",value:"Gotham"},{name:"align index",value:1},{name:"align",value:"center"},{name:"vertical align index",value:1},{name:"vertical align",value:"Middle"},{name:"Line Height",value:1},{name:"Letter Spacing",value:0},{name:"filter index",value:2},{name:"filter",value:"mipmap"},{name:"Anisotropic index",value:0},{name:"Anisotropic",value:0},{name:"Texture Color",value:0},{name:"Texture Mask",value:0},{name:"r",value:1},{name:"g",value:1},{name:"b",value:1},{name:"a",value:1}],portsOut:[{name:"Next",value:0},{name:"texture"},{name:"Total Lines",value:1},{name:"Width",value:.5661249876022338},{name:"Font Available",value:true}]},{objName:"Ops.Gl.Matrix.Transform",id:"31",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"posX",value:0},{name:"posY",value:.27},{name:"posZ",value:0},{name:"scale",value:1},{name:"rotX",value:0},{name:"rotY",value:0},{name:"rotZ",value:0}],portsOut:[{name:"trigger",links:[{portIn:"Render",portOut:"trigger",objIn:"30",objOut:"31"}]}]},{objName:"Ops.Gl.TextureEffects.Plasma",id:"32",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"Blend Mode index",value:0},{name:"Blend Mode",value:"screen"},{name:"Amount",value:.0022},{name:"Width",value:.25},{name:"Height",value:1.13},{name:"Mul",value:3.02},{name:"offset X"},{name:"offset Y",value:0},{name:"Time",value:0},{name:"Greyscale",value:false}],portsOut:[{name:"trigger",links:[{portIn:"Render",portOut:"trigger",objIn:"28",objOut:"32"}]}]},{objName:"Ops.Gl.Render2Texture",id:"33",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"use viewport size",value:false},{name:"texture width",value:672},{name:"texture height",value:"451"},{name:"Auto Aspect",value:false},{name:"filter index",value:1},{name:"filter",value:"mipmap"},{name:"Wrap index",value:1},{name:"Wrap",value:"Repeat"},{name:"MSAA index",value:0},{name:"MSAA",value:"8x"},{name:"HDR",value:false},{name:"Depth",value:true},{name:"Clear",value:true}],portsOut:[{name:"trigger",links:[{portIn:"render",portOut:"trigger",objIn:"26",objOut:"33"}]},{name:"texture",links:[{portIn:"image",portOut:"texture",objIn:"6",objOut:"33"},{portIn:"image",portOut:"texture",objIn:"43",objOut:"33"}]},{name:"textureDepth"}]},{objName:"Ops.Gl.TextureEffects.ImageCompose",id:"34",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"use viewport size",value:false},{name:"width",value:1024},{name:"height",value:1024},{name:"filter index",value:1},{name:"filter",value:"mipmap"},{name:"wrap index",value:0},{name:"wrap",value:"repeat"},{name:"HDR",value:false},{name:"Background Alpha",value:0}],portsOut:[{name:"trigger",links:[{portIn:"Render",portOut:"trigger",objIn:"14",objOut:"34"}]},{name:"texture_out",links:[{portIn:"image",portOut:"texture_out",objIn:"22",objOut:"34"}]},{name:"Aspect Ratio",value:1}]},{objName:"Ops.Gl.TextureEffects.ImageCompose",id:"35",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"use viewport size",value:false},{name:"width",value:1024},{name:"height",value:1024},{name:"filter index",value:1},{name:"filter",value:"nearest"},{name:"wrap index",value:0},{name:"wrap",value:"repeat"},{name:"HDR",value:false},{name:"Background Alpha",value:1}],portsOut:[{name:"trigger",links:[{portIn:"Render",portOut:"trigger",objIn:"15",objOut:"35"}]},{name:"texture_out",links:[{portIn:"image",portOut:"texture_out",objIn:"21",objOut:"35"}]},{name:"Aspect Ratio",value:1}]},{objName:"Ops.Gl.TextureEffects.ImageCompose",id:"36",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"use viewport size",value:true},{name:"width",value:665},{name:"height",value:473},{name:"filter index",value:1},{name:"filter",value:"mipmap"},{name:"wrap index",value:0},{name:"wrap",value:"repeat"},{name:"HDR",value:false},{name:"Background Alpha",value:1}],portsOut:[{name:"trigger",links:[{portIn:"render",portOut:"trigger",objIn:"21",objOut:"36"}]},{name:"texture_out",links:[{portIn:"MatCap",portOut:"texture_out",objIn:"12",objOut:"36"}]},{name:"Aspect Ratio",value:1.4059196617336152}]},{objName:"Ops.Gl.TextureEffects.ImageCompose",id:"37",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"use viewport size",value:true},{name:"width",value:665},{name:"height",value:473},{name:"filter index",value:1},{name:"filter",value:"mipmap"},{name:"wrap index",value:0},{name:"wrap",value:"repeat"},{name:"HDR",value:false},{name:"Background Alpha",value:1}],portsOut:[{name:"trigger",links:[{portIn:"render",portOut:"trigger",objIn:"22",objOut:"37"}]},{name:"texture_out",links:[{portIn:"MatCap",portOut:"texture_out",objIn:"2",objOut:"37"}]},{name:"Aspect Ratio",value:1.4059196617336152}]},{objName:"Ops.Gl.TextureEffects.ImageCompose",id:"38",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"use viewport size",value:true},{name:"width",value:665},{name:"height",value:473},{name:"filter index",value:1},{name:"filter",value:"mipmap"},{name:"wrap index",value:0},{name:"wrap",value:"repeat"},{name:"HDR",value:false},{name:"Background Alpha",value:1}],portsOut:[{name:"trigger",links:[{portIn:"render",portOut:"trigger",objIn:"77",objOut:"38"}]},{name:"texture_out",links:[{portIn:"displaceTex",portOut:"texture_out",objIn:"7",objOut:"38"}]},{name:"Aspect Ratio",value:1.4059196617336152}]},{objName:"Ops.Gl.TextureEffects.ImageCompose",id:"39",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"use viewport size",value:true},{name:"width",value:665},{name:"height",value:473},{name:"filter index",value:1},{name:"filter",value:"mipmap"},{name:"wrap index",value:0},{name:"wrap",value:"repeat"},{name:"HDR",value:false},{name:"Background Alpha",value:1}],portsOut:[{name:"trigger",links:[{portIn:"render",portOut:"trigger",objIn:"6",objOut:"39"}]},{name:"texture_out",links:[{portIn:"image",portOut:"texture_out",objIn:"41",objOut:"39"}]},{name:"Aspect Ratio",value:1.4059196617336152}]},{objName:"Ops.Gl.Meshes.FullscreenRectangle",id:"40",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"Center in Canvas",value:false},{name:"Flip Y",value:false},{name:"Flip X",value:false},{name:"Texture"}],portsOut:[{name:"trigger",value:0}]},{objName:"Ops.Gl.TextureEffects.DrawImage_v2",id:"41",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"blendMode index",value:4},{name:"blendMode",value:"screen"},{name:"amount",value:1},{name:"image"},{name:"removeAlphaSrc",value:false},{name:"imageAlpha",value:0},{name:"alphaSrc index",value:0},{name:"alphaSrc",value:"alpha channel"},{name:"invert alpha channel",value:false},{name:"Aspect Ratio",value:false},{name:"Stretch Axis index",value:0},{name:"Stretch Axis",value:"X"},{name:"Position",value:0},{name:"Crop",value:false},{name:"flip x",value:false},{name:"flip y",value:false},{name:"Transform",value:false},{name:"Scale X",value:1},{name:"Scale Y",value:1},{name:"Position X",value:0},{name:"Position Y",value:0},{name:"Rotation",value:0},{name:"Clip Repeat",value:false}],portsOut:[{name:"trigger",links:[{portIn:"Render",portOut:"trigger",objIn:"27",objOut:"41"}]}]},{objName:"Ops.Gl.TextureEffects.ImageCompose",id:"42",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"use viewport size",value:true},{name:"width",value:665},{name:"height",value:473},{name:"filter index",value:1},{name:"filter",value:"mipmap"},{name:"wrap index",value:0},{name:"wrap",value:"repeat"},{name:"HDR",value:false},{name:"Background Alpha",value:1}],portsOut:[{name:"trigger",links:[{portIn:"render",portOut:"trigger",objIn:"46",objOut:"42"}]},{name:"texture_out",links:[{portIn:"Texture",portOut:"texture_out",objIn:"40",objOut:"42"}]},{name:"Aspect Ratio",value:1.4059196617336152}]},{objName:"Ops.Gl.TextureEffects.DrawImage_v2",id:"43",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"blendMode index",value:0},{name:"blendMode",value:"normal"},{name:"amount",value:1},{name:"image"},{name:"removeAlphaSrc",value:false},{name:"imageAlpha",value:0},{name:"alphaSrc index",value:0},{name:"alphaSrc",value:"alpha channel"},{name:"invert alpha channel",value:false},{name:"Aspect Ratio",value:false},{name:"Stretch Axis index",value:0},{name:"Stretch Axis",value:"X"},{name:"Position",value:0},{name:"Crop",value:false},{name:"flip x",value:false},{name:"flip y",value:false},{name:"Transform",value:false},{name:"Scale X",value:1},{name:"Scale Y",value:1},{name:"Position X",value:0},{name:"Position Y",value:0},{name:"Rotation",value:0},{name:"Clip Repeat",value:false}],portsOut:[{name:"trigger",links:[{portIn:"render",portOut:"trigger",objIn:"8",objOut:"43"}]}]},{objName:"Ops.Gl.TextureEffects.ImageCompose",id:"44",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"use viewport size",value:true},{name:"width",value:665},{name:"height",value:473},{name:"filter index",value:1},{name:"filter",value:"linear"},{name:"wrap index",value:0},{name:"wrap",value:"repeat"},{name:"HDR",value:false},{name:"Background Alpha",value:1}],portsOut:[{name:"trigger",value:0},{name:"texture_out"},{name:"Aspect Ratio",value:1.4059196617336152}]},{objName:"Ops.Gl.TextureEffects.Color",id:"45",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"Blend Mode index",value:0},{name:"Blend Mode",value:"normal"},{name:"Amount",value:1},{name:"Mask",value:null},{name:"Mask Invert",value:true},{name:"r",value:.05},{name:"g",value:.05},{name:"b",value:.05}],portsOut:[{name:"trigger",links:[{portIn:"render",portOut:"trigger",objIn:"43",objOut:"45"}]}]},{objName:"Ops.Gl.Matrix.Transform",id:"46",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"posX",value:0},{name:"posY"},{name:"posZ",value:0},{name:"scale",value:1},{name:"rotX",value:"0"},{name:"rotY",value:0},{name:"rotZ",value:0}],portsOut:[{name:"trigger",links:[{portIn:"render",portOut:"trigger",objIn:"45",objOut:"46"}]}]},{objName:"Ops.Devices.Mouse.Mouse_v2",id:"47",uiAttribs:{subPatch:0},portsIn:[{name:"Active",value:true},{name:"relative",value:false},{name:"normalize",value:false},{name:"flip y",value:true},{name:"Area index",value:0},{name:"Area",value:"Canvas"},{name:"right click prevent default",value:true},{name:"Touch support",value:true},{name:"smooth",value:false},{name:"smoothSpeed",value:20},{name:"multiply",value:1}],portsOut:[{name:"x",links:[{portIn:"value",portOut:"x",objIn:"49",objOut:"47"}]},{name:"y",links:[{portIn:"value",portOut:"y",objIn:"50",objOut:"47"}]},{name:"button down",value:false},{name:"click",value:0},{name:"Button Up",value:0},{name:"click right",value:0},{name:"mouseOver",value:false},{name:"button",value:0}]},{objName:"Ops.Gl.Matrix.Transform",id:"48",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"posX",value:0},{name:"posY",value:.177},{name:"posZ",value:0},{name:"scale",value:1},{name:"rotX",value:0},{name:"rotY",value:0},{name:"rotZ",value:0}],portsOut:[{name:"trigger",links:[{portIn:"Render",portOut:"trigger",objIn:"29",objOut:"48"}]}]},{objName:"Ops.Math.MapRange",id:"49",uiAttribs:{subPatch:0},portsIn:[{name:"value"},{name:"old min"},{name:"old max",value:1},{name:"new min",value:3},{name:"new max",value:-3},{name:"Easing index",value:0},{name:"Easing",value:"Smootherstep"}],portsOut:[{name:"result",links:[{portIn:"rotY",portOut:"result",objIn:"16",objOut:"49"},{portIn:"value",portOut:"result",objIn:"57",objOut:"49"}]}]},{objName:"Ops.Math.MapRange",id:"50",uiAttribs:{subPatch:0},portsIn:[{name:"value"},{name:"old min"},{name:"old max",value:1},{name:"new min",value:-3},{name:"new max",value:3},{name:"Easing index",value:0},{name:"Easing",value:"Smootherstep"}],portsOut:[{name:"result",links:[{portIn:"rotX",portOut:"result",objIn:"16",objOut:"50"},{portIn:"value",portOut:"result",objIn:"56",objOut:"50"}]}]},{objName:"Ops.Math.Multiply",id:"51",uiAttribs:{subPatch:0},portsIn:[{name:"number1"},{name:"number2",value:-3.78}],portsOut:[{name:"result",links:[{portIn:"posY",portOut:"result",objIn:"16",objOut:"51"},{portIn:"posY",portOut:"result",objIn:"55",objOut:"51"}]}]},{objName:"Ops.Gl.Matrix.Transform",id:"52",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"posX",value:0},{name:"posY"},{name:"posZ",value:0},{name:"scale",value:1},{name:"rotX",value:0},{name:"rotY",value:0},{name:"rotZ",value:0}],portsOut:[{name:"trigger",links:[{portIn:"render",portOut:"trigger",objIn:"7",objOut:"52"}]}]},{objName:"Ops.Gl.GLTF.GltfScene_v3",id:"53",uiAttribs:{subPatch:0},portsIn:[{name:"data",value:""},{name:"Render"},{name:"glb File",value:"assets/Tete_Moi_2.glb",display:"file"},{name:"Draw",value:true},{name:"Camera index",value:0},{name:"Camera",value:"None"},{name:"Animation",value:""},{name:"Show Structure",value:0},{name:"Center index",value:1},{name:"Center",value:"XYZ"},{name:"Rescale",value:true},{name:"Rescale Size",value:2.5},{name:"Time",value:0},{name:"Sync to timeline",value:false},{name:"Loop",value:true},{name:"Normals Format index",value:0},{name:"Normals Format",value:"XYZ"},{name:"Vertices Format index",value:0},{name:"Vertices Format",value:"XYZ"},{name:"Calc Normals",value:false},{name:"Materials",value:0},{name:"Hide Nodes",value:0},{name:"Active",value:true}],portsOut:[{name:"Render Before",value:0},{name:"Next",value:0},{name:"Generator",value:"Open Asset Import Library (assimp v5.0.5eb040c7)"},{name:"GLTF Version",value:2},{name:"GLTF Extensions Used"},{name:"Anim Length",value:0},{name:"Anim Time",value:0},{name:"Json"},{name:"Anims"},{name:"BoundingPoints"},{name:"Bounds"},{name:"Finished",value:0},{name:"Loading",value:false}]},{objName:"Ops.Gl.Matrix.Transform",id:"54",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"posX",value:0},{name:"posY",value:0},{name:"posZ",value:0},{name:"scale",value:.59},{name:"rotX",value:-16.5},{name:"rotY"},{name:"rotZ",value:0}],portsOut:[{name:"trigger",links:[{portIn:"Render",portOut:"trigger",objIn:"53",objOut:"54"}]}]},{objName:"Ops.Gl.Matrix.Transform",id:"55",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"posX",value:0},{name:"posY"},{name:"posZ",value:0},{name:"scale",value:1},{name:"rotX"},{name:"rotY"},{name:"rotZ",value:0}],portsOut:[{name:"trigger",links:[{portIn:"render",portOut:"trigger",objIn:"84",objOut:"55"}]}]},{objName:"Ops.Math.MapRange",id:"56",uiAttribs:{subPatch:0},portsIn:[{name:"value"},{name:"old min",value:-3},{name:"old max",value:3},{name:"new min",value:-6},{name:"new max",value:6},{name:"Easing index",value:0},{name:"Easing",value:"Linear"}],portsOut:[{name:"result",links:[{portIn:"rotX",portOut:"result",objIn:"55",objOut:"56"}]}]},{objName:"Ops.Math.MapRange",id:"57",uiAttribs:{subPatch:0},portsIn:[{name:"value"},{name:"old min",value:3},{name:"old max",value:-3},{name:"new min",value:6},{name:"new max",value:-6},{name:"Easing index",value:0},{name:"Easing",value:"Linear"}],portsOut:[{name:"result",links:[{portIn:"rotY",portOut:"result",objIn:"55",objOut:"57"}]}]},{objName:"Ops.Gl.Texture_v2",id:"58",uiAttribs:{subPatch:0},portsIn:[{name:"File",value:"assets/gotham-ultra.ttf.0.png",display:"file"},{name:"Filter index",value:0},{name:"Filter",value:"mipmap"},{name:"Wrap index",value:2},{name:"Wrap",value:"repeat"},{name:"Anisotropic index",value:0},{name:"Anisotropic",value:0},{name:"Flip",value:false},{name:"Pre Multiplied Alpha",value:false},{name:"Active",value:true},{name:"Save Memory",value:true}],portsOut:[{name:"Texture"},{name:"Width",value:1024},{name:"Height",value:1024},{name:"Aspect Ratio",value:1},{name:"Loaded",value:false},{name:"Loading",value:true}]},{objName:"Ops.Html.FontFile_v2",id:"59",uiAttribs:{subPatch:0},portsIn:[{name:"file",value:"assets/Gotham-Ultra_2.otf",display:"file"},{name:"family",value:""}],portsOut:[{name:"Loaded",value:false},{name:"Loaded Trigger",value:0}]},{objName:"Ops.Html.FontFile",id:"60",uiAttribs:{subPatch:0},portsIn:[{name:"file",value:"assets/gotham-ultra.ttf",display:"file"},{name:"family",value:"Gotham"}],portsOut:[{name:"Loaded",value:true},{name:"Loaded Trigger",value:0}]},{objName:"Ops.Anim.Timer_v2",id:"61",uiAttribs:{subPatch:0},portsIn:[{name:"Speed",value:15},{name:"Play",value:true},{name:"Reset",value:0},{name:"Sync to timeline",value:false}],portsOut:[{name:"Time",links:[{portIn:"rotY",portOut:"Time",objIn:"54",objOut:"61"}]}]},{objName:"Ops.Gl.TextureEffects.ChromaticAberration",id:"62",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"Blend Mode index",value:0},{name:"Blend Mode",value:"normal"},{name:"Amount",value:1},{name:"Pixel"},{name:"Lens Distort",value:0},{name:"Smooth",value:true},{name:"Mask",value:0}],portsOut:[{name:"trigger",value:0}]},{objName:"Ops.Devices.Mouse.Mouse_v2",id:"63",uiAttribs:{subPatch:0},portsIn:[{name:"Active",value:true},{name:"relative",value:false},{name:"normalize",value:false},{name:"flip y",value:true},{name:"Area index",value:0},{name:"Area",value:"Canvas"},{name:"right click prevent default",value:true},{name:"Touch support",value:true},{name:"smooth",value:false},{name:"smoothSpeed",value:20},{name:"multiply",value:1}],portsOut:[{name:"x",links:[{portIn:"value",portOut:"x",objIn:"66",objOut:"63"}]},{name:"y",links:[{portIn:"value",portOut:"y",objIn:"71",objOut:"63"}]},{name:"button down",value:false},{name:"click",value:0},{name:"Button Up",value:0},{name:"click right",value:0},{name:"mouseOver",value:false},{name:"button",value:0}]},{objName:"Ops.Gl.CanvasInfo",id:"64",uiAttribs:{subPatch:0},portsIn:[],portsOut:[{name:"width",links:[{portIn:"old min",portOut:"width",objIn:"66",objOut:"64"}]},{name:"height",links:[{portIn:"old min",portOut:"height",objIn:"71",objOut:"64"}]},{name:"Pixel Ratio",value:1},{name:"Aspect Ratio",value:1.4059196617336152},{name:"Landscape",value:1}]},{objName:"Ops.Math.MapRange",id:"65",uiAttribs:{subPatch:0},portsIn:[{name:"value"},{name:"old min",value:0},{name:"old max",value:1},{name:"new min",value:0},{name:"new max",value:6},{name:"Easing index",value:0},{name:"Easing",value:"Smootherstep"}],portsOut:[{name:"result",links:[{portIn:"number1",portOut:"result",objIn:"75",objOut:"65"}]}]},{objName:"Ops.Math.MapRange",id:"66",uiAttribs:{subPatch:0},portsIn:[{name:"value"},{name:"old min"},{name:"old max",value:1},{name:"new min",value:-1},{name:"new max",value:1},{name:"Easing index",value:0},{name:"Easing",value:"Linear"}],portsOut:[{name:"result",links:[{portIn:"number1",portOut:"result",objIn:"67",objOut:"66"},{portIn:"number1",portOut:"result",objIn:"68",objOut:"66"}]}]},{objName:"Ops.Math.Compare.LessThan",id:"67",uiAttribs:{subPatch:0},portsIn:[{name:"number1"},{name:"number2",value:0}],portsOut:[{name:"result",links:[{portIn:"Boolean",portOut:"result",objIn:"69",objOut:"67"}]}]},{objName:"Ops.Math.Multiply",id:"68",uiAttribs:{subPatch:0},portsIn:[{name:"number1"},{name:"number2"}],portsOut:[{name:"result",links:[{portIn:"value",portOut:"result",objIn:"65",objOut:"68"}]}]},{objName:"Ops.Value.NumberSwitchBoolean",id:"69",uiAttribs:{subPatch:0},portsIn:[{name:"Boolean"},{name:"Value false",value:1},{name:"Value true",value:-1}],portsOut:[{name:"Result",links:[{portIn:"number2",portOut:"Result",objIn:"68",objOut:"69"}]}]},{objName:"Ops.Math.MapRange",id:"70",uiAttribs:{subPatch:0},portsIn:[{name:"value"},{name:"old min",value:0},{name:"old max",value:1},{name:"new min",value:0},{name:"new max",value:6},{name:"Easing index",value:0},{name:"Easing",value:"Smootherstep"}],portsOut:[{name:"result",links:[{portIn:"number2",portOut:"result",objIn:"75",objOut:"70"}]}]},{objName:"Ops.Math.MapRange",id:"71",uiAttribs:{subPatch:0},portsIn:[{name:"value"},{name:"old min"},{name:"old max",value:1},{name:"new min",value:-1},{name:"new max",value:1},{name:"Easing index",value:0},{name:"Easing",value:"Linear"}],portsOut:[{name:"result",links:[{portIn:"number1",portOut:"result",objIn:"72",objOut:"71"},{portIn:"number1",portOut:"result",objIn:"73",objOut:"71"}]}]},{objName:"Ops.Math.Compare.LessThan",id:"72",uiAttribs:{subPatch:0},portsIn:[{name:"number1"},{name:"number2",value:0}],portsOut:[{name:"result",links:[{portIn:"Boolean",portOut:"result",objIn:"74",objOut:"72"}]}]},{objName:"Ops.Math.Multiply",id:"73",uiAttribs:{subPatch:0},portsIn:[{name:"number1"},{name:"number2"}],portsOut:[{name:"result",links:[{portIn:"value",portOut:"result",objIn:"70",objOut:"73"}]}]},{objName:"Ops.Value.NumberSwitchBoolean",id:"74",uiAttribs:{subPatch:0},portsIn:[{name:"Boolean"},{name:"Value false",value:1},{name:"Value true",value:-1}],portsOut:[{name:"Result",links:[{portIn:"number2",portOut:"Result",objIn:"73",objOut:"74"}]}]},{objName:"Ops.Math.Sum",id:"75",uiAttribs:{subPatch:0},portsIn:[{name:"number1"},{name:"number2"}],portsOut:[{name:"result",links:[{portIn:"Pixel",portOut:"result",objIn:"62",objOut:"75"}]}]},{objName:"Ops.Gl.CanvasInfo",id:"76",uiAttribs:{subPatch:0},portsIn:[],portsOut:[{name:"width",links:[{portIn:"old min",portOut:"width",objIn:"49",objOut:"76"}]},{name:"height",links:[{portIn:"old min",portOut:"height",objIn:"50",objOut:"76"}]},{name:"Pixel Ratio",value:1},{name:"Aspect Ratio",value:1.4059196617336152},{name:"Landscape",value:1}]},{objName:"Ops.Gl.TextureEffects.DrawImage_v2",id:"77",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"blendMode index",value:0},{name:"blendMode",value:"normal"},{name:"amount",value:1},{name:"image"},{name:"removeAlphaSrc",value:false},{name:"imageAlpha",value:0},{name:"alphaSrc index",value:0},{name:"alphaSrc",value:"alpha channel"},{name:"invert alpha channel",value:false},{name:"Aspect Ratio",value:false},{name:"Stretch Axis index",value:0},{name:"Stretch Axis",value:"X"},{name:"Position",value:0},{name:"Crop",value:false},{name:"flip x",value:false},{name:"flip y",value:false},{name:"Transform",value:false},{name:"Scale X",value:1},{name:"Scale Y",value:1},{name:"Position X",value:0},{name:"Position Y",value:0},{name:"Rotation",value:0},{name:"Clip Repeat",value:false}],portsOut:[{name:"trigger",links:[{portIn:"render",portOut:"trigger",objIn:"78",objOut:"77"}]}]},{objName:"Ops.Gl.TextureEffects.DrawImage_v2",id:"78",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"blendMode index",value:0},{name:"blendMode",value:"screen"},{name:"amount",value:1},{name:"image"},{name:"removeAlphaSrc",value:false},{name:"imageAlpha",value:0},{name:"alphaSrc index",value:0},{name:"alphaSrc",value:"alpha channel"},{name:"invert alpha channel",value:false},{name:"Aspect Ratio",value:false},{name:"Stretch Axis index",value:0},{name:"Stretch Axis",value:"X"},{name:"Position",value:0},{name:"Crop",value:false},{name:"flip x",value:false},{name:"flip y",value:false},{name:"Transform",value:false},{name:"Scale X",value:1},{name:"Scale Y",value:1},{name:"Position X",value:0},{name:"Position Y",value:0},{name:"Rotation",value:0},{name:"Clip Repeat",value:false}],portsOut:[{name:"trigger",links:[{portIn:"render",portOut:"trigger",objIn:"23",objOut:"78"}]}]},{objName:"Ops.Math.DeltaSum",id:"79",uiAttribs:{subPatch:0},portsIn:[{name:"Delta Value",value:0},{name:"Default Value",value:0},{name:"Multiply",value:.4},{name:"Reset",value:0},{name:"Limit",value:true},{name:"Min",value:0},{name:"Max",value:.7},{name:"Rubberband",value:0}],portsOut:[{name:"Absolute Value",links:[{portIn:"posY",portOut:"Absolute Value",objIn:"52",objOut:"79"},{portIn:"number1",portOut:"Absolute Value",objIn:"51",objOut:"79"},{portIn:"posY",portOut:"Absolute Value",objIn:"46",objOut:"79"}]}]},{objName:"Ops.Gl.TextureEffects.ImageCompose_v2",id:"80",uiAttribs:{subPatch:0},portsIn:[{name:"Render",value:null},{name:"Use viewport size",value:true},{name:"Width",value:640},{name:"Height",value:480},{name:"Filter index",value:1},{name:"Filter",value:"linear"},{name:"Wrap index",value:1},{name:"Wrap",value:"repeat"},{name:"HDR",value:false},{name:"Transparent",value:false}],portsOut:[{name:"Next",value:0},{name:"texture_out"},{name:"Aspect Ratio",value:1.7777777777777777}]},{objName:"Ops.Html.BackgroundImage_v2",id:"81",uiAttribs:{subPatch:0},portsIn:[{name:"Element"},{name:"active",value:false},{name:"image file",value:"assets/61fc69cfd1709c0f569eb3bc_Cover_Site.jpg",display:"file"},{name:"Size index",value:2},{name:"Size",value:"cover"},{name:"Repeat index",value:0},{name:"Repeat",value:"no-repeat"},{name:"Position index",value:7},{name:"Position",value:"center center"}],portsOut:[{name:"HTML Element"}]},{objName:"Ops.Html.DivElement_v2",id:"82",uiAttribs:{subPatch:0},portsIn:[{name:"Text",value:""},{name:"Id",value:""},{name:"Class",value:""},{name:"Style",value:"position:absolute;\nz-index:9999;\nfont-size:30px;\ntext-align:center;\nwidth:5%;\ncolor:whgite;\nleft:50%;\ntop:50%;\ntransform:translate(-50%,-50%);\ncursor:pointer;\npadding:110px;\nuser-select:none;"},{name:"Interactive",value:true},{name:"Visible",value:true},{name:"Convert Line Breaks",value:false},{name:"Propagate Click-Events",value:true}],portsOut:[{name:"DOM Element",links:[{portIn:"Element",portOut:"DOM Element",objIn:"81",objOut:"82"}]},{name:"Hover",value:false},{name:"Clicked",links:[{portIn:"Open",portOut:"Clicked",objIn:"83",objOut:"82"}]}]},{objName:"Ops.Html.HyperLink_v2",id:"83",uiAttribs:{subPatch:0},portsIn:[{name:"Open"},{name:"URL",value:"https://raphael-miller.github.io/portfolio"},{name:"Target Name",value:"_self"},{name:"Specs",value:""}],portsOut:[]},{objName:"Ops.Gl.Matrix.Transform",id:"84",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"posX",value:0},{name:"posY",value:0},{name:"posZ",value:0},{name:"scale",value:1},{name:"rotX",value:-15},{name:"rotY",value:190},{name:"rotZ",value:-4.5}],portsOut:[{name:"trigger",links:[{portIn:"render",portOut:"trigger",objIn:"54",objOut:"84"}]}]},{objName:"Ops.Html.FontFile",id:"85",uiAttribs:{subPatch:0},portsIn:[{name:"file",value:"assets/Avara-Bold.ttf",display:"file"},{name:"family",value:"Avara"}],portsOut:[{name:"Loaded",value:true},{name:"Loaded Trigger",value:0}]},{objName:"Ops.Gl.Meshes.TextMesh_v2",id:"86",uiAttribs:{subPatch:0},portsIn:[{name:"Render"},{name:"Text",value:"Motion design"},{name:"Scale",value:.21},{name:"Font",value:"Gotham"},{name:"align index",value:1},{name:"align",value:"center"},{name:"vertical align index",value:1},{name:"vertical align",value:"Middle"},{name:"Line Height",value:1},{name:"Letter Spacing",value:0},{name:"filter index",value:2},{name:"filter",value:"mipmap"},{name:"Anisotropic index",value:0},{name:"Anisotropic",value:0},{name:"Texture Color",value:0},{name:"Texture Mask",value:0},{name:"r",value:1},{name:"g",value:1},{name:"b",value:1},{name:"a",value:1}],portsOut:[{name:"Next",value:0},{name:"texture"},{name:"Total Lines",value:1},{name:"Width",value:.5420250034332275},{name:"Font Available",value:true}]},{objName:"Ops.Gl.Matrix.Transform",id:"87",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"posX",value:0},{name:"posY",value:.59},{name:"posZ",value:0},{name:"scale",value:1},{name:"rotX",value:0},{name:"rotY",value:0},{name:"rotZ",value:0}],portsOut:[{name:"trigger",links:[{portIn:"Render",portOut:"trigger",objIn:"86",objOut:"87"}]}]},{objName:"Ops.Gl.TextureEffects.PseudoLensFlares",id:"88",uiAttribs:{subPatch:0},portsIn:[{name:"render"},{name:"Ghosts",value:0},{name:"Num Ghosts",value:3},{name:"Dispersal",value:.25},{name:"Halo",value:.4},{name:"Halo Width",value:.669},{name:"Color Lookup",value:0}],portsOut:[{name:"trigger",value:0}]}],users:[],userOps:[],tags:[],_id:"61fc7cdabf961f76e79bdc30",name:"Home_page",userId:"61f8f81d12af7b2134c9fcce",created:"2022-02-04T01:09:46.406Z",updated:"2022-02-06T01:37:34.814Z",log:[],__v:18,shortId:"glXh2X",buildInfo:{ui:{timestamp:1642093519649,created:"2022-01-13T17:05:19.649Z",git:{branch:"master",commit:"4915a0a526ca85fa926ed6750446328f8fc1e649",date:"2021-11-30T10:48:51.000Z",message:"icons"}},host:"cables.gl"},opsHash:"a88180e241e03ccdd934bd3f10376729991866d4",ui:{timeLineLength:20,bookmarks:[],viewBoxesGl:{0:{x:3906.7947783669088,y:1145.044981074149,z:575.7483078575189}},renderer:{w:665,h:473,s:1}},updatedByUser:"Raphael",description:"",deployments:{lastDeployment:{date:1643971068252,service:"download"}},exports:7,views:0,cachedUsername:"Raphael",statsAdmin:{filenameScreenshots:["_screenshots/screenshot.png","_screenshots/screenshot_1643937506530.png","_screenshots/screenshot_1643937602421.png","_screenshots/screenshot_1643938854727.png","_screenshots/screenshot_1643940278293.png","_screenshots/screenshot_1643941291322.png","_screenshots/screenshot_1643942199331.png","_screenshots/screenshot_1643942387467.png","_screenshots/screenshot_1643942433482.png","_screenshots/screenshot_1643942631208.png","_screenshots/screenshot_1643943025535.png","_screenshots/screenshot_1643970061314.png","_screenshots/screenshot_1643970108206.png","_screenshots/screenshot_1643970748477.png","_screenshots/screenshot_1643970950506.png","_screenshots/screenshot_1643970999235.png","_screenshots/screenshot_1643971060150.png","_screenshots/screenshot_1644005192063.png","_screenshots/screenshot_1644007330879.png","_screenshots/screenshot_converted.jpg","_screenshots/screenshot_converted.webp"],filenameExports:["_exports/cables_Home_page1.zip","_exports/cables_Home_page2.zip","_exports/cables_Home_page3.zip","_exports/cables_Home_page4.zip","_exports/cables_Home_page5.zip","_exports/cables_Home_page6.zip"],filenameAssets:["Avara-Bold.ttf","Tete_Moi_2.glb","dfbac81c7f0255de35163f9009aecb6b.jpg","grunge_texture_01__0-00-00-25_.png"],hasOldScreenshots:false,hasOldExports:false,sizeScreenshots:8672.9326171875,sizeExports:16924.708984375,sizeAssets:1576.439453125}};if(!CABLES.exportedPatch){CABLES.exportedPatch=CABLES.exportedPatches["glXh2X"]}"use strict";var CABLES=CABLES||{};CABLES.OPS=CABLES.OPS||{};var Ops=Ops||{};Ops.Gl=Ops.Gl||{};Ops.Anim=Ops.Anim||{};Ops.Html=Ops.Html||{};Ops.Math=Ops.Math||{};Ops.Value=Ops.Value||{};Ops.Devices=Ops.Devices||{};Ops.Gl.GLTF=Ops.Gl.GLTF||{};Ops.Gl.Matrix=Ops.Gl.Matrix||{};Ops.Gl.Meshes=Ops.Gl.Meshes||{};Ops.Gl.Shader=Ops.Gl.Shader||{};Ops.Math.Compare=Ops.Math.Compare||{};Ops.Devices.Mouse=Ops.Devices.Mouse||{};Ops.Gl.ShaderEffects=Ops.Gl.ShaderEffects||{};Ops.Gl.TextureEffects=Ops.Gl.TextureEffects||{};Ops.Gl.TextureEffects.Noise=Ops.Gl.TextureEffects.Noise||{};Ops.Gl.MainLoop=function(){CABLES.Op.apply(this,arguments);const a=this;const e={};const t=a.inValue("FPS Limit",0);const n=a.outTrigger("trigger");const r=a.outValue("width");const i=a.outValue("height");const s=a.inValueBool("Reduce FPS not focussed",true);const o=a.inValueBool("Reduce FPS loading");const l=a.inValueBool("Clear",true);const u=a.inValueBool("ClearAlpha",true);const m=a.inValueBool("Fullscreen Button",false);const f=a.inValueBool("Active",true);const c=a.inValueBool("Hires Displays",false);a.onAnimFrame=T;c.onChange=function(){if(c.get())a.patch.cgl.pixelDensity=window.devicePixelRatio;else a.patch.cgl.pixelDensity=1;a.patch.cgl.updateSize();if(CABLES.UI)gui.setLayout()};f.onChange=function(){a.patch.removeOnAnimFrame(a);if(f.get()){a.setUiAttrib({extendTitle:""});a.onAnimFrame=T;a.patch.addOnAnimFrame(a);a.log("adding again!")}else{a.setUiAttrib({extendTitle:"Inactive"})}};const h=a.patch.cgl;let d=0;let g=0;if(!a.patch.cgl)a.uiAttr({error:"No webgl cgl context"});const p=vec3.create();vec3.set(p,0,0,0);const v=vec3.create();vec3.set(v,0,0,-2);m.onChange=C;setTimeout(C,100);let x=null;let b=true;let _=true;window.addEventListener("blur",()=>{b=false});window.addEventListener("focus",()=>{b=true});document.addEventListener("visibilitychange",()=>{_=!document.hidden});function O(){if(o.get()&&a.patch.loading.getProgress()<1)return 5;if(s.get()){if(!_)return 10;if(!b)return 30}return t.get()}function C(){function e(){if(x)x.style.display="block"}function t(){if(x)x.style.display="none"}a.patch.cgl.canvas.addEventListener("mouseleave",t);a.patch.cgl.canvas.addEventListener("mouseenter",e);if(m.get()){if(!x){x=document.createElement("div");const n=a.patch.cgl.canvas.parentElement;if(n)n.appendChild(x);x.addEventListener("mouseenter",e);x.addEventListener("click",function(e){if(CABLES.UI&&!e.shiftKey)gui.cycleFullscreen();else h.fullScreen()})}x.style.padding="10px";x.style.position="absolute";x.style.right="5px";x.style.top="5px";x.style.width="20px";x.style.height="20px";x.style.cursor="pointer";x.style["border-radius"]="40px";x.style.background="#444";x.style["z-index"]="9999";x.style.display="none";x.innerHTML='<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" id="Capa_1" x="0px" y="0px" viewBox="0 0 490 490" style="width:20px;height:20px;" xml:space="preserve" width="512px" height="512px"><g><path d="M173.792,301.792L21.333,454.251v-80.917c0-5.891-4.776-10.667-10.667-10.667C4.776,362.667,0,367.442,0,373.333V480     c0,5.891,4.776,10.667,10.667,10.667h106.667c5.891,0,10.667-4.776,10.667-10.667s-4.776-10.667-10.667-10.667H36.416     l152.459-152.459c4.093-4.237,3.975-10.99-0.262-15.083C184.479,297.799,177.926,297.799,173.792,301.792z" fill="#FFFFFF"/><path d="M480,0H373.333c-5.891,0-10.667,4.776-10.667,10.667c0,5.891,4.776,10.667,10.667,10.667h80.917L301.792,173.792     c-4.237,4.093-4.354,10.845-0.262,15.083c4.093,4.237,10.845,4.354,15.083,0.262c0.089-0.086,0.176-0.173,0.262-0.262     L469.333,36.416v80.917c0,5.891,4.776,10.667,10.667,10.667s10.667-4.776,10.667-10.667V10.667C490.667,4.776,485.891,0,480,0z" fill="#FFFFFF"/><path d="M36.416,21.333h80.917c5.891,0,10.667-4.776,10.667-10.667C128,4.776,123.224,0,117.333,0H10.667     C4.776,0,0,4.776,0,10.667v106.667C0,123.224,4.776,128,10.667,128c5.891,0,10.667-4.776,10.667-10.667V36.416l152.459,152.459     c4.237,4.093,10.99,3.975,15.083-0.262c3.992-4.134,3.992-10.687,0-14.82L36.416,21.333z" fill="#FFFFFF"/><path d="M480,362.667c-5.891,0-10.667,4.776-10.667,10.667v80.917L316.875,301.792c-4.237-4.093-10.99-3.976-15.083,0.261     c-3.993,4.134-3.993,10.688,0,14.821l152.459,152.459h-80.917c-5.891,0-10.667,4.776-10.667,10.667s4.776,10.667,10.667,10.667     H480c5.891,0,10.667-4.776,10.667-10.667V373.333C490.667,367.442,485.891,362.667,480,362.667z" fill="#FFFFFF"/></g></svg>'}else{if(x){x.style.display="none";x.remove();x=null}}}a.onDelete=function(){h.gl.clearColor(0,0,0,0);h.gl.clear(h.gl.COLOR_BUFFER_BIT|h.gl.DEPTH_BUFFER_BIT)};function T(e){if(!f.get())return;if(h.aborted||h.canvas.clientWidth===0||h.canvas.clientHeight===0)return;const t=performance.now();a.patch.config.fpsLimit=O();if(h.canvasWidth==-1){h.setCanvas(a.patch.config.glCanvasId);return}if(h.canvasWidth!=r.get()||h.canvasHeight!=i.get()){r.set(h.canvasWidth);i.set(h.canvasHeight)}if(CABLES.now()-g>1e3){CGL.fpsReport=CGL.fpsReport||[];if(a.patch.loading.getProgress()>=1&&g!==0)CGL.fpsReport.push(d);d=0;g=CABLES.now()}CGL.MESH.lastShader=null;CGL.MESH.lastMesh=null;h.renderStart(h,p,v);if(l.get()){h.gl.clearColor(0,0,0,1);h.gl.clear(h.gl.COLOR_BUFFER_BIT|h.gl.DEPTH_BUFFER_BIT)}n.trigger();if(CGL.MESH.lastMesh)CGL.MESH.lastMesh.unBind();if(CGL.Texture.previewTexture){if(!CGL.Texture.texturePreviewer)CGL.Texture.texturePreviewer=new CGL.Texture.texturePreview(h);CGL.Texture.texturePreviewer.render(CGL.Texture.previewTexture)}h.renderEnd(h);if(u.get()){h.gl.clearColor(1,1,1,1);h.gl.colorMask(false,false,false,true);h.gl.clear(h.gl.COLOR_BUFFER_BIT);h.gl.colorMask(true,true,true,true)}if(!h.frameStore.phong)h.frameStore.phong={};d++;a.patch.cgl.profileData.profileMainloopMs=performance.now()-t}};Ops.Gl.MainLoop.prototype=new CABLES.Op;CABLES.OPS["b0472a1d-db16-4ba6-8787-f300fbdc77bb"]={f:Ops.Gl.MainLoop,objName:"Ops.Gl.MainLoop"};Ops.Sequence=function(){CABLES.Op.apply(this,arguments);const i=this;const e={};const t=i.inTrigger("exe"),n=i.inTriggerButton("Clean up connections");const a=[],s=[],r=16;let o=null;t.onTriggered=u;n.onTriggered=m;n.setUiAttribs({hidePort:true});n.setUiAttribs({hideParam:true});for(let t=0;t<r;t++){const f=i.outTrigger("trigger "+t);s.push(f);f.onLinkChanged=l;if(t<r-1){let e=i.inTrigger("exe "+t);e.onTriggered=u;a.push(e)}}function l(){clearTimeout(o);o=setTimeout(()=>{let t=false;for(let e=0;e<s.length;e++)if(s[e].links.length>1)t=true;n.setUiAttribs({hideParam:!t});if(i.isCurrentUiOp())i.refreshParams()},60)}function u(){for(let e=0;e<s.length;e++)s[e].trigger()}function m(){let a=0;for(let n=0;n<s.length;n++){let t=[];if(s[n].links.length>1)for(let e=1;e<s[n].links.length;e++){while(s[a].links.length>0)a++;t.push(s[n].links[e]);const r=s[n].links[e].getOtherPort(s[n]);i.patch.link(i,"trigger "+a,r.parent,r.name);a++}for(let e=0;e<t.length;e++)t[e].remove()}l()}};Ops.Sequence.prototype=new CABLES.Op;CABLES.OPS["a466bc1f-06e9-4595-8849-bffb9fe22f99"]={f:Ops.Sequence,objName:"Ops.Sequence"};Ops.Gl.Shader.MatCapMaterialNew_v2=function(){CABLES.Op.apply(this,arguments);const e=this;const t={matcap_frag:"\n{{MODULES_HEAD}}\n\nIN vec3 norm;\nIN vec2 texCoord;\nIN vec3 vNorm;\nUNI mat4 viewMatrix;\n\nUNI float opacity;\n\nUNI float r;\nUNI float g;\nUNI float b;\n\nIN vec3 e;\n\n\nUNI sampler2D texMatcap;\n\n#ifdef HAS_DIFFUSE_TEXTURE\n   UNI sampler2D texDiffuse;\n#endif\n\n#ifdef USE_SPECULAR_TEXTURE\n   UNI sampler2D texSpec;\n   UNI sampler2D texSpecMatCap;\n#endif\n\n#ifdef HAS_AO_TEXTURE\n    UNI sampler2D texAo;\n    UNI float aoIntensity;\n#endif\n\n#ifdef HAS_NORMAL_TEXTURE\n   IN vec3 vBiTangent;\n   IN vec3 vTangent;\n\n   UNI sampler2D texNormal;\n   UNI mat4 normalMatrix;\n\n   vec2 vNormt;\n#endif\n\n#ifdef HAS_TEXTURE_OPACITY\n    UNI sampler2D texOpacity;\n#endif\n\n#ifdef CALC_SSNORMALS\n    // from https://www.enkisoftware.com/devlogpost-20150131-1-Normal_generation_in_the_pixel_shader\n    IN vec3 eye_relative_pos;\n#endif\n\n\nconst float normalScale=0.4;\n\nconst vec2 invAtan = vec2(0.1591, 0.3183);\nvec2 sampleSphericalMap(vec3 direction)\n{\n    vec2 uv = vec2(atan(direction.z, direction.x), asin(direction.y));\n    uv *= invAtan;\n    uv += 0.5;\n    return uv;\n}\n\n\nvoid main()\n{\n    vec2 vnOrig=vNorm.xy;\n    vec2 vn=vNorm.xy;\n\n    #ifdef PER_PIXEL\n\n        vec3 ref = reflect( e, vNorm );\n        // ref=(ref);\n\n        // ref.z+=1.;\n        // ref=normalize(ref);\n\n        // float m = 2. * sqrt(\n        //     pow(ref.x, 2.0)+\n        //     pow(ref.y, 2.0)+\n        //     pow(ref.z+1., 2.0)\n        // );\n\n        float m = 2.58284271247461903 * sqrt( (length(ref)) );\n\n        vn.xy = ref.xy / m + 0.5;\n    #endif\n\n    #ifdef HAS_TEXTURES\n        vec2 texCoords=texCoord;\n        {{MODULE_BEGIN_FRAG}}\n    #endif\n\n    #ifdef CALC_SSNORMALS\n    \tvec3 dFdxPos = dFdx( eye_relative_pos );\n    \tvec3 dFdyPos = dFdy( eye_relative_pos );\n    \tvec3 ssn = normalize( cross(dFdxPos,dFdyPos ));\n\n        vec3 rr = reflect( e, ssn );\n        float ssm = 2. * sqrt(\n            pow(rr.x, 2.0)+\n            pow(rr.y, 2.0)+\n            pow(rr.z + 1.0, 2.0)\n        );\n\n\n        vn = (rr.xy / ssm + 0.5);\n\n        vn.t=clamp(vn.t, 0.0, 1.0);\n        vn.s=clamp(vn.s, 0.0, 1.0);\n\n        // float dst = dot(abs(coord-center), vec2(1.0));\n        // float aaf = fwidth(dst);\n        // float alpha = smoothstep(radius - aaf, radius, dst);\n\n    #endif\n\n   #ifdef HAS_NORMAL_TEXTURE\n        vec3 tnorm=texture( texNormal, texCoord ).xyz * 2.0 - 1.0;\n\n        tnorm = normalize(tnorm*normalScale);\n\n        vec3 tangent;\n        vec3 binormal;\n\n        #ifdef CALC_TANGENT\n            vec3 c1 = cross(norm, vec3(0.0, 0.0, 1.0));\n//            vec3 c2 = cross(norm, vec3(0.0, 1.0, 0.0));\n//            if(length(c1)>length(c2)) tangent = c2;\n//                else tangent = c1;\n            tangent = c1;\n            tangent = normalize(tangent);\n            binormal = cross(norm, tangent);\n            binormal = normalize(binormal);\n        #endif\n\n        #ifndef CALC_TANGENT\n            tangent=normalize(vTangent);\n//            tangent.y*=-13.0;\n//            binormal=vBiTangent*norm;\n//            binormal.z*=-1.0;\n//            binormal=normalize(binormal);\n            binormal=normalize( cross( normalize(norm), normalize(vBiTangent) ));\n        // vBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );\n\n        #endif\n\n        tnorm=normalize(tangent*tnorm.x + binormal*tnorm.y + norm*tnorm.z);\n\n        // vec3 n = normalize( mat3(normalMatrix) * (norm+tnorm*normalScale) );\n        vec3 n = normalize( mat3(normalMatrix) * (norm+tnorm*normalScale) );\n\n        vec3 re = reflect( e, n );\n        float m = 2. * sqrt(\n            pow(re.x, 2.0)+\n            pow(re.y, 2.0)+\n            pow(re.z + 1.0, 2.0)\n        );\n\n        vn = (re.xy / m + 0.5);\n\n    #endif\n\n// vn=clamp(vn,0.0,1.0);\n\n\n\n\n\n    vec4 col = texture( texMatcap, vec2(vn.x,1.-vn.y) );\n\n    #ifdef HAS_DIFFUSE_TEXTURE\n        col = col*texture( texDiffuse, texCoords);\n    #endif\n\n    col.r*=r;\n    col.g*=g;\n    col.b*=b;\n\n\n    #ifdef HAS_AO_TEXTURE\n        col = col*\n            mix(\n                vec4(1.0,1.0,1.0,1.0),\n                texture( texAo, texCoords),\n                aoIntensity\n                );\n    #endif\n\n    #ifdef USE_SPECULAR_TEXTURE\n        vec4 spec = texture( texSpecMatCap, vn );\n        spec*= texture( texSpec, texCoords );\n        col+=spec;\n    #endif\n\n    col.a*=opacity;\n    #ifdef HAS_TEXTURE_OPACITY\n            #ifdef TRANSFORMALPHATEXCOORDS\n                texCoords=vec2(texCoord.s,1.0-texCoord.t);\n            #endif\n            #ifdef ALPHA_MASK_ALPHA\n                col.a*=texture(texOpacity,texCoords).a;\n            #endif\n            #ifdef ALPHA_MASK_LUMI\n                col.a*=dot(vec3(0.2126,0.7152,0.0722), texture(texOpacity,texCoords).rgb);\n            #endif\n            #ifdef ALPHA_MASK_R\n                col.a*=texture(texOpacity,texCoords).r;\n            #endif\n            #ifdef ALPHA_MASK_G\n                col.a*=texture(texOpacity,texCoords).g;\n            #endif\n            #ifdef ALPHA_MASK_B\n                col.a*=texture(texOpacity,texCoords).b;\n            #endif\n            // #endif\n    #endif\n\n    {{MODULE_COLOR}}\n\n\n    // #ifdef PER_PIXEL\n\n\n    //     vec2 nn=(vn-0.5)*2.0;\n    //     float ll=length( nn );\n    //     // col.r=0.0;\n    //     // col.b=0.0;\n    //     // col.a=1.0;\n\n    //     // if(ll>0.49 && ll<0.51) col=vec4(0.0,1.0,0.0,1.0);\n    //     // if(ll>0. ) col=vec4(0.0,1.0,0.0,1.0);\n    //     // col=vec4(vn,0.0,1.0);\n\n\n    //     float dd=(vn.x-0.5)*(vn.x-0.5) + (vn.y-0.5)*(vn.y-0.5);\n    //     dd*=4.0;\n\n    //     if(dd>0.94)\n    //     {\n    //     col=vec4(0.0,1.0,0.0,1.0);\n    //         // nn*=0.5;\n    //         // nn+=0.5;\n    //         // nn*=2.0;\n    //         // vn=nn;\n\n    //         // // dd=1.0;\n    //     }\n    //     // else dd=0.0;\n\n    //     // col=vec4(vec3(dd),1.0);\n\n    //     // if(dd>0.95) col=vec4(1.0,0.0,0.0,1.0);\n\n    //     // vec2 test=(vec2(1.0,1.0)-0.5)*2.0;\n    //     // col=vec4(0.0,0.0,length(test),1.0);\n\n    // #endif\n\n\n\n    outColor = col;\n\n}",matcap_vert:"\nIN vec3 vPosition;\nIN vec2 attrTexCoord;\nIN vec3 attrVertNormal;\nIN float attrVertIndex;\nIN vec3 attrTangent;\nIN vec3 attrBiTangent;\n\n#ifdef HAS_NORMAL_TEXTURE\n\n   OUT vec3 vBiTangent;\n   OUT vec3 vTangent;\n#endif\n\nOUT vec2 texCoord;\nOUT vec3 norm;\nUNI mat4 projMatrix;\nUNI mat4 modelMatrix;\nUNI mat4 viewMatrix;\n\nOUT vec3 vNorm;\nOUT vec3 e;\n\nUNI vec2 texOffset;\nUNI vec2 texRepeat;\n\n\n#ifndef INSTANCING\n    UNI mat4 normalMatrix;\n#endif\n\n\n{{MODULES_HEAD}}\n\n#ifdef CALC_SSNORMALS\n    // from https://www.enkisoftware.com/devlogpost-20150131-1-Normal_generation_in_the_pixel_shader\n    OUT vec3 eye_relative_pos;\n#endif\n\nUNI vec3 camPos;\n\n\n// mat3 transposeMat3(mat3 m)\n// {\n//     return mat3(m[0][0], m[1][0], m[2][0],\n//         m[0][1], m[1][1], m[2][1],\n//         m[0][2], m[1][2], m[2][2]);\n// }\n\n// mat3 inverseMat3(mat3 m)\n// {\n//     float a00 = m[0][0], a01 = m[0][1], a02 = m[0][2];\n//     float a10 = m[1][0], a11 = m[1][1], a12 = m[1][2];\n//     float a20 = m[2][0], a21 = m[2][1], a22 = m[2][2];\n\n//     float b01 = a22 * a11 - a12 * a21;\n//     float b11 = -a22 * a10 + a12 * a20;\n//     float b21 = a21 * a10 - a11 * a20;\n\n//     float det = a00 * b01 + a01 * b11 + a02 * b21;\n\n//     return mat3(b01, (-a22 * a01 + a02 * a21), (a12 * a01 - a02 * a11),\n//         b11, (a22 * a00 - a02 * a20), (-a12 * a00 + a02 * a10),\n//         b21, (-a21 * a00 + a01 * a20), (a11 * a00 - a01 * a10)) / det;\n// }\n\nvoid main()\n{\n    texCoord=texRepeat*vec2(attrTexCoord.x,attrTexCoord.y)+texOffset;\n\n\n    norm=attrVertNormal;\n    mat4 mMatrix=modelMatrix;\n    mat4 mvMatrix;\n    vec3 tangent=attrTangent;\n    vec3 bitangent=attrBiTangent;\n\n    #ifdef HAS_NORMAL_TEXTURE\n        vTangent=attrTangent;\n        vBiTangent=attrBiTangent;\n    #endif\n\n    vec4 pos = vec4( vPosition, 1. );\n\n    {{MODULE_VERTEX_POSITION}}\n\n\n    mvMatrix= viewMatrix * mMatrix;\n\n    #ifdef INSTANCING\n        mat4 normalMatrix=mvMatrix;//inverse(transpose(mvMatrix));\n        // mat4 normalMatrix = mat4(transposeMat3(inverseMat3(mat3(mMatrix))));\n\n    #endif\n\n\n    mat3 wmMatrix=mat3(mMatrix);\n\n    e = normalize( vec3( mvMatrix * pos )  );\n    vec3 n = normalize( mat3(normalMatrix*viewMatrix) * (norm) );\n\n    #ifdef PER_PIXEL\n        vNorm=n;\n    #endif\n    #ifndef PER_PIXEL\n        //matcap\n        vec3 r = reflect( e, n );\n\n        // float m = 2. * sqrt(\n        //     pow(r.x, 2.0)+\n        //     pow(r.y, 2.0)+\n        //     pow(r.z + 1.0, 2.0)\n        // );\n\n        float m = 2.58284271247461903 * sqrt(length(r));\n\n        vNorm.xy = r.xy / m + 0.5;\n\n    #endif\n\n\n\n    #ifdef DO_PROJECT_COORDS_XY\n       texCoord=(projMatrix * mvMatrix*pos).xy*0.1;\n    #endif\n\n    #ifdef DO_PROJECT_COORDS_YZ\n       texCoord=(projMatrix * mvMatrix*pos).yz*0.1;\n    #endif\n\n    #ifdef DO_PROJECT_COORDS_XZ\n        texCoord=(projMatrix * mvMatrix*pos).xz*0.1;\n    #endif\n\n    #ifdef CALC_SSNORMALS\n        eye_relative_pos = (mvMatrix * pos ).xyz - camPos;\n    #endif\n\n\n\n   gl_Position = projMatrix * mvMatrix * pos;\n\n}"};const n=e.inTrigger("render"),a=e.inTexture("MatCap"),r=e.inTexture("Diffuse"),i=e.inTexture("Normal"),s=e.inTexture("Specular"),o=e.inTexture("Specular MatCap"),l=e.inTexture("AO Texture"),u=e.inTexture("Opacity Texture"),m=e.inValueSlider("r",1),f=e.inValueSlider("g",1),c=e.inValueSlider("b",1),h=e.inValueSlider("Opacity",1),d=e.inValueSlider("AO Intensity",1),g=e.inValue("Repeat X",1),p=e.inValue("Repeat Y",1),v=e.inValue("Offset X",0),x=e.inValue("Offset Y",0),b=e.inValueBool("calc normal tangents",true),_=e.inValueSelect("projectCoords",["no","xy","yz","xz"],"no"),O=e.inValueBool("Screen Space Normals"),C=e.outTrigger("trigger"),T=e.outObject("Shader");m.setUiAttribs({colorPick:true});const A=e.inSwitch("Alpha Mask Source",["Luminance","R","G","B","A"],"Luminance");A.setUiAttribs({greyout:true});const S=e.inValueBool("Opacity TexCoords Transform",false);const M=e.inValueBool("Discard Transparent Pixels");e.setPortGroup("Texture Opacity",[A,S,M]);e.setPortGroup("Texture maps",[r,i,s,o,l,u]);e.setPortGroup("Color",[m,f,c,h]);const E=e.patch.cgl;const y=new CGL.Shader(E,"MatCapMaterialNew");const w=new CGL.Uniform(y,"f","opacity",h);y.setModules(["MODULE_VERTEX_POSITION","MODULE_COLOR","MODULE_BEGIN_FRAG"]);y.setSource(t.matcap_vert,t.matcap_frag);T.set(y);const L=new CGL.Uniform(y,"t","texMatcap");let I=null;let P=null;let N=null;let j=null;let G=null;const R=new CGL.Uniform(y,"2f","texOffset",v,x);const D=new CGL.Uniform(y,"2f","texRepeat",g,p);const B=new CGL.Uniform(y,"f","aoIntensity",d);c.uniform=new CGL.Uniform(y,"f","b",c);f.uniform=new CGL.Uniform(y,"f","g",f);m.uniform=new CGL.Uniform(y,"f","r",m);b.onChange=U;U();function U(){if(b.get())y.define("CALC_TANGENT");else y.removeDefine("CALC_TANGENT")}O.onChange=function(){if(O.get()){if(E.glVersion<2){E.gl.getExtension("OES_standard_derivatives");y.enableExtension("GL_OES_standard_derivatives")}y.define("CALC_SSNORMALS")}else y.removeDefine("CALC_SSNORMALS")};_.onChange=function(){y.toggleDefine("DO_PROJECT_COORDS_XY",_.get()=="xy");y.toggleDefine("DO_PROJECT_COORDS_YZ",_.get()=="yz");y.toggleDefine("DO_PROJECT_COORDS_XZ",_.get()=="xz")};a.onChange=V;function V(){if(!E.defaultMatcapTex){const a=new Uint8Array(256*4);for(let n=0;n<16;n++){for(let t=0;t<16;t++){let e=t*16;e*=Math.min(1,(n+t/3)/8);a[(n+t*16)*4+0]=a[(n+t*16)*4+1]=a[(n+t*16)*4+2]=e;a[(n+t*16)*4+3]=255}}E.defaultMatcapTex=new CGL.Texture(E);E.defaultMatcapTex.initFromData(a,16,16,CGL.Texture.FILTER_LINEAR,CGL.Texture.WRAP_REPEAT)}}r.onChange=function(){if(r.get()){if(I!==null)return;y.define("HAS_DIFFUSE_TEXTURE");y.removeUniform("texDiffuse");I=new CGL.Uniform(y,"t","texDiffuse")}else{y.removeDefine("HAS_DIFFUSE_TEXTURE");y.removeUniform("texDiffuse");I=null}};i.onChange=function(){if(i.get()){if(P!==null)return;y.define("HAS_NORMAL_TEXTURE");y.removeUniform("texNormal");P=new CGL.Uniform(y,"t","texNormal")}else{y.removeDefine("HAS_NORMAL_TEXTURE");y.removeUniform("texNormal");P=null}};l.onChange=function(){if(l.get()){if(G!==null)return;y.define("HAS_AO_TEXTURE");y.removeUniform("texAo");G=new CGL.Uniform(y,"t","texAo")}else{y.removeDefine("HAS_AO_TEXTURE");y.removeUniform("texAo");G=null}};s.onChange=o.onChange=function(){if(s.get()&&o.get()){if(N!==null)return;y.define("USE_SPECULAR_TEXTURE");y.removeUniform("texSpec");y.removeUniform("texSpecMatCap");N=new CGL.Uniform(y,"t","texSpec");j=new CGL.Uniform(y,"t","texSpecMatCap")}else{y.removeDefine("USE_SPECULAR_TEXTURE");y.removeUniform("texSpec");y.removeUniform("texSpecMatCap");N=null;j=null}};function k(){if(A.get()=="Alpha Channel")y.define("ALPHA_MASK_ALPHA");else y.removeDefine("ALPHA_MASK_ALPHA");if(A.get()=="Luminance")y.define("ALPHA_MASK_LUMI");else y.removeDefine("ALPHA_MASK_LUMI");if(A.get()=="R")y.define("ALPHA_MASK_R");else y.removeDefine("ALPHA_MASK_R");if(A.get()=="G")y.define("ALPHA_MASK_G");else y.removeDefine("ALPHA_MASK_G");if(A.get()=="B")y.define("ALPHA_MASK_B");else y.removeDefine("ALPHA_MASK_B")}A.onChange=k;u.onChange=F;let z=null;function F(){if(u.get()){if(z!==null)return;y.removeUniform("texOpacity");y.define("HAS_TEXTURE_OPACITY");if(!z)z=new CGL.Uniform(y,"t","texOpacity");A.setUiAttribs({greyout:false});M.setUiAttribs({greyout:false});S.setUiAttribs({greyout:false})}else{y.removeUniform("texOpacity");y.removeDefine("HAS_TEXTURE_OPACITY");z=null;A.setUiAttribs({greyout:true});M.setUiAttribs({greyout:true});S.setUiAttribs({greyout:true})}k()}M.onChange=function(){if(M.get())y.define("DISCARDTRANS");else y.removeDefine("DISCARDTRANS")};S.onChange=function(){if(S.get())y.define("TRANSFORMALPHATEXCOORDS");else y.removeDefine("TRANSFORMALPHATEXCOORDS")};e.onDelete=function(){};e.preRender=function(){y.bind()};n.onTriggered=function(){if(!E.defaultMatcapTex)V();y.popTextures();const e=a.get()||E.defaultMatcapTex;y.pushTexture(L,e.tex);if(r.get()&&I)y.pushTexture(I,r.get().tex);if(i.get()&&P)y.pushTexture(P,i.get().tex);if(s.get()&&N)y.pushTexture(N,s.get().tex);if(o.get()&&j)y.pushTexture(j,o.get().tex);if(l.get()&&G)y.pushTexture(G,l.get().tex);if(u.get()&&z)y.pushTexture(z,u.get().tex);E.pushShader(y);C.trigger();E.popShader()}};Ops.Gl.Shader.MatCapMaterialNew_v2.prototype=new CABLES.Op;CABLES.OPS["264b5f8d-82dd-44c6-ae03-741a702e904a"]={f:Ops.Gl.Shader.MatCapMaterialNew_v2,objName:"Ops.Gl.Shader.MatCapMaterialNew_v2"};Ops.Gl.ShaderEffects.PerlinAreaDeform_v3=function(){CABLES.Op.apply(this,arguments);const t=this;const n={perlindeform_vert:"\nUNI bool MOD_smooth;\nUNI float MOD_x,MOD_y,MOD_z;\nUNI float MOD_strength;\nUNI float MOD_size;\nUNI float MOD_scale;\nUNI float MOD_mScale;\nUNI float MOD_scrollx;\nUNI float MOD_scrolly;\nUNI float MOD_scrollz;\nUNI float MOD_fallOff;\n\nvec3 MOD_newTangent,MOD_newBiTangent;\n\n\n\n#ifndef PERLINDEFORM\n#define PERLINDEFORM\nfloat Interpolation_C2( float x ) { return x * x * x * (x * (x * 6.0 - 15.0) + 10.0); }   //  6x^5-15x^4+10x^3\t( Quintic Curve.  As used by Perlin in Improved Noise.  http://mrl.nyu.edu/~perlin/paper445.pdf )\nvec2 Interpolation_C2( vec2 x ) { return x * x * x * (x * (x * 6.0 - 15.0) + 10.0); }\nvec3 Interpolation_C2( vec3 x ) { return x * x * x * (x * (x * 6.0 - 15.0) + 10.0); }\nvec4 Interpolation_C2( vec4 x ) { return x * x * x * (x * (x * 6.0 - 15.0) + 10.0); }\nvec4 Interpolation_C2_InterpAndDeriv( vec2 x ) { return x.xyxy * x.xyxy * ( x.xyxy * ( x.xyxy * ( x.xyxy * vec2( 6.0, 0.0 ).xxyy + vec2( -15.0, 30.0 ).xxyy ) + vec2( 10.0, -60.0 ).xxyy ) + vec2( 0.0, 30.0 ).xxyy ); }\nvec3 Interpolation_C2_Deriv( vec3 x ) { return x * x * (x * (x * 30.0 - 60.0) + 30.0); }\n\n\nvoid FAST32_hash_3D( \tvec3 gridcell,\n                        out vec4 lowz_hash_0,\n                        out vec4 lowz_hash_1,\n                        out vec4 lowz_hash_2,\n                        out vec4 highz_hash_0,\n                        out vec4 highz_hash_1,\n                        out vec4 highz_hash_2\t)\t\t//\tgenerates 3 random numbers for each of the 8 cell corners\n{\n    //    gridcell is assumed to be an integer coordinate\n\n    //\tTODO: \tthese constants need tweaked to find the best possible noise.\n    //\t\t\tprobably requires some kind of brute force computational searching or something....\n    const vec2 OFFSET = vec2( 50.0, 161.0 );\n    const float DOMAIN = 69.0;\n    const vec3 SOMELARGEFLOATS = vec3( 635.298681, 682.357502, 668.926525 );\n    const vec3 ZINC = vec3( 48.500388, 65.294118, 63.934599 );\n\n    //\ttruncate the domain\n    gridcell.xyz = gridcell.xyz - floor(gridcell.xyz * ( 1.0 / DOMAIN )) * DOMAIN;\n    vec3 gridcell_inc1 = step( gridcell, vec3( DOMAIN - 1.5 ) ) * ( gridcell + 1.0 );\n\n    //\tcalculate the noise\n    vec4 P = vec4( gridcell.xy, gridcell_inc1.xy ) + OFFSET.xyxy;\n    P *= P;\n    P = P.xzxz * P.yyww;\n    vec3 lowz_mod = vec3( 1.0 / ( SOMELARGEFLOATS.xyz + gridcell.zzz * ZINC.xyz ) );\n    vec3 highz_mod = vec3( 1.0 / ( SOMELARGEFLOATS.xyz + gridcell_inc1.zzz * ZINC.xyz ) );\n    lowz_hash_0 = fract( P * lowz_mod.xxxx );\n    highz_hash_0 = fract( P * highz_mod.xxxx );\n    lowz_hash_1 = fract( P * lowz_mod.yyyy );\n    highz_hash_1 = fract( P * highz_mod.yyyy );\n    lowz_hash_2 = fract( P * lowz_mod.zzzz );\n    highz_hash_2 = fract( P * highz_mod.zzzz );\n}\n\n//\n//\tPerlin Noise 3D  ( gradient noise )\n//\tReturn value range of -1.0->1.0\n//\thttp://briansharpe.files.wordpress.com/2011/11/perlinsample.jpg\n//\nfloat Perlin3D( vec3 P )\n{\n    //\testablish our grid cell and unit position\n    vec3 Pi = floor(P);\n    vec3 Pf = P - Pi;\n    vec3 Pf_min1 = Pf - 1.0;\n\n#if 1\n    //\n    //\tclassic noise.\n    //\trequires 3 random values per point.  with an efficent hash function will run faster than improved noise\n    //\n\n    //\tcalculate the hash.\n    //\t( various hashing methods listed in order of speed )\n    vec4 hashx0, hashy0, hashz0, hashx1, hashy1, hashz1;\n    FAST32_hash_3D( Pi, hashx0, hashy0, hashz0, hashx1, hashy1, hashz1 );\n    //SGPP_hash_3D( Pi, hashx0, hashy0, hashz0, hashx1, hashy1, hashz1 );\n\n    //\tcalculate the gradients\n    vec4 grad_x0 = hashx0 - 0.49999;\n    vec4 grad_y0 = hashy0 - 0.49999;\n    vec4 grad_z0 = hashz0 - 0.49999;\n    vec4 grad_x1 = hashx1 - 0.49999;\n    vec4 grad_y1 = hashy1 - 0.49999;\n    vec4 grad_z1 = hashz1 - 0.49999;\n    vec4 grad_results_0 = inversesqrt( grad_x0 * grad_x0 + grad_y0 * grad_y0 + grad_z0 * grad_z0 ) * ( vec2( Pf.x, Pf_min1.x ).xyxy * grad_x0 + vec2( Pf.y, Pf_min1.y ).xxyy * grad_y0 + Pf.zzzz * grad_z0 );\n    vec4 grad_results_1 = inversesqrt( grad_x1 * grad_x1 + grad_y1 * grad_y1 + grad_z1 * grad_z1 ) * ( vec2( Pf.x, Pf_min1.x ).xyxy * grad_x1 + vec2( Pf.y, Pf_min1.y ).xxyy * grad_y1 + Pf_min1.zzzz * grad_z1 );\n\n#if 1\n    //\tClassic Perlin Interpolation\n    vec3 blend = Interpolation_C2( Pf );\n    vec4 res0 = mix( grad_results_0, grad_results_1, blend.z );\n    vec4 blend2 = vec4( blend.xy, vec2( 1.0 - blend.xy ) );\n    float final = dot( res0, blend2.zxzx * blend2.wwyy );\n    final *= 1.1547005383792515290182975610039;\t\t//\t(optionally) scale things to a strict -1.0->1.0 range    *= 1.0/sqrt(0.75)\n    return final;\n#else\n    //\tClassic Perlin Surflet\n    //\thttp://briansharpe.wordpress.com/2012/03/09/modifications-to-classic-perlin-noise/\n    Pf *= Pf;\n    Pf_min1 *= Pf_min1;\n    vec4 vecs_len_sq = vec4( Pf.x, Pf_min1.x, Pf.x, Pf_min1.x ) + vec4( Pf.yy, Pf_min1.yy );\n    float final = dot( Falloff_Xsq_C2( min( vec4( 1.0 ), vecs_len_sq + Pf.zzzz ) ), grad_results_0 ) + dot( Falloff_Xsq_C2( min( vec4( 1.0 ), vecs_len_sq + Pf_min1.zzzz ) ), grad_results_1 );\n    final *= 2.3703703703703703703703703703704;\t\t//\t(optionally) scale things to a strict -1.0->1.0 range    *= 1.0/cube(0.75)\n    return final;\n#endif\n\n#else\n    //\n    //\timproved noise.\n    //\trequires 1 random value per point.  Will run faster than classic noise if a slow hashing function is used\n    //\n\n    //\tcalculate the hash.\n    //\t( various hashing methods listed in order of speed )\n    vec4 hash_lowz, hash_highz;\n    FAST32_hash_3D( Pi, hash_lowz, hash_highz );\n    //BBS_hash_3D( Pi, hash_lowz, hash_highz );\n    //SGPP_hash_3D( Pi, hash_lowz, hash_highz );\n\n    //\n    //\t\"improved\" noise using 8 corner gradients.  Faster than the 12 mid-edge point method.\n    //\tKen mentions using diagonals like this can cause \"clumping\", but we'll live with that.\n    //\t[1,1,1]  [-1,1,1]  [1,-1,1]  [-1,-1,1]\n    //\t[1,1,-1] [-1,1,-1] [1,-1,-1] [-1,-1,-1]\n    //\n    hash_lowz -= 0.5;\n    vec4 grad_results_0_0 = vec2( Pf.x, Pf_min1.x ).xyxy * sign( hash_lowz );\n    hash_lowz = abs( hash_lowz ) - 0.25;\n    vec4 grad_results_0_1 = vec2( Pf.y, Pf_min1.y ).xxyy * sign( hash_lowz );\n    vec4 grad_results_0_2 = Pf.zzzz * sign( abs( hash_lowz ) - 0.125 );\n    vec4 grad_results_0 = grad_results_0_0 + grad_results_0_1 + grad_results_0_2;\n\n    hash_highz -= 0.5;\n    vec4 grad_results_1_0 = vec2( Pf.x, Pf_min1.x ).xyxy * sign( hash_highz );\n    hash_highz = abs( hash_highz ) - 0.25;\n    vec4 grad_results_1_1 = vec2( Pf.y, Pf_min1.y ).xxyy * sign( hash_highz );\n    vec4 grad_results_1_2 = Pf_min1.zzzz * sign( abs( hash_highz ) - 0.125 );\n    vec4 grad_results_1 = grad_results_1_0 + grad_results_1_1 + grad_results_1_2;\n\n    //\tblend the gradients and return\n    vec3 blend = Interpolation_C2( Pf );\n    vec4 res0 = mix( grad_results_0, grad_results_1, blend.z );\n    vec4 blend2 = vec4( blend.xy, vec2( 1.0 - blend.xy ) );\n    return dot( res0, blend2.zxzx * blend2.wwyy ) * (2.0 / 3.0);\t//\t(optionally) mult by (2.0/3.0) to scale to a strict -1.0->1.0 range\n#endif\n}\n\n#endif\n\nvec3 MOD_deform(vec3 pos,vec3 norm)\n{\n    vec3 modelPos=pos;\n    vec3 forcePos=vec3(MOD_x,MOD_y,MOD_z);\n\n    vec3 vecToOrigin=modelPos-forcePos;\n    float dist=abs(length(vecToOrigin));\n    // float distAlpha = (MOD_size - dist) / MOD_size;\n\n    if(dist*MOD_mScale<MOD_size*MOD_mScale)\n    {\n        vec3 ppos=vec3(pos*MOD_scale*MOD_mScale);\n        ppos.x+=MOD_scrollx;\n        ppos.y+=MOD_scrolly;\n        ppos.z+=MOD_scrollz;\n\n        float p=(Perlin3D(ppos))*MOD_strength;\n\n        float dist=distance(vec3(MOD_x,MOD_y,MOD_z),modelPos);\n        float fallOff=1.0-smoothstep(MOD_fallOff*MOD_size,MOD_size,dist);\n\n        vec3 pnorm=norm;//normalize(pos.xyz);\n\n        #ifdef MOD_METH_MULNORM\n            pos.x+=p*pnorm.x*fallOff;\n            pos.y+=p*pnorm.y*fallOff;\n            pos.z+=p*pnorm.z*fallOff;\n        #endif\n\n        #ifdef MOD_METH_ADD_XYZ\n            pos.x+=p*fallOff;\n            pos.y+=p*fallOff;\n            pos.z+=p*fallOff;\n        #endif\n\n        #ifdef MOD_METH_ADD_Z\n            pos.z+=p*fallOff;\n        #endif\n        #ifdef MOD_METH_ADD_Y\n            pos.y+=p*fallOff;\n        #endif\n        #ifdef MOD_METH_ADD_X\n            pos.x+=p*fallOff;\n        #endif\n    }\n\n    return pos;\n}\n\n// LOOK AT THIS./....\n//https://github.com/spite/perlin-experiments/blob/master/chrome.html\n\n\nvec3 MOD_calcNormal(vec3 pos,vec3 norm,vec3 tangent,vec3 bitangent)\n{\n    //http://diary.conewars.com/vertex-displacement-shader/\n    vec4 position=vec4(MOD_deform(pos,norm),1.0);\n\n    vec3 positionAndTangent = MOD_deform( pos + tangent * 0.1,norm );\n    vec3 positionAndBitangent = MOD_deform( pos + bitangent * 0.1,norm );\n\n    MOD_newTangent = ( positionAndTangent - position.xyz ); // leaves just 'tangent'\n    MOD_newBiTangent = ( positionAndBitangent - position.xyz ); // leaves just 'bitangent'\n\n    vec3 newNormal = cross( MOD_newTangent.xyz, MOD_newBiTangent.xyz );\n    return normalize(newNormal.xyz);\n\n}\n\n",perlindeform_body_vert:"\n#ifndef MOD_WORLDSPACE\n    pos.xyz=MOD_deform(pos.xyz,norm.xyz);\n\n    #ifdef MOD_CALC_NORMALS\n        norm=MOD_calcNormal(pos.xyz,norm.xyz,tangent,bitangent);\n    #endif\n#endif\n\n#ifdef MOD_WORLDSPACE\n    pos.xyz=MOD_deform( (mMatrix*pos).xyz ,norm.xyz);\n\n    #ifdef MOD_CALC_NORMALS\n        norm=MOD_calcNormal( (mMatrix*pos).xyz,norm.xyz,tangent,bitangent);\n    #endif\n#endif\n\n#ifdef MOD_CALC_NORMALS\n    tangent=MOD_newTangent;\n    bitangent=MOD_newBiTangent;\n#endif"};const e=t.inTrigger("render"),a=t.outTrigger("trigger"),r=t.inValueFloat("Scale",1),i=t.inValueFloat("Size",1),s=t.inValueFloat("Strength",1),o=t.inValueBool("Calc Normals",true),l=t.inValueSlider("Falloff",.5),u=t.inValueSelect("Output",["Mul Normal","Add XYZ","Add X","Add Y","Add Z"],"Add XYZ"),m=t.inValueFloat("x"),f=t.inValueFloat("y"),c=t.inValueFloat("z"),h=t.inValueFloat("Scroll X"),d=t.inValueFloat("Scroll Y"),g=t.inValueFloat("Scroll Z");const p=t.patch.cgl;o.onChange=O;let v=t.inValueBool("WorldSpace");let x=null;let b=null;u.onChange=T;e.onLinkChanged=C;let _=null;v.onChange=A;function O(){if(!x)return;x.toggleDefine(b.prefix+"CALC_NORMALS",o.get())}function C(){if(x&&b)x.removeModule(b);x=null}function T(){if(!x)return;x.toggleDefine(b.prefix+"METH_ADD_XYZ",u.get()=="Add XYZ");x.toggleDefine(b.prefix+"METH_ADD_Z",u.get()=="Add Z");x.toggleDefine(b.prefix+"METH_ADD_Y",u.get()=="Add Y");x.toggleDefine(b.prefix+"METH_ADD_X",u.get()=="Add X");x.toggleDefine(b.prefix+"METH_MULNORM",u.get()=="Mul Normal")}function A(){if(!x)return;if(v.get())x.define(b.prefix+"WORLDSPACE");else x.removeDefine(b.prefix+"WORLDSPACE")}function S(e){let t=e[8];let n=e[9];let a=e[10];return Math.hypot(t,n,a)}e.onTriggered=function(){if(!p.getShader()){a.trigger();return}let e=S(p.mMatrix);if(_)_.setValue(e);if(CABLES.UI){p.pushModelMatrix();if(p.shouldDrawHelpers(t)){p.pushModelMatrix();mat4.translate(p.mMatrix,p.mMatrix,[m.get(),f.get(),c.get()]);CABLES.GL_MARKER.drawSphere(t,i.get());p.popModelMatrix()}if(t.isCurrentUiOp())gui.setTransformGizmo({posX:m,posY:f,posZ:c});p.popModelMatrix()}if(p.getShader()!=x){if(x)C();x=p.getShader();b=x.addModule({title:t.objName,name:"MODULE_VERTEX_POSITION",srcHeadVert:n.perlindeform_vert,srcBodyVert:n.perlindeform_body_vert});i.uniform=new CGL.Uniform(x,"f",b.prefix+"size",i);s.uniform=new CGL.Uniform(x,"f",b.prefix+"strength",s);r.uniform=new CGL.Uniform(x,"f",b.prefix+"scale",r);h.uniform=new CGL.Uniform(x,"f",b.prefix+"scrollx",h);d.uniform=new CGL.Uniform(x,"f",b.prefix+"scrolly",d);g.uniform=new CGL.Uniform(x,"f",b.prefix+"scrollz",g);m.uniform=new CGL.Uniform(x,"f",b.prefix+"x",m);f.uniform=new CGL.Uniform(x,"f",b.prefix+"y",f);c.uniform=new CGL.Uniform(x,"f",b.prefix+"z",c);l.uniform=new CGL.Uniform(x,"f",b.prefix+"fallOff",l);_=new CGL.Uniform(x,"f",b.prefix+"mScale",1);T();A();O()}if(!x)return;a.trigger()}};Ops.Gl.ShaderEffects.PerlinAreaDeform_v3.prototype=new CABLES.Op;CABLES.OPS["e4432ebd-d67c-46e2-b302-619d4f97daab"]={f:Ops.Gl.ShaderEffects.PerlinAreaDeform_v3,objName:"Ops.Gl.ShaderEffects.PerlinAreaDeform_v3"};Ops.Anim.Timer_v2=function(){CABLES.Op.apply(this,arguments);const e=this;const t={};const a=e.inValue("Speed",1),n=e.inValueBool("Play",true),r=e.inTriggerButton("Reset"),i=e.inValueBool("Sync to timeline",false),s=e.outValue("Time");e.setPortGroup("Controls",[n,r,a]);const o=new CABLES.Timer;let l=null;let u=0;let m=false;n.onChange=f;f();function f(){if(n.get()){o.play();e.patch.addOnAnimFrame(e)}else{o.pause();e.patch.removeOnAnimFrame(e)}}r.onTriggered=c;function c(){u=0;l=null;o.setTime(0);s.set(0)}i.onChange=function(){m=i.get();n.setUiAttribs({greyout:m});r.setUiAttribs({greyout:m})};e.onAnimFrame=function(e){if(o.isPlaying()){if(CABLES.overwriteTime!==undefined){s.set(CABLES.overwriteTime*a.get())}else if(m){s.set(e*a.get())}else{o.update();const t=o.get();if(l===null){l=t;return}const n=Math.abs(t-l);l=t;u+=n*a.get();if(u!=u)u=0;s.set(u)}}}};Ops.Anim.Timer_v2.prototype=new CABLES.Op;CABLES.OPS["aac7f721-208f-411a-adb3-79adae2e471a"]={f:Ops.Anim.Timer_v2,objName:"Ops.Anim.Timer_v2"};Ops.Gl.Render2Texture=function(){CABLES.Op.apply(this,arguments);const a=this;const e={};const r=a.patch.cgl;const t=a.inTrigger("render"),n=a.inValueBool("use viewport size",true),i=a.inValueInt("texture width",512),s=a.inValueInt("texture height",512),o=a.inBool("Auto Aspect",false),l=a.inSwitch("filter",["nearest","linear","mipmap"],"linear"),u=a.inSwitch("Wrap",["Clamp","Repeat","Mirror"],"Repeat"),m=a.inSwitch("MSAA",["none","2x","4x","8x"],"none"),f=a.outTrigger("trigger"),c=a.outTexture("texture"),h=a.outTexture("textureDepth"),d=a.inValueBool("HDR"),g=a.inValueBool("Depth",true),p=a.inValueBool("Clear",true);let v=null;let x=true;c.set(CGL.Texture.getEmptyTexture(r));a.setPortGroup("Size",[n,i,s,o]);n.onChange=b;function b(){i.setUiAttribs({greyout:n.get()});s.setUiAttribs({greyout:n.get()});o.setUiAttribs({greyout:n.get()})}function _(){x=true}const O=[0,0,0,0];d.onChange=g.onChange=p.onChange=l.onChange=u.onChange=m.onChange=_;function C(){const e=r.getViewPort();O[0]=e[0];O[1]=e[1];O[2]=e[2];O[3]=e[3];if(!v||x){if(v)v.delete();let n=CGL.Texture.WRAP_REPEAT;if(u.get()=="Clamp")n=CGL.Texture.WRAP_CLAMP_TO_EDGE;else if(u.get()=="Mirror")n=CGL.Texture.WRAP_MIRRORED_REPEAT;if(d.get()&&l.get()=="mipmap")a.setUiError("fpmipmap","Don't use mipmap and HDR at the same time, many systems do not support this.");else a.setUiError("fpmipmap",null);if(r.glVersion>=2){let e=true;let t=4;if(m.get()=="none"){t=0;e=false}if(m.get()=="2x")t=2;if(m.get()=="4x")t=4;if(m.get()=="8x")t=8;v=new CGL.Framebuffer2(r,8,8,{name:"render2texture "+a.id,isFloatingPointTexture:d.get(),multisampling:e,wrap:n,depth:g.get(),multisamplingSamples:t,clear:p.get()})}else{v=new CGL.Framebuffer(r,8,8,{isFloatingPointTexture:d.get(),clear:p.get()})}if(l.get()=="nearest")v.setFilter(CGL.Texture.FILTER_NEAREST);else if(l.get()=="linear")v.setFilter(CGL.Texture.FILTER_LINEAR);else if(l.get()=="mipmap")v.setFilter(CGL.Texture.FILTER_MIPMAP);h.set(v.getTextureDepth());x=false}if(n.get()){i.set(r.getViewPort()[2]);s.set(r.getViewPort()[3])}if(v.getWidth()!=Math.ceil(i.get())||v.getHeight()!=Math.ceil(s.get())){v.setSize(Math.max(1,Math.ceil(i.get())),Math.max(1,Math.ceil(s.get())))}v.renderStart(r);if(o.get())mat4.perspective(r.pMatrix,45,i.get()/s.get(),.1,1e3);f.trigger();v.renderEnd(r);r.setViewPort(O[0],O[1],O[2],O[3]);c.set(CGL.Texture.getEmptyTexture(a.patch.cgl));c.set(v.getTextureColor())}t.onTriggered=C;a.preRender=C;b()};Ops.Gl.Render2Texture.prototype=new CABLES.Op;CABLES.OPS["d01fa820-396c-4cb5-9d78-6b14762852af"]={f:Ops.Gl.Render2Texture,objName:"Ops.Gl.Render2Texture"};Ops.Gl.TextureEffects.DrawImage_v2=function(){CABLES.Op.apply(this,arguments);const n=this;const e={drawimage_frag:"#ifdef HAS_TEXTURES\n    IN vec2 texCoord;\n    UNI sampler2D tex;\n    UNI sampler2D image;\n#endif\n\nIN mat3 transform;\nUNI float rotate;\n\n{{CGL.BLENDMODES}}\n\n#ifdef HAS_TEXTUREALPHA\n   UNI sampler2D imageAlpha;\n#endif\n\nUNI float amount;\n\n#ifdef ASPECT_RATIO\n    UNI float aspectTex;\n    UNI float aspectPos;\n#endif\n\nvoid main()\n{\n    vec4 blendRGBA=vec4(0.0,0.0,0.0,1.0);\n    #ifdef HAS_TEXTURES\n        vec2 tc=texCoord;\n\n        #ifdef TEX_FLIP_X\n            tc.x=1.0-tc.x;\n        #endif\n        #ifdef TEX_FLIP_Y\n            tc.y=1.0-tc.y;\n        #endif\n\n        #ifdef ASPECT_RATIO\n            #ifdef ASPECT_AXIS_X\n                tc.y=(1.0-aspectPos)-(((1.0-aspectPos)-tc.y)*aspectTex);\n            #endif\n            #ifdef ASPECT_AXIS_Y\n                tc.x=(1.0-aspectPos)-(((1.0-aspectPos)-tc.x)/aspectTex);\n            #endif\n        #endif\n\n        #ifdef TEX_TRANSFORM\n            vec3 coordinates=vec3(tc.x, tc.y,1.0);\n            tc=(transform * coordinates ).xy;\n        #endif\n\n        blendRGBA=texture(image,tc);\n\n        vec3 blend=blendRGBA.rgb;\n        vec4 baseRGBA=texture(tex,texCoord);\n        vec3 base=baseRGBA.rgb;\n        vec3 colNew=_blend(base,blend);\n\n        #ifdef REMOVE_ALPHA_SRC\n            blendRGBA.a=1.0;\n        #endif\n\n        #ifdef HAS_TEXTUREALPHA\n            vec4 colImgAlpha=texture(imageAlpha,tc);\n            float colImgAlphaAlpha=colImgAlpha.a;\n\n            #ifdef ALPHA_FROM_LUMINANCE\n                vec3 gray = vec3(dot(vec3(0.2126,0.7152,0.0722), colImgAlpha.rgb ));\n                colImgAlphaAlpha=(gray.r+gray.g+gray.b)/3.0;\n            #endif\n\n            #ifdef ALPHA_FROM_INV_UMINANCE\n                vec3 gray = vec3(dot(vec3(0.2126,0.7152,0.0722), colImgAlpha.rgb ));\n                colImgAlphaAlpha=1.0-(gray.r+gray.g+gray.b)/3.0;\n            #endif\n\n            #ifdef INVERT_ALPHA\n            colImgAlphaAlpha=clamp(colImgAlphaAlpha,0.0,1.0);\n            colImgAlphaAlpha=1.0-colImgAlphaAlpha;\n            #endif\n\n            blendRGBA.a=colImgAlphaAlpha*blendRGBA.a;\n        #endif\n    #endif\n\n    float am=amount;\n\n    #ifdef CLIP_REPEAT\n        if(tc.y>1.0 || tc.y<0.0 || tc.x>1.0 || tc.x<0.0)\n        {\n            // colNew.rgb=vec3(0.0);\n            am=0.0;\n        }\n    #endif\n\n    #ifdef ASPECT_RATIO\n        #ifdef ASPECT_CROP\n            if(tc.y>1.0 || tc.y<0.0 || tc.x>1.0 || tc.x<0.0) colNew.rgb=base.rgb;//vec3(0.0);\n        #endif\n    #endif\n\n\n\n    blendRGBA.rgb=mix( colNew, base ,1.0-blendRGBA.a*am);\n    blendRGBA.a=1.0;\n\n    outColor= blendRGBA;\n\n}",drawimage_vert:"IN vec3 vPosition;\nIN vec2 attrTexCoord;\nIN vec3 attrVertNormal;\n\nUNI mat4 projMatrix;\nUNI mat4 mvMatrix;\n\nUNI float posX;\nUNI float posY;\nUNI float scaleX;\nUNI float scaleY;\nUNI float rotate;\n\nOUT vec2 texCoord;\nOUT vec3 norm;\nOUT mat3 transform;\n\nvoid main()\n{\n   texCoord=attrTexCoord;\n   norm=attrVertNormal;\n\n   #ifdef TEX_TRANSFORM\n        vec3 coordinates=vec3(attrTexCoord.x, attrTexCoord.y,1.0);\n        float angle = radians( rotate );\n        vec2 scale= vec2(scaleX,scaleY);\n        vec2 translate= vec2(posX,posY);\n\n        transform = mat3(   scale.x * cos( angle ), scale.x * sin( angle ), 0.0,\n            - scale.y * sin( angle ), scale.y * cos( angle ), 0.0,\n            - 0.5 * scale.x * cos( angle ) + 0.5 * scale.y * sin( angle ) - 0.5 * translate.x*2.0 + 0.5,  - 0.5 * scale.x * sin( angle ) - 0.5 * scale.y * cos( angle ) - 0.5 * translate.y*2.0 + 0.5, 1.0);\n   #endif\n\n   gl_Position = projMatrix * mvMatrix * vec4(vPosition,  1.0);\n}\n"};var t=n.inTrigger("render");var a=CGL.TextureEffect.AddBlendSelect(n,"blendMode");var r=n.inValueSlider("amount",1);var i=n.inTexture("image");var s=n.inValueBool("removeAlphaSrc",false);var o=n.inTexture("imageAlpha");var l=n.inValueSelect("alphaSrc",["alpha channel","luminance","luminance inv"]);var u=n.inValueBool("invert alpha channel");const m=n.inValueBool("Aspect Ratio",false);const f=n.inValueSelect("Stretch Axis",["X","Y"],"X");const c=n.inValueSlider("Position",0);const h=n.inValueBool("Crop",false);var d=n.outTrigger("trigger");a.set("normal");var g=n.patch.cgl;var p=new CGL.Shader(g,"drawimage");o.onLinkChanged=v;n.setPortGroup("Mask",[o,l,u]);n.setPortGroup("Aspect Ratio",[m,c,h,f]);s.onChange=A;function v(){if(o.isLinked()){s.setUiAttribs({greyout:true});l.setUiAttribs({greyout:false});u.setUiAttribs({greyout:false})}else{s.setUiAttribs({greyout:false});l.setUiAttribs({greyout:true});u.setUiAttribs({greyout:true})}}n.toWorkPortsNeedToBeLinked(i);p.setSource(e.drawimage_vert,e.drawimage_frag);var x=new CGL.Uniform(p,"t","tex",0);var b=new CGL.Uniform(p,"t","image",1);var _=new CGL.Uniform(p,"t","imageAlpha",2);const O=new CGL.Uniform(p,"f","aspectTex",1);const C=new CGL.Uniform(p,"f","aspectPos",c);u.onChange=function(){if(u.get())p.define("INVERT_ALPHA");else p.removeDefine("INVERT_ALPHA")};m.onChange=T;h.onChange=T;f.onChange=T;function T(){p.removeDefine("ASPECT_AXIS_X");p.removeDefine("ASPECT_AXIS_Y");if(m.get()){p.define("ASPECT_RATIO");if(h.get())p.define("ASPECT_CROP");else p.removeDefine("ASPECT_CROP");if(f.get()=="X")p.define("ASPECT_AXIS_X");if(f.get()=="Y")p.define("ASPECT_AXIS_Y");c.setUiAttribs({greyout:false});h.setUiAttribs({greyout:false});f.setUiAttribs({greyout:false})}else{p.removeDefine("ASPECT_RATIO");if(h.get())p.define("ASPECT_CROP");else p.removeDefine("ASPECT_CROP");if(f.get()=="X")p.define("ASPECT_AXIS_X");if(f.get()=="Y")p.define("ASPECT_AXIS_Y");c.setUiAttribs({greyout:true});h.setUiAttribs({greyout:true});f.setUiAttribs({greyout:true})}}function A(){if(s.get())p.define("REMOVE_ALPHA_SRC");else p.removeDefine("REMOVE_ALPHA_SRC")}l.onChange=function(){p.toggleDefine("ALPHA_FROM_LUMINANCE",l.get()=="luminance");p.toggleDefine("ALPHA_FROM_INV_UMINANCE",l.get()=="luminance_inv")};l.set("alpha channel");{var S=n.inValueBool("flip x");var M=n.inValueBool("flip y");S.onChange=function(){if(S.get())p.define("TEX_FLIP_X");else p.removeDefine("TEX_FLIP_X")};M.onChange=function(){if(M.get())p.define("TEX_FLIP_Y");else p.removeDefine("TEX_FLIP_Y")}}{var E=n.inValueBool("Transform");var y=n.inValueSlider("Scale X",1);var w=n.inValueSlider("Scale Y",1);var L=n.inValue("Position X",0);var I=n.inValue("Position Y",0);var P=n.inValue("Rotation",0);var N=n.inValueBool("Clip Repeat",false);N.onChange=j;function j(){if(N.get())p.define("CLIP_REPEAT");else p.removeDefine("CLIP_REPEAT")}var G=new CGL.Uniform(p,"f","scaleX",y);var R=new CGL.Uniform(p,"f","scaleY",w);var D=new CGL.Uniform(p,"f","posX",L);var B=new CGL.Uniform(p,"f","posY",I);var U=new CGL.Uniform(p,"f","rotate",P);E.onChange=V}function V(){p.toggleDefine("TEX_TRANSFORM",E.get());if(E.get()){y.setUiAttribs({greyout:false});w.setUiAttribs({greyout:false});L.setUiAttribs({greyout:false});I.setUiAttribs({greyout:false});P.setUiAttribs({greyout:false})}else{y.setUiAttribs({greyout:true});w.setUiAttribs({greyout:true});L.setUiAttribs({greyout:true});I.setUiAttribs({greyout:true});P.setUiAttribs({greyout:true})}}CGL.TextureEffect.setupBlending(n,p,a,r);var k=new CGL.Uniform(p,"f","amount",r);o.onChange=function(){if(o.get()&&o.get().tex){p.define("HAS_TEXTUREALPHA")}else{p.removeDefine("HAS_TEXTUREALPHA")}};function z(){if(!CGL.TextureEffect.checkOpInEffect(n))return;var e=i.get();if(e&&e.tex&&r.get()>0){g.pushShader(p);g.currentTextureEffect.bind();const t=g.currentTextureEffect.getCurrentSourceTexture();g.setTexture(0,t.tex);O.setValue(1/(e.height/e.width*t.width/t.height));g.setTexture(1,e.tex);if(o.get()&&o.get().tex){g.setTexture(2,o.get().tex)}g.currentTextureEffect.finish();g.popShader()}d.trigger()}t.onTriggered=z;V();A();v();T()};Ops.Gl.TextureEffects.DrawImage_v2.prototype=new CABLES.Op;CABLES.OPS["f94b5136-61fd-4558-8348-e7c8db5a6348"]={f:Ops.Gl.TextureEffects.DrawImage_v2,objName:"Ops.Gl.TextureEffects.DrawImage_v2"};Ops.Gl.TextureEffects.PixelDisplacement_v3=function(){CABLES.Op.apply(this,arguments);const e=this;const t={pixeldisplace3_frag:"IN vec2 texCoord;\nUNI sampler2D tex;\nUNI sampler2D displaceTex;\nUNI float amountX;\nUNI float amountY;\nUNI float amount;\n\n{{CGL.BLENDMODES}}\n\nvec3 getOffset(vec3 offset)\n{\n    #ifdef ZERO_BLACK\n        return offset;\n    #endif\n\n    #ifdef ZERO_GREY\n        return offset*2.0-1.0;\n    #endif\n}\n\nfloat getOffset(float offset)\n{\n    #ifdef ZERO_BLACK\n        return offset;\n    #endif\n\n    #ifdef ZERO_GREY\n        return offset*2.0-1.0;\n    #endif\n}\n\nvoid main()\n{\n    vec3 offset=texture(displaceTex,texCoord).rgb;\n    float x,y;\n\n    #ifdef INPUT_REDGREEN\n        offset=getOffset(offset);\n        x=offset.r*amountX+texCoord.x;\n        y=offset.g*amountY+texCoord.y;\n    #endif\n    #ifdef INPUT_RED\n        offset=getOffset(offset);\n        x=offset.r*amountX+texCoord.x;\n        y=offset.r*amountY+texCoord.y;\n    #endif\n    #ifdef INPUT_GREEN\n        offset=getOffset(offset);\n        x=offset.g*amountX+texCoord.x;\n        y=offset.g*amountY+texCoord.y;\n    #endif\n    #ifdef INPUT_BLUE\n        offset=getOffset(offset);\n        x=offset.b*amountX+texCoord.x;\n        y=offset.b*amountY+texCoord.y;\n    #endif\n    #ifdef INPUT_LUMINANCE\n        float o=dot(vec3(0.2126,0.7152,0.0722), offset);\n        o=getOffset(o);\n        x=o*amountX+texCoord.x;\n        y=o*amountY+texCoord.y;\n    #endif\n    #ifdef WRAP_CLAMP\n        x=clamp(x,0.0,1.0);\n        y=clamp(y,0.0,1.0);\n    #endif\n    #ifdef WRAP_REPEAT\n        x=mod(x,1.0);\n        y=mod(y,1.0);\n    #endif\n    #ifdef WRAP_MIRROR\n        float mx=mod(x,2.0);\n        float my=mod(y,2.0);\n        x=abs((floor(mx)-fract(mx)));\n        y=abs((floor(my)-fract(my)));\n    #endif\n\n\n\n    vec4 col=texture(tex,vec2(x,y));\n    vec4 base=texture(tex,texCoord);\n\n    outColor=cgl_blend(base,col,amount);\n}"};const n=e.inTrigger("render"),a=e.inTexture("displaceTex"),r=CGL.TextureEffect.AddBlendSelect(e,"Blend Mode","normal"),i=e.inValueSlider("Amount",1),s=e.inValueSlider("amount X",.2),o=e.inValueSlider("amount Y",.2),l=e.inSwitch("Wrap",["Mirror","Clamp","Repeat"],"Mirror"),u=e.inValueSelect("Input",["Luminance","RedGreen","Red","Green","Blue"],"Luminance"),m=e.inSwitch("Zero Displace",["Grey","Black"],"Grey"),f=e.outTrigger("trigger");e.setPortGroup("Axis Displacement Strength",[s,o]);e.setPortGroup("Modes",[l,u]);e.toWorkPortsNeedToBeLinked(a);const c=e.patch.cgl,h=new CGL.Shader(c,e.name);h.setSource(h.getDefaultVertexShader(),t.pixeldisplace3_frag);const d=new CGL.Uniform(h,"t","tex",0),g=new CGL.Uniform(h,"t","displaceTex",1),p=new CGL.Uniform(h,"f","amountX",s),v=new CGL.Uniform(h,"f","amountY",o),x=new CGL.Uniform(h,"f","amount",i);m.onChange=b;l.onChange=_;u.onChange=O;_();O();b();CGL.TextureEffect.setupBlending(e,h,r,i);function b(){h.removeDefine("ZERO_BLACK");h.removeDefine("ZERO_GREY");h.define("ZERO_"+(m.get()+"").toUpperCase())}function _(){h.removeDefine("WRAP_CLAMP");h.removeDefine("WRAP_REPEAT");h.removeDefine("WRAP_MIRROR");h.define("WRAP_"+(l.get()+"").toUpperCase())}function O(){h.removeDefine("INPUT_LUMINANCE");h.removeDefine("INPUT_REDGREEN");h.removeDefine("INPUT_RED");h.define("INPUT_"+(u.get()+"").toUpperCase())}n.onTriggered=function(){if(!CGL.TextureEffect.checkOpInEffect(e))return;c.pushShader(h);c.currentTextureEffect.bind();c.setTexture(0,c.currentTextureEffect.getCurrentSourceTexture().tex);if(a.get())c.setTexture(1,a.get().tex);c.currentTextureEffect.finish();c.popShader();f.trigger()}};Ops.Gl.TextureEffects.PixelDisplacement_v3.prototype=new CABLES.Op;CABLES.OPS["c089646e-9324-48b2-8b32-81240408222e"]={f:Ops.Gl.TextureEffects.PixelDisplacement_v3,objName:"Ops.Gl.TextureEffects.PixelDisplacement_v3"};Ops.Gl.TextureEffects.Levels=function(){CABLES.Op.apply(this,arguments);const e=this;const t={levels_frag:"IN vec2 texCoord;\nUNI sampler2D tex;\nUNI float inMin;\nUNI float inMax;\nUNI float midPoint;\nUNI float outMax;\nUNI float outMin;\n\nvoid main()\n{\n    vec3 base=texture(tex,texCoord).rgb;\n    vec3 inputRange = min(max(base - vec3(inMin), vec3(0.0)) / (vec3(inMax) - vec3(inMin)), vec3(outMax));\n\n    inputRange = pow(inputRange, vec3(1.0 / (1.5 - midPoint)));\n\n    outColor.a=1.0;\n    outColor.rgb= mix(vec3(outMin), vec3(1.0), inputRange);\n}"};let n=e.inTrigger("Render");let a=e.inValueSlider("In Min",0);let r=e.inValueSlider("Midpoint",.5);let i=e.inValueSlider("In Max",1);let s=e.inValueSlider("Out Min",0);let o=e.inValueSlider("Out Max",1);let l=e.addOutPort(new CABLES.Port(e,"Next",CABLES.OP_PORT_TYPE_FUNCTION));let u=e.patch.cgl;let m=new CGL.Shader(u,e.name);let f=new CGL.Uniform(m,"f","inMin",a);let c=new CGL.Uniform(m,"f","midPoint",r);let h=new CGL.Uniform(m,"f","inMax",i);let d=new CGL.Uniform(m,"f","outMin",s);let g=new CGL.Uniform(m,"f","outMax",o);m.setSource(m.getDefaultVertexShader(),t.levels_frag);let p=new CGL.Uniform(m,"t","tex",0);n.onTriggered=function(){if(!CGL.TextureEffect.checkOpInEffect(e))return;u.pushShader(m);u.currentTextureEffect.bind();u.setTexture(0,u.currentTextureEffect.getCurrentSourceTexture().tex);u.currentTextureEffect.finish();u.popShader();l.trigger()}};Ops.Gl.TextureEffects.Levels.prototype=new CABLES.Op;CABLES.OPS["42ad6bbe-df17-48c7-89dd-bd7022113897"]={f:Ops.Gl.TextureEffects.Levels,objName:"Ops.Gl.TextureEffects.Levels"};Ops.Math.Multiply=function(){CABLES.Op.apply(this,arguments);const e=this;const t={};const n=e.inValueFloat("number1",1);const a=e.inValueFloat("number2",2);const r=e.outValue("result");n.onChange=a.onChange=i;i();function i(){const e=n.get();const t=a.get();r.set(e*t)}};Ops.Math.Multiply.prototype=new CABLES.Op;CABLES.OPS["1bbdae06-fbb2-489b-9bcc-36c9d65bd441"]={f:Ops.Math.Multiply,objName:"Ops.Math.Multiply"};Ops.Gl.TextureEffects.Gradient=function(){CABLES.Op.apply(this,arguments);const e=this;const t={gradient_frag:"IN vec2 texCoord;\nUNI float amount;\nUNI float pos;\nUNI float width;\n\nUNI vec3 colA;\nUNI vec3 colB;\nUNI vec3 colC;\nUNI sampler2D tex;\n\n{{CGL.BLENDMODES}}\n\nvoid main()\n{\n    vec4 base=texture(tex,texCoord);\n    vec4 col;\n    float ax=texCoord.x;\n\n    #ifdef GRAD_Y\n        ax=texCoord.y;\n    #endif\n    #ifdef GRAD_XY\n        ax=(texCoord.x+texCoord.y)/2.0;\n    #endif\n    #ifdef GRAD_RADIAL\n        ax=distance(texCoord,vec2(0.5,0.5))*2.0;\n    #endif\n\n    ax=((ax-0.5)*width)+0.5;\n\n    // ax-=0.03;\n\n    #ifndef GRAD_SMOOTHSTEP\n        if(ax<=pos) col = vec4(mix(colA, colB, ax*1.0/pos),1.0);\n        else col = vec4(mix(colB, colC, min(1.0,(ax-pos)*1.0/(1.0-pos))),1.0);\n    #endif\n\n    #ifdef GRAD_SMOOTHSTEP\n        if(ax<=pos) col = vec4(mix(colA, colB, smoothstep(0.0,1.0,ax*1.0/pos)),1.0);\n        else col = vec4(mix(colB, colC, smoothstep(0.0,1.0,min(1.0,(ax-pos)*1.0/(1.0-pos)))),1.0);\n    #endif\n\n    outColor=cgl_blend(base,col,amount);\n}"};const n=e.inTrigger("Render");const a=CGL.TextureEffect.AddBlendSelect(e,"Blend Mode","normal");const r=e.inValueSlider("Amount",1);const i=e.inValue("Width",1);const s=e.inSwitch("Type",["X","Y","XY","Radial"],"X");const o=e.inValueSlider("Pos",.5);const l=e.inValueBool("Smoothstep",true);const u=e.inValueSlider("r",Math.random());const m=e.inValueSlider("g",Math.random());const f=e.inValueSlider("b",Math.random());u.setUiAttribs({colorPick:true});const c=e.inValueSlider("r2",Math.random());const h=e.inValueSlider("g2",Math.random());const d=e.inValueSlider("b2",Math.random());c.setUiAttribs({colorPick:true});const g=e.inValueSlider("r3",Math.random());const p=e.inValueSlider("g3",Math.random());const v=e.inValueSlider("b3",Math.random());g.setUiAttribs({colorPick:true});l.onChange=w;e.setPortGroup("Blending",[a,r]);e.setPortGroup("Color A",[u,m,f]);e.setPortGroup("Color B",[c,h,d]);e.setPortGroup("Color C",[g,p,v]);const x=e.inTriggerButton("Randomize");const b=e.outTrigger("Next");const _=e.patch.cgl;const O=new CGL.Shader(_,"gradient");O.setSource(O.getDefaultVertexShader(),t.gradient_frag);const C=new CGL.Uniform(O,"f","amount",r);const T=new CGL.Uniform(O,"f","pos",o);const A=new CGL.Uniform(O,"f","width",i);const S=new CGL.Uniform(O,"t","tex",0);let M,E,y;c.onChange=h.onChange=d.onChange=I;g.onChange=p.onChange=v.onChange=P;u.onChange=m.onChange=f.onChange=L;L();I();P();w();function w(){if(l.get())O.define("GRAD_SMOOTHSTEP");else O.removeDefine("GRAD_SMOOTHSTEP")}s.onChange=function(){O.removeDefine("GRAD_X");O.removeDefine("GRAD_Y");O.removeDefine("GRAD_XY");O.removeDefine("GRAD_RADIAL");if(s.get()=="XY")O.define("GRAD_XY");if(s.get()=="X")O.define("GRAD_X");if(s.get()=="Y")O.define("GRAD_Y");if(s.get()=="Radial")O.define("GRAD_RADIAL")};CGL.TextureEffect.setupBlending(e,O,a,r);x.onTriggered=function(){u.set(Math.random());m.set(Math.random());f.set(Math.random());c.set(Math.random());h.set(Math.random());d.set(Math.random());g.set(Math.random());p.set(Math.random());v.set(Math.random())};function L(){const e=[u.get(),m.get(),f.get()];if(!y)y=new CGL.Uniform(O,"3f","colA",e);else y.setValue(e)}function I(){const e=[c.get(),h.get(),d.get()];if(!E)E=new CGL.Uniform(O,"3f","colB",e);else E.setValue(e)}function P(){const e=[g.get(),p.get(),v.get()];if(!M)M=new CGL.Uniform(O,"3f","colC",e);else M.setValue(e)}n.onTriggered=function(){if(!CGL.TextureEffect.checkOpInEffect(e))return;_.pushShader(O);_.currentTextureEffect.bind();_.setTexture(0,_.currentTextureEffect.getCurrentSourceTexture().tex);_.currentTextureEffect.finish();_.popShader();b.trigger()}};Ops.Gl.TextureEffects.Gradient.prototype=new CABLES.Op;CABLES.OPS["5ada9bd8-227a-4a1f-87ad-0f879c7aa84d"]={f:Ops.Gl.TextureEffects.Gradient,objName:"Ops.Gl.TextureEffects.Gradient"};Ops.Gl.Matrix.Transform=function(){CABLES.Op.apply(this,arguments);const t=this;const e={};const n=t.inTrigger("render"),a=t.inValue("posX",0),r=t.inValue("posY",0),i=t.inValue("posZ",0),s=t.inValue("scale",1),o=t.inValue("rotX",0),l=t.inValue("rotY",0),u=t.inValue("rotZ",0),m=t.outTrigger("trigger");t.setPortGroup("Rotation",[o,l,u]);t.setPortGroup("Position",[a,r,i]);t.setPortGroup("Scale",[s]);t.setUiAxisPorts(a,r,i);const f=t.patch.cgl;const c=vec3.create();const h=vec3.create();const d=mat4.create();mat4.identity(d);let g=false,p=false,v=true,x=true,b=true;o.onChange=l.onChange=u.onChange=S;a.onChange=r.onChange=i.onChange=T;s.onChange=A;n.onTriggered=function(){let e=false;if(v){O();e=true}if(x){C();e=true}if(b)e=true;if(e)_();f.pushModelMatrix();mat4.multiply(f.mMatrix,f.mMatrix,d);m.trigger();f.popModelMatrix();if(CABLES.UI&&CABLES.UI.showCanvasTransforms)gui.setTransform(t.id,a.get(),r.get(),i.get());if(t.isCurrentUiOp())gui.setTransformGizmo({posX:a,posY:r,posZ:i})};t.transform3d=function(){return{pos:[a,r,i]}};function _(){mat4.identity(d);if(p)mat4.translate(d,d,c);if(o.get()!==0)mat4.rotateX(d,d,o.get()*CGL.DEG2RAD);if(l.get()!==0)mat4.rotateY(d,d,l.get()*CGL.DEG2RAD);if(u.get()!==0)mat4.rotateZ(d,d,u.get()*CGL.DEG2RAD);if(g)mat4.scale(d,d,h);b=false}function O(){p=false;if(a.get()!==0||r.get()!==0||i.get()!==0)p=true;vec3.set(c,a.get(),r.get(),i.get());v=false}function C(){g=true;vec3.set(h,s.get(),s.get(),s.get());x=false}function T(){v=true}function A(){x=true}function S(){b=true}_()};Ops.Gl.Matrix.Transform.prototype=new CABLES.Op;CABLES.OPS["650baeb1-db2d-4781-9af6-ab4e9d4277be"]={f:Ops.Gl.Matrix.Transform,objName:"Ops.Gl.Matrix.Transform"};Ops.Value.Number=function(){CABLES.Op.apply(this,arguments);const e=this;const t={};const n=e.inValueFloat("value");const a=e.outValue("result");n.onChange=r;function r(){a.set(Number(n.get()))}};Ops.Value.Number.prototype=new CABLES.Op;CABLES.OPS["8fb2bb5d-665a-4d0a-8079-12710ae453be"]={f:Ops.Value.Number,objName:"Ops.Value.Number"};Ops.Gl.TextureEffects.Desaturate=function(){CABLES.Op.apply(this,arguments);const e=this;const t={desaturate_frag:"\nIN vec2 texCoord;\nUNI sampler2D tex;\nUNI float amount;\n\n#ifdef MASK\n    UNI sampler2D mask;\n#endif\n\nvec3 desaturate(vec3 color, float amount)\n{\n   vec3 gray = vec3(dot(vec3(0.2126,0.7152,0.0722), color));\n   return vec3(mix(color, gray, amount));\n}\n\nvoid main()\n{\n    vec4 col=texture(tex,texCoord);\n\n    float am=amount;\n    #ifdef MASK\n        am*=1.0-texture(mask,texCoord).r;\n        #ifdef INVERTMASK\n        am=1.0-am;\n        #endif\n    #endif\n\n    col.rgb=desaturate(col.rgb,am);\n    outColor= col;\n}"};const n=e.inTrigger("render");const a=e.outTrigger("trigger");const r=e.inValueSlider("amount",1);const i=e.inTexture("Mask");const s=e.inValueBool("Invert Mask");const o=e.patch.cgl;const l=new CGL.Shader(o,e.name);l.setSource(l.getDefaultVertexShader(),t.desaturate_frag);let u=new CGL.Uniform(l,"t","tex",0);let m=new CGL.Uniform(l,"t","mask",1);let f=new CGL.Uniform(l,"f","amount",r);s.onChange=function(){if(s.get())l.define("INVERTMASK");else l.removeDefine("INVERTMASK")};i.onChange=function(){if(i.get())l.define("MASK");else l.removeDefine("MASK")};n.onTriggered=function(){if(!CGL.TextureEffect.checkOpInEffect(e))return;o.pushShader(l);o.currentTextureEffect.bind();o.setTexture(0,o.currentTextureEffect.getCurrentSourceTexture().tex);if(i.get())o.setTexture(1,i.get().tex);o.currentTextureEffect.finish();o.popShader();a.trigger()}};Ops.Gl.TextureEffects.Desaturate.prototype=new CABLES.Op;CABLES.OPS["340efbd5-be53-4bd5-92ad-8f38d8eeecf1"]={f:Ops.Gl.TextureEffects.Desaturate,objName:"Ops.Gl.TextureEffects.Desaturate"};Ops.Gl.TextureEffects.Vibrance=function(){CABLES.Op.apply(this,arguments);const e=this;const t={vibrance_frag:"IN vec2 texCoord;\nUNI sampler2D tex;\nUNI float amount;\n\nconst vec4 lumcoeff = vec4(0.299,0.587,0.114, 0.);\n\nvoid main()\n{\n   vec4 col=vec4(1.0,0.0,0.0,1.0);\n   col=texture(tex,texCoord);\n\n   float luma = dot(col, lumcoeff);\n   vec4 mask = (col - vec4(luma));\n   mask = clamp(mask, 0.0, 1.0);\n   float lumaMask = dot(lumcoeff, mask);\n   lumaMask = 1.0 - lumaMask;\n   vec4 vibrance = mix(vec4(luma), col, 1.0 + amount * lumaMask);\n   outColor= vibrance;\n}"};const n=e.inTrigger("Render");const a=e.outTrigger("Trigger");const r=e.inValue("amount",2);const i=e.patch.cgl;const s=new CGL.Shader(i,e.name);s.setSource(s.getDefaultVertexShader(),t.vibrance_frag);const o=new CGL.Uniform(s,"t","tex",0);const l=new CGL.Uniform(s,"f","amount",r);n.onTriggered=function(){if(!CGL.TextureEffect.checkOpInEffect(e))return;i.pushShader(s);i.currentTextureEffect.bind();i.setTexture(0,i.currentTextureEffect.getCurrentSourceTexture().tex);i.currentTextureEffect.finish();i.popShader();a.trigger()}};Ops.Gl.TextureEffects.Vibrance.prototype=new CABLES.Op;CABLES.OPS["9c71c980-e439-4397-9c2b-c2ae085eaed9"]={f:Ops.Gl.TextureEffects.Vibrance,objName:"Ops.Gl.TextureEffects.Vibrance"};Ops.Gl.TextureEffects.Noise.Noise=function(){CABLES.Op.apply(this,arguments);const e=this;const t={noise_frag:"IN vec2 texCoord;\nUNI sampler2D tex;\nUNI float amount;\nUNI float time;\n\n{{CGL.BLENDMODES}}\n{{MODULES_HEAD}}\n\n{{CGL.RANDOM_TEX}}\n\nvoid main()\n{\n    vec4 rnd;\n\n    #ifndef RGB\n        float r=cgl_random(texCoord.xy+vec2(time));\n        rnd=vec4( r,r,r,1.0 );\n    #endif\n\n    #ifdef RGB\n        rnd=vec4(cgl_random3(texCoord.xy+vec2(time)),1.0);\n    #endif\n\n    vec4 base=texture(tex,texCoord);\n    vec4 col=vec4( _blend(base.rgb,rnd.rgb) ,1.0);\n\n    outColor=vec4( mix( col.rgb, base.rgb ,1.0-base.a*amount),1.0);\n}"};const n=e.inTrigger("Render"),a=CGL.TextureEffect.AddBlendSelect(e,"Blend Mode","normal"),r=e.inValueSlider("Amount",1),i=e.inValueBool("Animated",true),s=e.inValueBool("RGB",false),o=e.outTrigger("Next");const l=e.patch.cgl,u=new CGL.Shader(l,e.name),m=new CGL.Uniform(u,"f","amount",r),f=new CGL.Uniform(u,"f","time",1),c=new CGL.Uniform(u,"t","tex",0);u.setSource(u.getDefaultVertexShader(),t.noise_frag);CGL.TextureEffect.setupBlending(e,u,a,r);e.toWorkPortsNeedToBeLinked(n);s.onChange=function(){if(s.get())u.define("RGB");else u.removeDefine("RGB")};u.bindTextures=function(){l.setTexture(0,l.currentTextureEffect.getCurrentSourceTexture().tex)};n.onTriggered=function(){if(!CGL.TextureEffect.checkOpInEffect(e))return;if(i.get())f.setValue(e.patch.freeTimer.get()/1e3%100);else f.setValue(0);l.pushShader(u);l.currentTextureEffect.bind();l.currentTextureEffect.finish();l.popShader();o.trigger()}};Ops.Gl.TextureEffects.Noise.Noise.prototype=new CABLES.Op;CABLES.OPS["81253441-cc73-42fa-b903-6d23806873d9"]={f:Ops.Gl.TextureEffects.Noise.Noise,objName:"Ops.Gl.TextureEffects.Noise.Noise"};Ops.Gl.Meshes.TextMesh_v2=function(){CABLES.Op.apply(this,arguments);const t=this;const e={textmesh_frag:"UNI sampler2D tex;\n#ifdef DO_MULTEX\n    UNI sampler2D texMul;\n#endif\n#ifdef DO_MULTEX_MASK\n    UNI sampler2D texMulMask;\n#endif\nIN vec2 texCoord;\nIN vec2 texPos;\nUNI float r;\nUNI float g;\nUNI float b;\nUNI float a;\n\nvoid main()\n{\n   vec4 col=texture(tex,texCoord);\n   col.a=col.r;\n   col.r*=r;\n   col.g*=g;\n   col.b*=b;\n   col*=a;\n   if(col.a==0.0)discard;\n\n\n    #ifdef DO_MULTEX\n        col*=texture(texMul,texPos);\n    #endif\n\n    #ifdef DO_MULTEX_MASK\n        col*=texture(texMulMask,texPos).r;\n    #endif\n\n\n\n   outColor=col;\n}",textmesh_vert:"UNI sampler2D tex;\nUNI mat4 projMatrix;\nUNI mat4 modelMatrix;\nUNI mat4 viewMatrix;\nUNI float scale;\nIN vec3 vPosition;\nIN vec2 attrTexCoord;\nIN mat4 instMat;\nIN vec2 attrTexOffsets;\nIN vec2 attrTexSize;\nIN vec2 attrTexPos;\nOUT vec2 texPos;\n\nOUT vec2 texCoord;\n\nvoid main()\n{\n   texCoord=(attrTexCoord*(attrTexSize)) + attrTexOffsets;\n   mat4 instMVMat=instMat;\n   instMVMat[3][0]*=scale;\n\n   texPos=attrTexPos;\n\n   vec4 vert=vec4( vPosition.x*(attrTexSize.x/attrTexSize.y)*scale,vPosition.y*scale,vPosition.z*scale, 1. );\n\n   mat4 mvMatrix=viewMatrix * modelMatrix * instMVMat;\n\n   #ifndef BILLBOARD\n       gl_Position = projMatrix * mvMatrix * vert;\n   #endif\n}\n"};const n=t.inTrigger("Render"),x=t.inString("Text","cables"),a=t.inValueFloat("Scale",1),f=t.inString("Font","Arial"),b=t.inValueSelect("align",["left","center","right"],"center"),r=t.inValueSelect("vertical align",["Top","Middle","Bottom"],"Middle"),_=t.inValueFloat("Line Height",1),O=t.inValueFloat("Letter Spacing"),o=t.inSwitch("filter",["nearest","linear","mipmap"],"mipmap"),l=t.inSwitch("Anisotropic",[0,1,2,4,8,16],0),i=t.inTexture("Texture Color"),s=t.inTexture("Texture Mask"),u=t.outTrigger("Next"),C=t.outTexture("texture"),T=t.outNumber("Total Lines",0),A=t.outNumber("Width",0),m=t.outValue("Font Available",0);const S=t.patch.cgl;t.setPortGroup("Masking",[i,s]);const c=1024;let h=false;let d=true;b.onChange=x.onChange=_.onChange=g;function g(){d=true}let p=null;CABLES.OpTextureMeshCanvas={};let v=0;const M=null;let E=null;let y=true;let w=true;l.onChange=o.onChange=()=>{I().texture=null;w=true};s.onChange=i.onChange=function(){P.toggleDefine("DO_MULTEX",i.get());P.toggleDefine("DO_MULTEX_MASK",s.get())};C.set(null);f.onChange=function(){w=true;y=true;L()};t.patch.on("fontLoaded",e=>{if(e==f.get()){w=true;y=true}});function L(){const e=h;try{h=document.fonts.check('20px "'+f.get()+'"')}catch(e){t.error(e)}if(!e&&h){m.set(true);w=true;y=true}if(!h)setTimeout(L,250)}r.onChange=function(){if(r.get()=="Middle")v=0;else if(r.get()=="Top")v=1;else if(r.get()=="Bottom")v=2};function I(){p=""+f.get();if(CABLES.OpTextureMeshCanvas.hasOwnProperty(p))return CABLES.OpTextureMeshCanvas[p];const e=document.createElement("canvas");e.dataset.font=f.get();e.id="texturetext_"+CABLES.generateUUID();e.style.display="none";const t=document.getElementsByTagName("body")[0];t.appendChild(e);const n=e.getContext("2d");CABLES.OpTextureMeshCanvas[p]={ctx:n,canvas:e,chars:{},characters:"",fontSize:320};return CABLES.OpTextureMeshCanvas[p]}t.onDelete=function(){if(p&&CABLES.OpTextureMeshCanvas[p])CABLES.OpTextureMeshCanvas[p].canvas.remove()};var P=new CGL.Shader(S,"TextMesh");P.setSource(e.textmesh_vert,e.textmesh_frag);const N=new CGL.Uniform(P,"t","tex",0);const j=new CGL.Uniform(P,"t","texMul",1);const G=new CGL.Uniform(P,"t","texMulMask",2);const R=new CGL.Uniform(P,"f","scale",a);const D=t.inValueSlider("r",1),B=t.inValueSlider("g",1),U=t.inValueSlider("b",1),V=t.inValueSlider("a",1),k=new CGL.Uniform(P,"f","r",D),z=new CGL.Uniform(P,"f","g",B),F=new CGL.Uniform(P,"f","b",U),X=new CGL.Uniform(P,"f","a",V);D.setUiAttribs({colorPick:true});t.setPortGroup("Display",[a,f]);t.setPortGroup("Alignment",[b,r]);t.setPortGroup("Color",[D,B,U,V]);let H=0;const Y=vec3.create();let W=-1;let Z=false;n.onTriggered=function(){if(d){K();d=false}const e=I();if(e.lastChange!=W){y=true;W=e.lastChange}if(w)J();if(y)K();if(E&&E.numInstances>0){S.pushBlendMode(CGL.BLEND_NORMAL,true);S.setShader(P);S.setTexture(0,C.get().tex);const t=i.get();if(t)S.setTexture(1,t.tex);const n=s.get();if(n)S.setTexture(2,n.tex);if(v===2)vec3.set(Y,0,H,0);else if(v===1)vec3.set(Y,0,0,0);else if(v===0)vec3.set(Y,0,H/2,0);Y[1]-=_.get();S.pushModelMatrix();mat4.translate(S.mMatrix,S.mMatrix,Y);if(!Z)E.render(S.getShader());S.popModelMatrix();S.setTexture(0,null);S.setPreviousShader();S.popBlendMode()}u.trigger()};O.onChange=function(){y=true};function K(){const e=String(x.get()+"");if(!C.get())return;const r=I();if(!r.geom){r.geom=new CGL.Geometry("textmesh");r.geom.vertices=[1,1,0,0,1,0,1,0,0,0,0,0];r.geom.texCoords=new Float32Array([1,1,0,1,1,0,0,0]);r.geom.verticesIndices=[0,1,2,2,1,3]}if(!E)E=new CGL.Mesh(S,r.geom);const i=e.split("\n");T.set(i.length);const s=[];const o=[];const l=[];const u=[];let m=0;w=false;const f=mat4.create();let c=0;for(let a=0;a<i.length;a++){const d=i[a];const g=d.length;let e=0;let t=0;let n=0;for(var h=0;h<g;h++){const p=d.substring(h,h+1);const v=r.chars[String(p)];if(v){n+=v.texCoordWidth/v.texCoordHeight;n+=O.get()}}n-=O.get();H=0;if(b.get()=="left")t=0;else if(b.get()=="right")t=n;else if(b.get()=="center")t=n/2;H=(a+1)*_.get();for(var h=0;h<g;h++){const p=d.substring(h,h+1);const v=r.chars[String(p)];if(!v){w=true;return}else{u.push(e/n*.99+.005,(1-a/(i.length-1))*.99+.005);o.push(v.texCoordX,1-v.texCoordY-v.texCoordHeight);l.push(v.texCoordWidth,v.texCoordHeight);mat4.identity(f);mat4.translate(f,f,[e-t,0-a*_.get(),0]);e+=v.texCoordWidth/v.texCoordHeight+O.get();c=Math.max(c,e-t);s.push(Array.prototype.slice.call(f));m++}}}const t=[].concat.apply([],s);Z=false;if(t.length==0)Z=true;E.numInstances=t.length/16;if(E.numInstances==0){Z=true;return}A.set(c*a.get());E.setAttribute("instMat",new Float32Array(t),16,{instanced:true});E.setAttribute("attrTexOffsets",new Float32Array(o),2,{instanced:true});E.setAttribute("attrTexSize",new Float32Array(l),2,{instanced:true});E.setAttribute("attrTexPos",new Float32Array(u),2,{instanced:true});y=false;if(w)J()}function q(e,t){const n=I();if(!t)n.chars={};const a=n.ctx;a.font=e+"px "+f.get();a.textAlign="left";var r=0,i=0;let s=0;const o=e*1.4;const l={fits:true};for(var i=0;i<n.characters.length;i++){const u=String(n.characters.substring(i,i+1));const m=a.measureText(u).width;if(s+m>=c){r+=o+2;s=0}if(!t){n.chars[u]={str:u,texCoordX:s/c,texCoordY:r/c,texCoordWidth:m/c,texCoordHeight:o/c};a.fillText(u,s,r+e)}s+=m+12}if(r>c-o){l.fits=false}l.spaceLeft=c-r;return l}function J(){let e=CGL.Texture.FILTER_LINEAR;if(o.get()=="nearest")e=CGL.Texture.FILTER_NEAREST;if(o.get()=="mipmap")e=CGL.Texture.FILTER_MIPMAP;const t=I();let n=String(x.get());if(n==null||n==undefined)n="";for(let e=0;e<n.length;e++){const s=n.substring(e,e+1);if(t.characters.indexOf(s)==-1){t.characters+=s;w=true}}const a=t.ctx;t.canvas.width=t.canvas.height=c;if(!t.texture)t.texture=CGL.Texture.createFromImage(S,t.canvas,{filter:e,anisotropic:parseFloat(l.get())});t.texture.setSize(c,c);a.fillStyle="transparent";a.clearRect(0,0,c,c);a.fillStyle="rgba(255,255,255,255)";let r=t.fontSize+40;let i=q(r,true);while(!i.fits){r-=5;i=q(r,true)}q(r,false);a.restore();t.texture.initTexture(t.canvas,e);t.texture.unpackAlpha=true;C.set(t.texture);t.lastChange=CABLES.now();y=true;w=false}};Ops.Gl.Meshes.TextMesh_v2.prototype=new CABLES.Op;CABLES.OPS["2390f6b3-2122-412e-8c8d-5c2f574e8bd1"]={f:Ops.Gl.Meshes.TextMesh_v2,objName:"Ops.Gl.Meshes.TextMesh_v2"};Ops.Gl.TextureEffects.Plasma=function(){CABLES.Op.apply(this,arguments);const e=this;const t={plasma_frag:"#define PI 3.1415926535897932384626433832795\n\nUNI float time;\nUNI float w;\nUNI float h;\nUNI float mul;\nUNI float amount;\nUNI sampler2D tex;\nUNI float offsetX;\nUNI float offsetY;\n\nIN vec2 texCoord;\n\n{{CGL.BLENDMODES}}\n\nvoid main() {\n   vec2 size=vec2(w,h);\n    float v = 0.0;\n    vec2 c = texCoord * size - size/2.0;\n\n    c.x+=offsetX;\n    c.y+=offsetY;\n\n    v += sin((c.x+time));\n    v += sin((c.y+time)/2.0);\n    v += sin((c.x+c.y+time)/2.0);\n    c += size/2.0 * vec2(sin(time/3.0), cos(time/2.0));\n\n    v += sin(sqrt(c.x*c.x+c.y*c.y+1.0)+time);\n    v = v/2.0;\n\n    vec3 newColor = vec3(sin(PI*v*mul/4.0), sin(PI*v*mul), cos(PI*v*mul))*.5 + .5;\n    vec4 base=texture(tex,texCoord);\n\n    #ifndef GREY\n       vec4 col=vec4( _blend(base.rgb,newColor) ,1.0);\n    #endif\n    #ifdef GREY\n    // .endl()+'       vec4 col=vec4( _blend(base.rgb,vec3((newColor.r+newColor.g+newColor.b)/3.0)) ,1.0);'\n           vec4 col=vec4( _blend(base.rgb,vec3(newColor.g)) ,1.0);\n    #endif\n\n    outColor=cgl_blend(base,col,amount);\n\n}"};const n=e.inTrigger("render"),a=CGL.TextureEffect.AddBlendSelect(e,"Blend Mode","normal"),r=e.inValueSlider("Amount",1),i=e.inValue("Width",20),s=e.inValue("Height",20),o=e.inValue("Mul",1),l=e.inValue("offset X",0),u=e.inValue("offset Y",0),m=e.inValue("Time",1),f=e.inValueBool("Greyscale",true),c=e.outTrigger("trigger");const h=e.patch.cgl;const d=new CGL.Shader(h,e.name);d.setSource(d.getDefaultVertexShader(),t.plasma_frag);d.define("GREY");const g=new CGL.Uniform(d,"f","w",i),p=new CGL.Uniform(d,"f","h",s),v=new CGL.Uniform(d,"f","time",m),x=new CGL.Uniform(d,"f","mul",o),b=new CGL.Uniform(d,"f","offsetX",l),_=new CGL.Uniform(d,"f","offsetY",u),O=new CGL.Uniform(d,"t","tex",0),C=new CGL.Uniform(d,"f","amount",r);f.onChange=function(){if(f.get())d.define("GREY");else d.removeDefine("GREY")};CGL.TextureEffect.setupBlending(e,d,a,r);n.onTriggered=function(){if(!CGL.TextureEffect.checkOpInEffect(e))return;h.pushShader(d);h.currentTextureEffect.bind();h.setTexture(0,h.currentTextureEffect.getCurrentSourceTexture().tex);h.currentTextureEffect.finish();h.popShader();c.trigger()}};Ops.Gl.TextureEffects.Plasma.prototype=new CABLES.Op;CABLES.OPS["6c82c11d-1931-43b1-8e6c-5d20cb1a0d87"]={f:Ops.Gl.TextureEffects.Plasma,objName:"Ops.Gl.TextureEffects.Plasma"};Ops.Gl.TextureEffects.ImageCompose=function(){CABLES.Op.apply(this,arguments);const e=this;const t={};const n=e.inTrigger("render");const a=e.inBool("use viewport size");const r=e.inValueInt("width");const i=e.inValueInt("height");const s=e.inSwitch("filter",["nearest","linear","mipmap"],"linear");const o=e.inValueSelect("wrap",["clamp to edge","repeat","mirrored repeat"]);const l=e.inValueBool("HDR");const u=e.outTrigger("trigger");const m=e.outTexture("texture_out");const f=e.inValueSlider("Background Alpha",0);const c=e.outValue("Aspect Ratio");e.setPortGroup("Texture Size",[a,r,i]);e.setPortGroup("Texture Settings",[o,s,l]);const h=e.patch.cgl;m.set(CGL.Texture.getEmptyTexture(h));let d=null;let g=null;let p=8,v=8;const x=[0,0,0,0];let b=true;const _="".endl()+"uniform float a;".endl()+"void main()".endl()+"{".endl()+"   outColor= vec4(0.0,0.0,0.0,a);".endl()+"}";const O=new CGL.Shader(h,"imgcompose bg");O.setSource(O.getDefaultVertexShader(),_);const C=new CGL.Uniform(O,"f","a",f);let T=CGL.Texture.FILTER_LINEAR;let A=CGL.Texture.WRAP_CLAMP_TO_EDGE;function S(){if(d)d.delete();if(g)g.delete();d=new CGL.TextureEffect(h,{isFloatingPointTexture:l.get()});g=new CGL.Texture(h,{name:"image compose",isFloatingPointTexture:l.get(),filter:T,wrap:A,width:Math.ceil(r.get()),height:Math.ceil(i.get())});d.setSourceTexture(g);m.set(CGL.Texture.getEmptyTexture(h));b=false}l.onChange=function(){b=true};function M(){if(!d)S();if(a.get()){p=h.getViewPort()[2];v=h.getViewPort()[3]}else{p=Math.ceil(r.get());v=Math.ceil(i.get())}if((p!=g.width||v!=g.height)&&(p!==0&&v!==0)){i.set(v);r.set(p);g.setSize(p,v);c.set(p/v);d.setSourceTexture(g);m.set(CGL.Texture.getEmptyTexture(h));m.set(g)}if(m.get()&&T!=CGL.Texture.FILTER_NEAREST){if(!m.get().isPowerOfTwo())e.setUiError("hintnpot","texture dimensions not power of two! - texture filtering when scaling will not work on ios devices.",0);else e.setUiError("hintnpot",null,0)}else e.setUiError("hintnpot",null,0)}function E(){if(a.get()){r.setUiAttribs({greyout:true});i.setUiAttribs({greyout:true})}else{r.setUiAttribs({greyout:false});i.setUiAttribs({greyout:false})}}a.onChange=function(){E();if(a.get()){r.onChange=null;i.onChange=null}else{r.onChange=M;i.onChange=M}M()};e.preRender=function(){y();O.bind()};var y=function(){if(!d||b){S()}const e=h.getViewPort();x[0]=e[0];x[1]=e[1];x[2]=e[2];x[3]=e[3];h.gl.blendFunc(h.gl.SRC_ALPHA,h.gl.ONE_MINUS_SRC_ALPHA);M();h.currentTextureEffect=d;d.setSourceTexture(g);d.startEffect();h.pushShader(O);h.currentTextureEffect.bind();h.setTexture(0,h.currentTextureEffect.getCurrentSourceTexture().tex);h.currentTextureEffect.finish();h.popShader();u.trigger();m.set(d.getCurrentSourceTexture());d.endEffect();h.setViewPort(x[0],x[1],x[2],x[3]);h.gl.blendFunc(h.gl.SRC_ALPHA,h.gl.ONE_MINUS_SRC_ALPHA);h.currentTextureEffect=null};function w(){if(o.get()=="repeat")A=CGL.Texture.WRAP_REPEAT;if(o.get()=="mirrored repeat")A=CGL.Texture.WRAP_MIRRORED_REPEAT;if(o.get()=="clamp to edge")A=CGL.Texture.WRAP_CLAMP_TO_EDGE;b=true;M()}o.set("repeat");o.onChange=w;function L(){if(s.get()=="nearest")T=CGL.Texture.FILTER_NEAREST;if(s.get()=="linear")T=CGL.Texture.FILTER_LINEAR;if(s.get()=="mipmap")T=CGL.Texture.FILTER_MIPMAP;b=true;M()}s.set("linear");s.onChange=L;a.set(true);n.onTriggered=y;e.preRender=y;r.set(640);i.set(360);L();w();E()};Ops.Gl.TextureEffects.ImageCompose.prototype=new CABLES.Op;CABLES.OPS["5c04608d-1e42-4e36-be00-1be4a81fc309"]={f:Ops.Gl.TextureEffects.ImageCompose,objName:"Ops.Gl.TextureEffects.ImageCompose"};Ops.Gl.Meshes.FullscreenRectangle=function(){CABLES.Op.apply(this,arguments);const e=this;const t={shader_frag:"UNI sampler2D tex;\nIN vec2 texCoord;\n\nvoid main()\n{\n   outColor= texture(tex,vec2(texCoord.x,(1.0-texCoord.y)));\n}\n",shader_vert:"{{MODULES_HEAD}}\n\nIN vec3 vPosition;\nUNI mat4 projMatrix;\nUNI mat4 mvMatrix;\n\nOUT vec2 texCoord;\nIN vec2 attrTexCoord;\n\nvoid main()\n{\n   vec4 pos=vec4(vPosition,  1.0);\n\n   texCoord=attrTexCoord;\n\n   gl_Position = projMatrix * mvMatrix * pos;\n}\n"};const n=e.inTrigger("render"),a=e.inValueBool("Center in Canvas"),r=e.inValueBool("Flip Y"),i=e.inValueBool("Flip X"),s=e.inTexture("Texture"),o=e.outTrigger("trigger");const l=e.patch.cgl;let u=null;let m=new CGL.Geometry("fullscreen rectangle");let f=0,c=0,h=0,d=0,g=0;a.onChange=C;i.onChange=O;r.onChange=O;const p=new CGL.Shader(l,"fullscreenrectangle");p.setModules(["MODULE_VERTEX_POSITION","MODULE_COLOR","MODULE_BEGIN_FRAG"]);p.setSource(t.shader_vert,t.shader_frag);p.fullscreenRectUniform=new CGL.Uniform(p,"t","tex",0);let v=false;let x=true;n.onTriggered=_;e.toWorkPortsNeedToBeLinked(n);s.onChange=function(){x=true};function b(){let e=s.get();if(e)v=true;else v=false}e.preRender=function(){b();{p.bind();if(u)u.render(p);_()}};function _(){if(l.getViewPort()[2]!=d||l.getViewPort()[3]!=g||!u)C();if(x)b();l.pushPMatrix();mat4.identity(l.pMatrix);mat4.ortho(l.pMatrix,0,d,g,0,-10,1e3);l.pushModelMatrix();mat4.identity(l.mMatrix);l.pushViewMatrix();mat4.identity(l.vMatrix);if(a.get()){let e=0;let t=0;if(d<l.canvasWidth)e=(l.canvasWidth-d)/2;if(g<l.canvasHeight)t=(l.canvasHeight-g)/2;l.setViewPort(e,t,d,g)}if(v){if(s.get()){l.setTexture(0,s.get().tex)}u.render(p)}else{u.render(l.getShader())}l.gl.clear(l.gl.DEPTH_BUFFER_BIT);l.popPMatrix();l.popModelMatrix();l.popViewMatrix();o.trigger()}function O(){u=null}function C(){const e=l.getViewPort();if(e[2]==d&&e[3]==g&&u)return;let t=0,n=0;d=e[2];g=e[3];m.vertices=new Float32Array([t+d,n+g,0,t,n+g,0,t+d,n,0,t,n,0]);let a=null;if(r.get())a=new Float32Array([1,0,0,0,1,1,0,1]);else a=new Float32Array([1,1,0,1,1,0,0,0]);if(i.get()){a[0]=0;a[2]=1;a[4]=0;a[6]=1}m.setTexCoords(a);m.verticesIndices=new Float32Array([2,1,0,3,1,2]);m.vertexNormals=new Float32Array([0,0,1,0,0,1,0,0,1,0,0,1]);m.tangents=new Float32Array([-1,0,0,-1,0,0,-1,0,0,-1,0,0]);m.biTangents==new Float32Array([0,-1,0,0,-1,0,0,-1,0,0,-1,0]);if(!u)u=new CGL.Mesh(l,m);else u.setGeom(m)}};Ops.Gl.Meshes.FullscreenRectangle.prototype=new CABLES.Op;CABLES.OPS["255bd15b-cc91-4a12-9b4e-53c710cbb282"]={f:Ops.Gl.Meshes.FullscreenRectangle,objName:"Ops.Gl.Meshes.FullscreenRectangle"};Ops.Gl.TextureEffects.Color=function(){CABLES.Op.apply(this,arguments);const e=this;const t={color_frag:"IN vec2 texCoord;\nUNI sampler2D tex;\nUNI float r;\nUNI float g;\nUNI float b;\nUNI float amount;\n\n#ifdef MASK\n    UNI sampler2D mask;\n#endif\n\n{{CGL.BLENDMODES}}\n\nvoid main()\n{\n    vec4 col=vec4(r,g,b,1.0);\n    vec4 base=texture(tex,texCoord);\n\n    float am=amount;\n    #ifdef MASK\n        float msk=texture(mask,texCoord).r;\n        #ifdef INVERTMASK\n            msk=1.0-msk;\n        #endif\n        am*=1.0-msk;\n    #endif\n\n    outColor= cgl_blend(base,col,am);\n    outColor.a*=base.a;\n\n}\n"};const n=e.inTrigger("render"),a=CGL.TextureEffect.AddBlendSelect(e,"Blend Mode","normal"),r=e.inValueSlider("Amount",1),i=e.inTexture("Mask"),s=e.inValueBool("Mask Invert"),o=e.inValueSlider("r",Math.random()),l=e.inValueSlider("g",Math.random()),u=e.inValueSlider("b",Math.random()),m=e.outTrigger("trigger");o.setUiAttribs({colorPick:true});e.setPortGroup("Color",[o,l,u]);const f=0;const c=e.patch.cgl;const h=new CGL.Shader(c,"textureeffect color");const d=t.color_frag||"";h.setSource(h.getDefaultVertexShader(),d);CGL.TextureEffect.setupBlending(e,h,a,r);const g=new CGL.Uniform(h,"t","tex",f),p=new CGL.Uniform(h,"t","mask",1),v=new CGL.Uniform(h,"f","r",o),x=new CGL.Uniform(h,"f","g",l),b=new CGL.Uniform(h,"f","b",u),_=new CGL.Uniform(h,"f","amount",r);i.onChange=function(){if(i.get())h.define("MASK");else h.removeDefine("MASK")};s.onChange=function(){if(s.get())h.define("INVERTMASK");else h.removeDefine("INVERTMASK")};n.onTriggered=function(){if(!CGL.TextureEffect.checkOpInEffect(e))return;c.pushShader(h);c.currentTextureEffect.bind();c.setTexture(f,c.currentTextureEffect.getCurrentSourceTexture().tex);if(i.get())c.setTexture(1,i.get().tex);c.currentTextureEffect.finish();c.popShader();m.trigger()}};Ops.Gl.TextureEffects.Color.prototype=new CABLES.Op;CABLES.OPS["c0acfc80-16f9-4f17-978d-bad650f3ed1c"]={f:Ops.Gl.TextureEffects.Color,objName:"Ops.Gl.TextureEffects.Color"};Ops.Devices.Mouse.Mouse_v2=function(){CABLES.Op.apply(this,arguments);const e=this;const t={};const n=e.inValueBool("Active",true),a=e.inValueBool("relative"),r=e.inValueBool("normalize"),i=e.inValueBool("flip y",true),s=e.inValueSelect("Area",["Canvas","Document","Parent Element"],"Canvas"),o=e.inBool("right click prevent default",true),l=e.inValueBool("Touch support",true),u=e.inValueBool("smooth"),m=e.inValueFloat("smoothSpeed",20),f=e.inValueFloat("multiply",1),c=e.outValue("x",0),h=e.outValue("y",0),d=e.outValueBool("button down"),g=e.outTrigger("click"),p=e.outTrigger("Button Up"),v=e.outTrigger("click right"),x=e.outValueBool("mouseOver"),b=e.outValue("button");e.setPortGroup("Behavior",[a,r,i,s,o,l]);e.setPortGroup("Smoothing",[u,m,f]);let _=0;const O=e.patch.cgl;let C=null;function T(n,a){if(r.get()){let e=O.canvas.width/O.pixelDensity;let t=O.canvas.height/O.pixelDensity;if(C==document.body){e=C.clientWidth/O.pixelDensity;t=C.clientHeight/O.pixelDensity}c.set(((n||0)/e*2-1)*f.get());h.set(((a||0)/t*2-1)*f.get())}else{c.set((n||0)*f.get());h.set((a||0)*f.get())}}u.onChange=function(){if(u.get())_=setInterval(G,5);else if(_)clearTimeout(_)};let A,S;let M=0,E=0;r.onChange=function(){y=0;w=0;T(y,w)};var y=O.canvas.width/2;var w=O.canvas.height/2;M=y;E=w;c.set(y);h.set(w);let L=0;let I=0;let P=0;let N=0;Z();s.onChange=Z;let j=0;function G(){j=m.get();if(j<=0)j=.01;const e=Math.abs(y-M);const t=Math.round(e/j,0);M=M<y?M+t:M-t;const n=Math.abs(w-E);const a=Math.round(n/j,0);E=E<w?E+a:E-a;T(M,E)}function R(e){d.set(false);x.set(true);j=m.get()}function D(e){b.set(e.which);d.set(true)}function B(e){b.set(0);d.set(false);p.trigger()}function U(e){v.trigger();if(o.get())e.preventDefault()}function V(e){g.trigger()}function k(e){L=0;I=0;j=100;x.set(false);d.set(false)}a.onChange=function(){P=0;N=0};function z(e){if(!a.get()){if(s.get()!="Document"){P=e.offsetX;N=e.offsetY}else{P=e.clientX;N=e.clientY}if(u.get()){y=P;if(i.get())w=C.clientHeight-N;else w=N}else{if(i.get())T(P,C.clientHeight-N);else T(P,N)}}else{if(L!=0&&I!=0){P=e.offsetX-L;N=e.offsetY-I}else{}L=e.offsetX;I=e.offsetY;y+=P;w+=N;if(w>460)w=460}}function F(e){x.set(true);z(e)}function X(e){if(event.touches&&event.touches.length>0)z(e.touches[0])}function H(e){d.set(true);if(e.touches&&e.touches.length>0)D(e.touches[0])}function Y(e){d.set(false);B()}l.onChange=function(){W();Z()};function W(){if(!C)return;C.removeEventListener("touchend",Y);C.removeEventListener("touchstart",H);C.removeEventListener("touchmove",X);C.removeEventListener("click",V);C.removeEventListener("mousemove",F);C.removeEventListener("mouseleave",k);C.removeEventListener("mousedown",D);C.removeEventListener("mouseup",B);C.removeEventListener("mouseenter",R);C.removeEventListener("contextmenu",U);C=null}function Z(){if(C||!n.get())W();if(!n.get())return;C=O.canvas;if(s.get()=="Document")C=document.body;if(s.get()=="Parent Element")C=O.canvas.parentElement;if(l.get()){C.addEventListener("touchend",Y);C.addEventListener("touchstart",H);C.addEventListener("touchmove",X)}C.addEventListener("mousemove",F);C.addEventListener("mouseleave",k);C.addEventListener("mousedown",D);C.addEventListener("mouseup",B);C.addEventListener("mouseenter",R);C.addEventListener("contextmenu",U);C.addEventListener("click",V)}n.onChange=function(){if(C)W();if(n.get())Z()};e.onDelete=function(){W()};Z()};Ops.Devices.Mouse.Mouse_v2.prototype=new CABLES.Op;CABLES.OPS["9fa3fc46-3147-4e3a-8ee8-a93ea9e8786e"]={f:Ops.Devices.Mouse.Mouse_v2,objName:"Ops.Devices.Mouse.Mouse_v2"};Ops.Math.MapRange=function(){CABLES.Op.apply(this,arguments);const e=this;const t={};const c=e.inValueFloat("value",0),h=e.inValueFloat("old min",0),d=e.inValueFloat("old max",1),g=e.inValueFloat("new min",-1),p=e.inValueFloat("new max",1),n=e.inValueSelect("Easing",["Linear","Smoothstep","Smootherstep"],"Linear"),v=e.outValue("result",0);e.setPortGroup("Input Range",[h,d]);e.setPortGroup("Output Range",[g,p]);let x=0;let b=0;c.onChange=h.onChange=d.onChange=g.onChange=p.onChange=a;a();n.onChange=function(){if(n.get()=="Smoothstep")x=1;else if(n.get()=="Smootherstep")x=2;else x=0};function a(){const e=g.get();const t=p.get();const n=h.get();const a=d.get();let r=c.get();if(r>=Math.max(a,n)){v.set(t);return}else if(r<=Math.min(a,n)){v.set(e);return}let i=false;const s=Math.min(n,a);const o=Math.max(n,a);if(s!=n)i=true;let l=false;const u=Math.min(e,t);const m=Math.max(e,t);if(u!=e)l=true;let f=0;if(i)f=(o-r)*(m-u)/(o-s);else f=(r-s)*(m-u)/(o-s);if(l)b=m-f;else b=f+u;if(x===0){v.set(b)}else if(x==1){r=Math.max(0,Math.min(1,(b-e)/(t-e)));v.set(e+r*r*(3-2*r)*(t-e))}else if(x==2){r=Math.max(0,Math.min(1,(b-e)/(t-e)));v.set(e+r*r*r*(r*(r*6-15)+10)*(t-e))}}};Ops.Math.MapRange.prototype=new CABLES.Op;CABLES.OPS["2617b407-60a0-4ff6-b4a7-18136cfa7817"]={f:Ops.Math.MapRange,objName:"Ops.Math.MapRange"};Ops.Gl.GLTF.GltfScene_v3=function(){CABLES.Op.apply(this,arguments);const b=this;const f={inc_camera_js:"const gltfCamera = class\n{\n    constructor(gltf, node)\n    {\n        this.node=node;\n        this.name=node.name;\n        // console.log(gltf);\n        this.config=gltf.json.cameras[node.camera];\n\n        this.pos = vec3.create();\n        this.quat = quat.create();\n        this.quatOr = quat.create();\n        this.vCenter = vec3.create();\n        this.vUp = vec3.create();\n        this.vMat = mat4.create();\n\n    }\n\n    updateAnim(time)\n    {\n        if (this.node && this.node._animTrans)\n        {\n\n            vec3.set(this.pos,\n                this.node._animTrans[0].getValue(time),\n                this.node._animTrans[1].getValue(time),\n                this.node._animTrans[2].getValue(time));\n\n            quat.set(this.quat,\n                this.node._animRot[0].getValue(time),\n                this.node._animRot[1].getValue(time),\n                this.node._animRot[2].getValue(time),\n                this.node._animRot[3].getValue(time));\n        }\n    }\n\n    start(time)\n    {\n        if (cgl.frameStore.shadowPass) return;\n\n        this.updateAnim(time);\n        const asp = cgl.getViewPort()[2] / cgl.getViewPort()[3];\n\n        cgl.pushPMatrix();\n        // mat4.perspective(\n        //     cgl.pMatrix,\n        //     this.config.perspective.yfov*0.5,\n        //     asp,\n        //     this.config.perspective.znear,\n        //     this.config.perspective.zfar);\n\n        cgl.pushViewMatrix();\n        // mat4.identity(cgl.vMatrix);\n\n        // if(this.node && this.node.parent)\n        // {\n        //     console.log(this.node.parent)\n            // vec3.add(this.pos,this.pos,this.node.parent._node.translation);\n            // vec3.sub(this.vCenter,this.vCenter,this.node.parent._node.translation);\n            // mat4.translate(cgl.vMatrix,cgl.vMatrix,\n            // [\n            //     -this.node.parent._node.translation[0],\n            //     -this.node.parent._node.translation[1],\n            //     -this.node.parent._node.translation[2]\n            // ])\n        // }\n\n\n\n        // vec3.set(this.vUp, 0, 1, 0);\n        // vec3.set(this.vCenter, 0, -1, 0);\n        // // vec3.set(this.vCenter, 0, 1, 0);\n        // vec3.transformQuat(this.vCenter, this.vCenter, this.quat);\n        // vec3.normalize(this.vCenter, this.vCenter);\n        // vec3.add(this.vCenter, this.vCenter, this.pos);\n\n\n        // mat4.lookAt(cgl.vMatrix, this.pos, this.vCenter, this.vUp);\n\n\n        let mv=mat4.create();\n        mat4.invert(mv,this.node.modelMatAbs());\n\n        // console.log(this.node.modelMatAbs());\n\n        this.vMat=mv;\n\n        mat4.identity(cgl.vMatrix);\n        // console.log(mv);\n        mat4.mul(cgl.vMatrix,cgl.vMatrix,mv);\n\n\n    }\n\n    end()\n    {\n        if (cgl.frameStore.shadowPass) return;\n        cgl.popPMatrix();\n        cgl.popViewMatrix();\n    }\n};\n\n",inc_gltf_js:'\nconst CHUNK_HEADER_SIZE = 8;\n\nconst Gltf = class\n{\n    constructor()\n    {\n        this.json = {};\n        this.accBuffers = [];\n        this.meshes = [];\n        this.nodes = [];\n        this.shaders = [];\n        this.timing = [];\n        this.cams = [];\n        this.startTime = performance.now();\n        this.bounds = new CGL.BoundingBox();\n        this.loaded = Date.now();\n        this.accBuffersDelete = [];\n    }\n\n    getNode(n)\n    {\n        for (let i = 0; i < this.nodes.length; i++)\n        {\n            if (this.nodes[i].name == n) return this.nodes[i];\n        }\n    }\n\n    unHideAll()\n    {\n        for (let i = 0; i < this.nodes.length; i++)\n        {\n            this.nodes[i].unHide();\n        }\n    }\n};\n\nfunction Utf8ArrayToStr(array)\n{\n    if (window.TextDecoder) return new TextDecoder("utf-8").decode(array);\n\n    let out, i, len, c;\n    let char2, char3;\n\n    out = "";\n    len = array.length;\n    i = 0;\n    while (i < len)\n    {\n        c = array[i++];\n        switch (c >> 4)\n        {\n        case 0: case 1: case 2: case 3: case 4: case 5: case 6: case 7:\n            // 0xxxxxxx\n            out += String.fromCharCode(c);\n            break;\n        case 12: case 13:\n            // 110x xxxx   10xx xxxx\n            char2 = array[i++];\n            out += String.fromCharCode(((c & 0x1F) << 6) | (char2 & 0x3F));\n            break;\n        case 14:\n            // 1110 xxxx  10xx xxxx  10xx xxxx\n            char2 = array[i++];\n            char3 = array[i++];\n            out += String.fromCharCode(((c & 0x0F) << 12) |\n                    ((char2 & 0x3F) << 6) |\n                    ((char3 & 0x3F) << 0));\n            break;\n        }\n    }\n\n    return out;\n}\n\nfunction readChunk(dv, bArr, arrayBuffer, offset)\n{\n    const chunk = {};\n\n    if (offset >= dv.byteLength)\n    {\n        console.log("could not read chunk...");\n        return;\n    }\n    chunk.size = dv.getUint32(offset + 0, le);\n\n    // chunk.type = new TextDecoder("utf-8").decode(bArr.subarray(offset+4, offset+4+4));\n    chunk.type = Utf8ArrayToStr(bArr.subarray(offset + 4, offset + 4 + 4));\n\n    if (chunk.type == "BIN\\0")\n    {\n        // console.log(chunk.size,arrayBuffer.length,offset);\n        // try\n        // {\n        chunk.dataView = new DataView(arrayBuffer, offset + 8, chunk.size);\n        // }\n        // catch(e)\n        // {\n        //     chunk.dataView = null;\n        //     console.log(e);\n        // }\n    }\n    else\n    if (chunk.type == "JSON")\n    {\n        const json = Utf8ArrayToStr(bArr.subarray(offset + 8, offset + 8 + chunk.size));\n\n        try\n        {\n            const obj = JSON.parse(json);\n            chunk.data = obj;\n            outGenerator.set(obj.asset.generator);\n        }\n        catch (e)\n        {\n        }\n    }\n    else\n    {\n    }\n\n    return chunk;\n}\n\nfunction loadAnims(gltf)\n{\n    const uniqueAnimNames = {};\n\n    for (let i = 0; i < gltf.json.animations.length; i++)\n    {\n        const an = gltf.json.animations[i];\n\n        for (let ia = 0; ia < an.channels.length; ia++)\n        {\n            const chan = an.channels[ia];\n\n            const node = gltf.nodes[chan.target.node];\n            const sampler = an.samplers[chan.sampler];\n\n            const acc = gltf.json.accessors[sampler.input];\n            const bufferIn = gltf.accBuffers[sampler.input];\n\n            const accOut = gltf.json.accessors[sampler.output];\n            const bufferOut = gltf.accBuffers[sampler.output];\n\n            gltf.accBuffersDelete.push(sampler.output, sampler.input);\n\n            if (bufferIn && bufferOut)\n            {\n                let numComps = 1;\n                if (accOut.type == "VEC2")numComps = 2;\n                else if (accOut.type == "VEC3")numComps = 3;\n                else if (accOut.type == "VEC4")numComps = 4;\n                else op.warn("unknown accOut.type", accOut.type);\n\n                const anims = [];\n\n                uniqueAnimNames[an.name] = true;\n\n                for (let k = 0; k < numComps; k++)\n                {\n                    const newAnim = new CABLES.TL.Anim();\n                    // newAnim.name=an.name;\n                    anims.push(newAnim);\n                }\n\n                if (sampler.interpolation == "LINEAR") {}\n                else if (sampler.interpolation == "STEP") for (let k = 0; k < numComps; k++) anims[k].defaultEasing = CABLES.EASING_LINEAR;\n                else op.warn("unknown interpolation", sampler.interpolation);\n\n\n                // if there is no keyframe for time 0 copy value of first keyframe at time 0\n                if (bufferIn[0] !== 0.0)\n                    for (let k = 0; k < numComps; k++)\n                        anims[k].setValue(0, bufferOut[0 * numComps + k]);\n\n\n                for (let j = 0; j < bufferIn.length; j++)\n                {\n                    maxTime = Math.max(bufferIn[j], maxTime);\n\n                    for (let k = 0; k < numComps; k++)\n                    {\n                        anims[k].setValue(bufferIn[j], bufferOut[j * numComps + k]);\n                    }\n                }\n\n                node.setAnim(chan.target.path, an.name, anims);\n            }\n            else\n            {\n                op.warn("loadAmins bufferIn undefined ", bufferIn === undefined);\n                op.warn("loadAmins bufferOut undefined ", bufferOut === undefined);\n                op.warn("loadAmins ", sampler, accOut);\n                op.warn("loadAmins num accBuffers", gltf.accBuffers.length);\n                op.warn("loadAmins num accessors", gltf.json.accessors.length);\n            }\n        }\n    }\n\n\n    outAnims.set(null);\n    outAnims.set(Object.keys(uniqueAnimNames));\n}\n\nfunction loadCams(gltf)\n{\n    if (!gltf || !gltf.json.cameras) return;\n\n    gltf.cameras = gltf.cameras || [];\n\n    for (let i = 0; i < gltf.nodes.length; i++)\n    {\n        if (gltf.nodes[i].hasOwnProperty("camera"))\n        {\n            const cam = new gltfCamera(gltf, gltf.nodes[i]);\n            gltf.cameras.push(cam);\n        }\n    }\n}\n\nfunction loadAfterDraco()\n{\n    if (!window.DracoDecoder)\n    {\n        setTimeout(() =>\n        {\n            loadAfterDraco();\n        }, 100);\n    }\n\n    reloadSoon();\n}\n\nfunction parseGltf(arrayBuffer)\n{\n    let j = 0, i = 0;\n\n    const gltf = new Gltf();\n\n    if (!arrayBuffer) return;\n    const byteArray = new Uint8Array(arrayBuffer);\n    let pos = 0;\n\n    // var string = new TextDecoder("utf-8").decode(byteArray.subarray(pos, 4));\n    const string = Utf8ArrayToStr(byteArray.subarray(pos, 4));\n    pos += 4;\n    if (string != "glTF") return;\n\n    gltf.timing.push("Start parsing", Math.round((performance.now() - gltf.startTime)));\n\n    const dv = new DataView(arrayBuffer);\n    const version = dv.getUint32(pos, le);\n    pos += 4;\n    const size = dv.getUint32(pos, le);\n    pos += 4;\n\n    outVersion.set(version);\n\n\n    const chunks = [];\n    gltf.chunks = chunks;\n\n    chunks.push(readChunk(dv, byteArray, arrayBuffer, pos));\n    pos += chunks[0].size + CHUNK_HEADER_SIZE;\n    gltf.json = chunks[0].data;\n    outJson.set(gltf.json);\n    outExtensions.set(gltf.json.extensionsUsed || []);\n\n    chunks.push(readChunk(dv, byteArray, arrayBuffer, pos));\n\n    gltf.chunks = chunks;\n\n    const views = chunks[0].data.bufferViews;\n    const accessors = chunks[0].data.accessors;\n\n    gltf.timing.push("Parse buffers", Math.round((performance.now() - gltf.startTime)));\n\n    if (gltf.json.extensionsUsed && gltf.json.extensionsUsed.indexOf("KHR_draco_mesh_compression") > -1)\n    {\n        if (!window.DracoDecoder)\n        {\n            op.setUiError("gltfdraco", "GLTF draco compression lib not found / add draco op to your patch!");\n\n            loadAfterDraco();\n            return gltf;\n        }\n        else\n        {\n            gltf.useDraco = true;\n        }\n    }\n\n    op.setUiError("gltfdraco", null);\n    // let accPos = (view.byteOffset || 0) + (acc.byteOffset || 0);\n\n    if (views)\n    {\n        for (i = 0; i < accessors.length; i++)\n        {\n            const acc = accessors[i];\n\n            const view = views[acc.bufferView];\n\n\n            // if(!view || !acc)\n            // {\n\n            //     continue;\n            // }\n\n            let numComps = 0;\n            if (acc.type == "SCALAR")numComps = 1;\n            else if (acc.type == "VEC2")numComps = 2;\n            else if (acc.type == "VEC3")numComps = 3;\n            else if (acc.type == "VEC4")numComps = 4;\n            else if (acc.type == "MAT4")numComps = 16;\n            else console.error("unknown accessor type", acc.type);\n\n            //   const decoder = new decoderModule.Decoder();\n            //   const decodedGeometry = decodeDracoData(data, decoder);\n            //   // Encode mesh\n            //   encodeMeshToFile(decodedGeometry, decoder);\n\n            //   decoderModule.destroy(decoder);\n            //   decoderModule.destroy(decodedGeometry);\n\n\n            // 5120 (BYTE)\t1\n            // 5121 (UNSIGNED_BYTE)\t1\n            // 5122 (SHORT)\t2\n\n            if (chunks[1].dataView)\n            {\n                if (view)\n                {\n                    const num = acc.count * numComps;\n                    let accPos = (view.byteOffset || 0) + (acc.byteOffset || 0);\n                    let stride = view.byteStride || 0;\n                    let dataBuff = null;\n\n\n                    if (acc.componentType == 5126 || acc.componentType == 5125) // 4byte FLOAT or INT\n                    {\n                        stride = stride || 4;\n\n                        const isInt = acc.componentType == 5125;\n                        if (isInt)dataBuff = new Uint32Array(num);\n                        else dataBuff = new Float32Array(num);\n\n                        for (j = 0; j < num; j++)\n                        {\n                            if (isInt) dataBuff[j] = chunks[1].dataView.getUint32(accPos, le);\n                            else dataBuff[j] = chunks[1].dataView.getFloat32(accPos, le);\n\n                            if (stride != 4 && (j + 1) % numComps === 0)accPos += stride - (numComps * 4);\n                            accPos += 4;\n                        }\n                    }\n                    else if (acc.componentType == 5123) // UNSIGNED_SHORT\n                    {\n                        stride = stride || 2;\n\n                        dataBuff = new Uint16Array(num);\n\n                        for (j = 0; j < num; j++)\n                        {\n                            dataBuff[j] = chunks[1].dataView.getUint16(accPos, le);\n\n                            if (stride != 2 && (j + 1) % numComps === 0) accPos += stride - (numComps * 2);\n\n                            accPos += 2;\n                        }\n                    }\n                    else if (acc.componentType == 5121) // UNSIGNED_BYTE\n                    {\n                        stride = stride || 1;\n\n                        dataBuff = new Uint8Array(num);\n\n                        for (j = 0; j < num; j++)\n                        {\n                            dataBuff[j] = chunks[1].dataView.getUint8(accPos, le);\n\n                            if (stride != 1 && (j + 1) % numComps === 0) accPos += stride - (numComps * 1);\n\n                            accPos += 1;\n                        }\n                    }\n\n\n                    else\n                    {\n                        console.error("unknown component type", acc.componentType);\n                    }\n\n                    gltf.accBuffers.push(dataBuff);\n                }\n                else\n                {\n                    // console.log("has no dataview");\n                }\n            }\n        }\n    }\n\n    gltf.timing.push("Parse mesh groups", Math.round((performance.now() - gltf.startTime)));\n\n    gltf.json.meshes = gltf.json.meshes || [];\n\n    if (gltf.json.meshes)\n        for (i = 0; i < gltf.json.meshes.length; i++)\n        {\n            const mesh = new gltfMeshGroup(gltf, gltf.json.meshes[i]);\n            gltf.meshes.push(mesh);\n        }\n\n    gltf.timing.push("Parse nodes", Math.round((performance.now() - gltf.startTime)));\n\n    for (i = 0; i < gltf.json.nodes.length; i++)\n    {\n        if (gltf.json.nodes[i].children)\n            for (j = 0; j < gltf.json.nodes[i].children.length; j++)\n            {\n                gltf.json.nodes[gltf.json.nodes[i].children[j]].isChild = true;\n            }\n    }\n\n    for (i = 0; i < gltf.json.nodes.length; i++)\n    {\n        const node = new gltfNode(gltf.json.nodes[i], gltf);\n        gltf.nodes.push(node);\n    }\n\n    for (i = 0; i < gltf.nodes.length; i++)\n    {\n        const node = gltf.nodes[i];\n\n        if (!node.children) continue;\n        for (let j = 0; j < node.children.length; j++)\n        {\n            gltf.nodes[node.children[j]].parent = node;\n        }\n    }\n\n    for (i = 0; i < gltf.nodes.length; i++)\n    {\n        if (gltf.nodes[i].skin > -1)\n        {\n            gltf.nodes[i].skinRenderer = new GltfSkin(gltf.nodes[i]);\n        }\n    }\n\n    needsMatUpdate = true;\n\n    gltf.timing.push("load anims", Math.round((performance.now() - gltf.startTime)));\n\n    if (gltf.json.animations) loadAnims(gltf);\n\n    gltf.timing.push("load cameras", Math.round((performance.now() - gltf.startTime)));\n\n    if (gltf.json.cameras) loadCams(gltf);\n\n    gltf.timing.push("finished", Math.round((performance.now() - gltf.startTime)));\n\n\n    return gltf;\n}\n',inc_mesh_js:'\nlet gltfMesh = class\n{\n    constructor(name, prim, gltf, finished)\n    {\n        this.test = 0;\n        this.name = name;\n        this.material = prim.material;\n        this.mesh = null;\n        this.geom = new CGL.Geometry("gltf_" + this.name);\n        this.geom.verticesIndices = [];\n        this.bounds = null;\n\n        if (prim.hasOwnProperty("indices")) this.geom.verticesIndices = gltf.accBuffers[prim.indices];\n\n        gltf.loadingMeshes = gltf.loadingMeshes || 0;\n        gltf.loadingMeshes++;\n\n        if (gltf.useDraco && prim.extensions.KHR_draco_mesh_compression)\n        {\n            const view = gltf.chunks[0].data.bufferViews[prim.extensions.KHR_draco_mesh_compression.bufferView];\n            const num = view.byteLength;\n            const dataBuff = new Int8Array(num);\n            let accPos = (view.byteOffset || 0);// + (acc.byteOffset || 0);\n            for (let j = 0; j < num; j++)\n            {\n                dataBuff[j] = gltf.chunks[1].dataView.getInt8(accPos, le);\n                accPos++;\n            }\n\n            const dracoDecoder = window.DracoDecoder;\n            dracoDecoder.decodeGeometry(dataBuff.buffer, (geometry) =>\n            {\n                const geom = new CGL.Geometry("draco mesh " + name);\n\n                for (let i = 0; i < geometry.attributes.length; i++)\n                {\n                    const attr = geometry.attributes[i];\n\n                    if (attr.name === "position") geom.vertices = attr.array;\n                    else if (attr.name === "normal") geom.vertexNormals = attr.array;\n                    else if (attr.name === "uv") geom.texCoords = attr.array;\n                    else if (attr.name === "color") this.setGeomVertCols(geom, attr.array);\n                    else if (attr.name === "joints") geom.setAttribute("attrJoints", Array.from(attr.array), 4);\n                    else if (attr.name === "weights")\n                    {\n                        const arr4 = new Float32Array(attr.array.length / attr.itemSize * 4);\n\n                        for (let k = 0; k < attr.array.length / attr.itemSize; k++)\n                        {\n                            arr4[k * 4] = arr4[k * 4 + 1] = arr4[k * 4 + 2] = arr4[k * 4 + 3] = 0;\n                            for (let j = 0; j < attr.itemSize; j++)\n                                arr4[k * 4 + j] = attr.array[k * attr.itemSize + j];\n                        }\n                        geom.setAttribute("attrWeights", arr4, 4);\n                    }\n                    else op.logWarn("unknown draco attrib", attr);\n                }\n\n                geometry.attributes = null;\n                geom.verticesIndices = geometry.index.array;\n\n                this.setGeom(geom);\n\n                this.mesh = null;\n                gltf.loadingMeshes--;\n                if (finished)finished(this);\n            }, (error) => { op.logError(error); });\n        }\n        else\n        {\n            gltf.loadingMeshes--;\n            this.fillGeomAttribs(gltf, this.geom, prim.attributes);\n\n            if (prim.targets)\n            {\n                console.log("prim.targets", prim.targets.length);\n                for (let j = 0; j < prim.targets.length; j++)\n                {\n                    // var tgeom=new CGL.Geometry("gltf_"+this.name);\n                    let tgeom = this.geom.copy();\n\n                    if (prim.hasOwnProperty("indices")) tgeom.verticesIndices = gltf.accBuffers[prim.indices];\n\n                    this.fillGeomAttribs(gltf, tgeom, prim.targets[j], false);\n\n                    { // calculate normals for final position of morphtarget for later...\n                        for (let i = 0; i < tgeom.vertices.length; i++) tgeom.vertices[i] += this.geom.vertices[i];\n                        tgeom.calculateNormals();\n                        for (let i = 0; i < tgeom.vertices.length; i++) tgeom.vertices[i] -= this.geom.vertices[i];\n                    }\n\n                    this.geom.morphTargets.push(tgeom);\n                }\n            }\n            if (finished)finished(this);\n        }\n    }\n\n\n    setGeomVertCols(tgeom,arr)\n    {\n\n        if (arr instanceof Float32Array)\n        {\n            let div=false;\n            for (let i = 0; i < arr.length; i++)\n            {\n                if(arr[i]>1)\n                {\n                    div=true;\n                    continue\n                }\n            }\n\n            if(div)\n            for (let i = 0; i < arr.length; i++)  arr[i] /= 65535;\n\n            tgeom.vertexColors = arr;\n        }\n\n        else if (arr instanceof Uint16Array)\n        {\n            const fb = new Float32Array(arr.length);\n            for (let i = 0; i < arr.length; i++)  fb[i] = arr[i] / 65535;\n\n            tgeom.vertexColors = fb;\n        } else tgeom.vertexColors = arr;\n\n    }\n\n\n    fillGeomAttribs(gltf, tgeom, attribs, setGeom)\n    {\n        if (attribs.hasOwnProperty("POSITION"))tgeom.vertices = gltf.accBuffers[attribs.POSITION];\n        if (attribs.hasOwnProperty("NORMAL"))tgeom.vertexNormals = gltf.accBuffers[attribs.NORMAL];\n        if (attribs.hasOwnProperty("TEXCOORD_0"))tgeom.texCoords = gltf.accBuffers[attribs.TEXCOORD_0];\n        if (attribs.hasOwnProperty("TANGENT"))tgeom.tangents = gltf.accBuffers[attribs.TANGENT];\n        if (attribs.hasOwnProperty("COLOR_0"))this.setGeomVertCols(tgeom,gltf.accBuffers[attribs.COLOR_0]);\n\n        if (attribs.hasOwnProperty("TEXCOORD_1"))tgeom.setAttribute("attrTexCoord1", gltf.accBuffers[attribs.TEXCOORD_1], 2);\n        if (attribs.hasOwnProperty("TEXCOORD_2"))tgeom.setAttribute("attrTexCoord2", gltf.accBuffers[attribs.TEXCOORD_2], 2);\n        if (attribs.hasOwnProperty("TEXCOORD_3"))tgeom.setAttribute("attrTexCoord3", gltf.accBuffers[attribs.TEXCOORD_3], 2);\n        if (attribs.hasOwnProperty("TEXCOORD_4"))tgeom.setAttribute("attrTexCoord4", gltf.accBuffers[attribs.TEXCOORD_4], 2);\n\n        if (attribs.hasOwnProperty("WEIGHTS_0"))\n        {\n            tgeom.setAttribute("attrWeights", gltf.accBuffers[attribs.WEIGHTS_0], 4);\n        }\n        if (attribs.hasOwnProperty("JOINTS_0"))\n        {\n            if (!gltf.accBuffers[attribs.JOINTS_0])console.log("no !gltf.accBuffers[attribs.JOINTS_0]");\n            tgeom.setAttribute("attrJoints", gltf.accBuffers[attribs.JOINTS_0], 4);\n        }\n\n\n        if (attribs.hasOwnProperty("POSITION")) gltf.accBuffersDelete.push(attribs.POSITION);\n        if (attribs.hasOwnProperty("NORMAL")) gltf.accBuffersDelete.push(attribs.NORMAL);\n        if (attribs.hasOwnProperty("TEXCOORD_0")) gltf.accBuffersDelete.push(attribs.TEXCOORD_0);\n        if (attribs.hasOwnProperty("TANGENT")) gltf.accBuffersDelete.push(attribs.TANGENT);\n        if (attribs.hasOwnProperty("COLOR_0"))gltf.accBuffersDelete.push(attribs.COLOR_0);\n        if (attribs.hasOwnProperty("TEXCOORD_1")) gltf.accBuffersDelete.push(attribs.TEXCOORD_1);\n        if (attribs.hasOwnProperty("TEXCOORD_2")) gltf.accBuffersDelete.push(attribs.TEXCOORD_2);\n        if (attribs.hasOwnProperty("TEXCOORD_3")) gltf.accBuffersDelete.push(attribs.TEXCOORD_3);\n        if (attribs.hasOwnProperty("TEXCOORD_4")) gltf.accBuffersDelete.push(attribs.TEXCOORD_4);\n\n\n        if (setGeom !== false) if (tgeom && tgeom.verticesIndices) this.setGeom(tgeom);\n    }\n\n    setGeom(geom)\n    {\n        this.morphGeom = geom.copy();\n\n        if (inNormFormat.get() == "X-ZY")\n        {\n            for (let i = 0; i < geom.vertexNormals.length; i += 3)\n            {\n                let t = geom.vertexNormals[i + 2];\n                geom.vertexNormals[i + 2] = geom.vertexNormals[i + 1];\n                geom.vertexNormals[i + 1] = -t;\n            }\n        }\n\n        if (inVertFormat.get() == "XZ-Y")\n        {\n            for (let i = 0; i < geom.vertices.length; i += 3)\n            {\n                let t = geom.vertices[i + 2];\n                geom.vertices[i + 2] = -geom.vertices[i + 1];\n                geom.vertices[i + 1] = t;\n            }\n        }\n\n        if (!geom.vertexNormals.length || inCalcNormals.get()) geom.calculateNormals();\n\n        if ((!geom.biTangents || geom.biTangents.length == 0) && geom.tangents)\n        {\n            const bitan = vec3.create();\n            const tan = vec3.create();\n\n            const tangents = geom.tangents;\n            geom.tangents = new Float32Array(tangents.length / 4 * 3);\n            geom.biTangents = new Float32Array(tangents.length / 4 * 3);\n\n            for (let i = 0; i < tangents.length; i += 4)\n            {\n                const idx = i / 4 * 3;\n\n                vec3.cross(\n                    bitan,\n                    [geom.vertexNormals[idx], geom.vertexNormals[idx + 1], geom.vertexNormals[idx + 2]],\n                    [tangents[i], tangents[i + 1], tangents[i + 2]]\n                );\n\n                vec3.div(bitan, bitan, [tangents[i + 3], tangents[i + 3], tangents[i + 3]]);\n                vec3.normalize(bitan, bitan);\n\n                geom.biTangents[idx + 0] = bitan[0];\n                geom.biTangents[idx + 1] = bitan[1];\n                geom.biTangents[idx + 2] = bitan[2];\n\n                geom.tangents[idx + 0] = tangents[i + 0];\n                geom.tangents[idx + 1] = tangents[i + 1];\n                geom.tangents[idx + 2] = tangents[i + 2];\n            }\n        }\n\n        if (geom.tangents.length === 0 || inCalcNormals.get()) geom.calcTangentsBitangents();\n        this.geom = geom;\n\n        this.bounds = geom.getBounds();\n    }\n\n    render(cgl, ignoreMaterial)\n    {\n        if (!this.mesh && this.geom && this.geom.verticesIndices)\n        {\n            let g = this.geom;\n            if (this.geom.vertices.length / 3 > 64000)\n            {\n                g = this.geom.copy();\n                g.unIndex(false, true);\n            }\n\n            this.mesh = new CGL.Mesh(cgl, g);\n            this.mesh._geom = null;\n\n            // this.geom = null;\n        }\n        else\n        {\n            // update morphTargets\n            if (this.geom && this.geom.morphTargets.length)\n            {\n                this.test = time * 11.7;\n\n                if (this.test >= this.geom.morphTargets.length - 1) this.test = 0;\n\n                const mt = this.geom.morphTargets[Math.floor(this.test)];\n                const mt2 = this.geom.morphTargets[Math.floor(this.test + 1)];\n\n                if (mt && mt.vertices)\n                {\n                    if (this.morphGeom.vertexNormals.length != mt.vertexNormals.length)\n                        this.morphGeom.vertexNormals = new Float32Array(mt.vertexNormals.length);\n\n                    const fract = this.test % 1;\n                    for (let i = 0; i < this.morphGeom.vertices.length; i++)\n                    {\n                        this.morphGeom.vertices[i] =\n                            this.geom.vertices[i] +\n                            (1.0 - fract) * mt.vertices[i] +\n                            fract * mt2.vertices[i];\n\n                        this.morphGeom.vertexNormals[i] =\n                            (1.0 - fract) * mt.vertexNormals[i] +\n                            fract * mt2.vertexNormals[i];\n                    }\n\n                    this.mesh.updateNormals(this.morphGeom);\n                    this.mesh.updateVertices(this.morphGeom);\n                }\n            }\n\n            const useMat = !ignoreMaterial && this.material != -1 && gltf.shaders[this.material];\n\n\n            // cgl.pushModelMatrix();\n            // if(gltf.renderMMatrix) mat4.mul(cgl.mMatrix,gltf.renderMMatrix,cgl.mMatrix);\n\n            if (useMat) cgl.pushShader(gltf.shaders[this.material]);\n\n            if (this.mesh) this.mesh.render(cgl.getShader(), ignoreMaterial);\n\n            if (useMat) cgl.popShader();\n            // cgl.popModelMatrix();\n        }\n    }\n};\n',inc_meshGroup_js:'const gltfMeshGroup = class\n{\n    constructor(gltf, m)\n    {\n        this.bounds = new CGL.BoundingBox();\n        this.meshes = [];\n        this.name = m.name;\n        const prims = m.primitives;\n\n        for (let i = 0; i < prims.length; i++)\n        {\n            const mesh = new gltfMesh(this.name, prims[i], gltf,\n                (mesh) =>\n                {\n                    this.bounds.apply(mesh.bounds);\n                });\n\n            this.meshes.push(mesh);\n        }\n\n        // console.log("mesh group bounds:",this.bounds._maxAxis);\n    }\n\n    render(cgl, ignoreMat)\n    {\n        for (let i = 0; i < this.meshes.length; i++)\n        {\n            this.meshes[i].render(cgl, ignoreMat);\n        }\n    }\n};\n',inc_node_js:'const gltfNode = class\n{\n    constructor(node, gltf)\n    {\n        this.isChild = node.isChild || false;\n        this.name = node.name;\n        if (node.hasOwnProperty("camera")) this.camera = node.camera;\n        this.hidden = false;\n        this.mat = mat4.create();\n        this._animMat = mat4.create();\n        this._tempMat = mat4.create();\n        this._tempQuat = quat.create();\n        this._tempRotmat = mat4.create();\n        this.mesh = null;\n        this.children = [];\n        this._node = node;\n        this._gltf = gltf;\n        this.absMat = mat4.create();\n        this.addTranslate = null;\n        this.updateMatrix();\n        this._animActions={};\n    }\n\n    get skin()\n    {\n        if (this._node.hasOwnProperty("skin")) return this._node.skin;\n        else return -1;\n    }\n\n    hasSkin()\n    {\n        if (this._node.hasOwnProperty("skin")) return this._gltf.json.skins[this._node.skin].name || "unknown";\n        return false;\n    }\n\n    updateMatrix()\n    {\n        mat4.identity(this.mat);\n        if (this._node.translation) mat4.translate(this.mat, this.mat, this._node.translation);\n\n        if (this._node.rotation)\n        {\n            const rotmat = mat4.create();\n            this._rot = this._node.rotation;\n\n            mat4.fromQuat(rotmat, this._node.rotation);\n            mat4.mul(this.mat, this.mat, rotmat);\n        }\n\n        if (this._node.scale)\n        {\n            this._scale = this._node.scale;\n            mat4.scale(this.mat, this.mat, this._scale);\n        }\n\n        if (this._node.hasOwnProperty("mesh"))\n        {\n            this.mesh = this._gltf.meshes[this._node.mesh];\n        }\n\n        if (this._node.children)\n        {\n            for (let i = 0; i < this._node.children.length; i++)\n            {\n                this._gltf.json.nodes[i].isChild = true;\n                if (this._gltf.nodes[this._node.children[i]]) this._gltf.nodes[this._node.children[i]].isChild = true;\n                this.children.push(this._node.children[i]);\n            }\n        }\n    }\n\n    unHide()\n    {\n        this.hidden = false;\n        for (let i = 0; i < this.children.length; i++)\n            if (this.children[i].unHide) this.children[i].unHide();\n    }\n\n    calcBounds(gltf, mat, bounds)\n    {\n        const localMat = mat4.create();\n\n        if (mat) mat4.copy(localMat, mat);\n        if (this.mat) mat4.mul(localMat, localMat, this.mat);\n\n        if (this.mesh)\n        {\n            const bb = this.mesh.bounds.copy();\n            bb.mulMat4(localMat);\n            bounds.apply(bb);\n\n            if (bounds.changed)\n            {\n                boundingPoints.push(bb._min[0] || 0, bb._min[1] || 0, bb._min[2] || 0);\n                boundingPoints.push(bb._max[0] || 0, bb._max[1] || 0, bb._max[2] || 0);\n            }\n        }\n\n        for (let i = 0; i < this.children.length; i++)\n        {\n            if (gltf.nodes[this.children[i]] && gltf.nodes[this.children[i]].calcBounds)\n            {\n                const b = gltf.nodes[this.children[i]].calcBounds(gltf, localMat, bounds);\n\n                bounds.apply(b);\n            }\n        }\n\n        if (bounds.changed) return bounds;\n        else return null;\n    }\n\n\n    setAnimAction(name)\n    {\n        if(name && !this._animActions[name]) return console.log("no action found: ",name);\n\n        for(let path in this._animActions[name])\n        {\n            if (path == "translation") this._animTrans =this._animActions[name][path];\n            else if (path == "rotation") this._animRot =this._animActions[name][path];\n            else if (path == "scale") this._animScale =this._animActions[name][path];\n            else console.warn("unknown anim path", path,this._animActions[name][path]);\n        }\n\n    }\n\n    setAnim(path,name, anims)\n    {\n        this._animActions[name]=this._animActions[name]||{};\n\n        if(this._animActions[name][path])op.warn("animation action path already exists",name,path,this._animActions[name][path]);\n\n        this._animActions[name][path]=anims;\n\n        if (path == "translation") this._animTrans = anims;\n        else if (path == "rotation") this._animRot = anims;\n        else if (path == "scale") this._animScale = anims;\n        else console.warn("unknown anim path", path, anims);\n    }\n\n    modelMatLocal()\n    {\n        return this._animMat||this.mat;\n    }\n\n    modelMatAbs()\n    {\n        return this.absMat;\n    }\n\n    transform(cgl, _time)\n    {\n        if (!_time)_time = time;\n\n        if (!this._animTrans && !this._animRot && !this._animScale)\n        {\n            mat4.mul(cgl.mMatrix, cgl.mMatrix, this.mat);\n        }\n        else\n        {\n            mat4.identity(this._animMat);\n\n            const playAnims = true;\n\n            if (playAnims && this._animTrans)\n            {\n                mat4.translate(this._animMat, this._animMat, [\n                    this._animTrans[0].getValue(_time),\n                    this._animTrans[1].getValue(_time),\n                    this._animTrans[2].getValue(_time)]);\n            }\n            else\n            if (this.translation) mat4.translate(this._animMat, this._animMat, this.translation);\n\n            if (playAnims && this._animRot)\n            {\n                CABLES.TL.Anim.slerpQuaternion(_time, this._tempQuat, this._animRot[0], this._animRot[1], this._animRot[2], this._animRot[3]);\n\n                mat4.fromQuat(this._tempMat, this._tempQuat);\n                mat4.mul(this._animMat, this._animMat, this._tempMat);\n            }\n            else if (this._rot)\n            {\n                mat4.fromQuat(this._tempRotmat, this._rot);\n                mat4.mul(this._animMat, this._animMat, this._tempRotmat);\n            }\n\n            if (playAnims && this._animScale)\n            {\n                mat4.scale(this._animMat, this._animMat, [\n                    this._animScale[0].getValue(_time),\n                    this._animScale[1].getValue(_time),\n                    this._animScale[2].getValue(_time)]);\n            }\n            else if (this._scale) mat4.scale(this._animMat, this._animMat, this._scale);\n\n            mat4.mul(cgl.mMatrix, cgl.mMatrix, this._animMat);\n        }\n\n        if (this.addTranslate)mat4.translate(cgl.mMatrix, cgl.mMatrix, this.addTranslate);\n\n        mat4.copy(this.absMat, cgl.mMatrix);\n    }\n\n    render(cgl, dontTransform, dontDrawMesh, ignoreMaterial, ignoreChilds, drawHidden, _time)\n    {\n        if (!dontTransform) cgl.pushModelMatrix();\n\n        if(_time===undefined)_time=gltf.time;\n\n        if (!dontTransform || this.skinRenderer) this.transform(cgl, _time );\n\n        if (this.hidden && !drawHidden)\n        {\n\n        }\n        else\n        {\n            if(this.skinRenderer)\n            {\n                this.skinRenderer.renderStart(cgl,_time);\n                if(!dontDrawMesh) this.mesh.render(cgl, ignoreMaterial);\n                this.skinRenderer.renderFinish(cgl);\n            }\n            else\n            {\n                if (this.mesh && !dontDrawMesh)\n                {\n                    this.mesh.render(cgl, ignoreMaterial);\n                }\n            }\n        }\n\n        if (!ignoreChilds && !this.hidden)\n            for (let i = 0; i < this.children.length; i++)\n                if (gltf.nodes[this.children[i]])\n                {\n                    gltf.nodes[this.children[i]].render(cgl, dontTransform, dontDrawMesh, ignoreMaterial, ignoreChilds, drawHidden, _time);\n                }\n\n\n        if (!dontTransform)cgl.popModelMatrix();\n    }\n};\n',inc_print_js:'let tab = null;\n\nfunction closeTab()\n{\n    if (tab)gui.mainTabs.closeTab(tab.id);\n    tab = null;\n}\n\nfunction printNode(html, node, level)\n{\n    if (!gltf) return;\n\n    html += "<tr class=\\"row\\">";\n\n    let ident = "";\n    let identSpace = "";\n\n    for (let i = 1; i < level; i++)\n    {\n        identSpace += "&nbsp;&nbsp;&nbsp;";\n        let identClass = "identBg";\n        if (i == 1)identClass = "identBgLevel0";\n        ident += "<td class=\\"ident " + identClass + "\\" ><div style=\\"\\"></div></td>";\n    }\n    let id = CABLES.uuid();\n    html += ident;\n    html += "<td colspan=\\"" + (21 - level) + "\\">";\n    // html+=\'<div style="display:inline-block;border:0px solid red;height:10px;width:\'+level*10+\'px"></div>\';\n\n    if (node.mesh && node.mesh.meshes.length)html += "<span class=\\"icon icon-cube\\"></span>&nbsp;";\n    else html += "<span class=\\"icon icon-circle\\"></span> &nbsp;";\n\n    html += node.name + "</td><td></td>";\n\n\n    if (node.mesh)\n    {\n        html += "<td>";\n        for (let i = 0; i < node.mesh.meshes.length; i++)\n        {\n            html += node.mesh.meshes[i].name;\n        }\n        html += "</td>";\n\n        html += "<td>";\n        html += node.hasSkin() || "-";\n        html += "</td>";\n\n        html += "<td>";\n        let countMats = 0;\n        for (let i = 0; i < node.mesh.meshes.length; i++)\n        {\n            if (node.mesh.meshes[i].material)\n            {\n                html += gltf.json.materials[node.mesh.meshes[i].material].name;\n                countMats++;\n            }\n        }\n        if (countMats == 0)html += "none";\n        html += "</td>";\n    }\n    else\n    {\n        html += "<td>-</td><td>-</td><td>-</td>";\n    }\n\n\n    html += "<td>";\n    if (node._animRot || node._animScale || node._animTrans)\n    {\n        if (node._animRot) html += "Rot ";\n        if (node._animScale) html += "Scale ";\n        if (node._animTrans) html += "Trans ";\n    }\n    else html += "None";\n    html += "</td>";\n\n    html += "<td>";\n    let hideclass = "";\n    if (node.hidden)hideclass = "node-hidden";\n\n    // html+=\'\';\n    html += "<a onclick=\\"gui.corePatch().getOpById(\'" + op.id + "\').exposeNode(\'" + node.name + "\',\'transform\')\\" class=\\"treebutton\\">Transform</a>";\n    html += " <a onclick=\\"gui.corePatch().getOpById(\'" + op.id + "\').exposeNode(\'" + node.name + "\',\'hierarchy\')\\" class=\\"treebutton\\">Hierarchy</a>";\n    html += " <a onclick=\\"gui.corePatch().getOpById(\'" + op.id + "\').exposeNode(\'" + node.name + "\')\\" class=\\"treebutton\\">Node</a>";\n\n    if (node.hasSkin())\n        html += " <a onclick=\\"gui.corePatch().getOpById(\'" + op.id + "\').exposeNode(\'" + node.name + "\',false,{skin:true});\\" class=\\"treebutton\\">Skin</a>";\n\n\n    html += "</td><td>";\n    html += "&nbsp;<span class=\\"icon iconhover icon-eye " + hideclass + "\\" onclick=\\"gui.corePatch().getOpById(\'" + op.id + "\').toggleNodeVisibility(\'" + node.name + "\');this.classList.toggle(\'node-hidden\');\\"></span>";\n    html += "</td>";\n\n    html += "</tr>";\n\n    if (node.children)\n    {\n        for (let i = 0; i < node.children.length; i++)\n            html = printNode(html, gltf.nodes[node.children[i]], level + 1);\n    }\n\n    return html;\n}\n\nfunction printMaterial(mat, idx)\n{\n    let html = "<tr>";\n    html += " <td>" + idx + "</td>";\n    html += " <td>" + mat.name + "</td>";\n    // html+=\' <td><a onclick="" class="treebutton">Assign</a><td>\';\n\n\n    html += " <td>";\n    if (mat.pbrMetallicRoughness && mat.pbrMetallicRoughness.baseColorFactor)\n    {\n        let rgb = "";\n        rgb += "" + Math.round(mat.pbrMetallicRoughness.baseColorFactor[0] * 255);\n        rgb += "," + Math.round(mat.pbrMetallicRoughness.baseColorFactor[1] * 255);\n        rgb += "," + Math.round(mat.pbrMetallicRoughness.baseColorFactor[2] * 255);\n\n        html += "<div style=\\"width:15px;height:15px;;background-color:rgb(" + rgb + ")\\">&nbsp;</a>";\n    }\n    html += " <td style=\\"\\">" + (gltf.shaders[idx] ? "-" : "<a onclick=\\"gui.corePatch().getOpById(\'" + op.id + "\').assignMaterial(\'" + mat.name + "\')\\" class=\\"treebutton\\">Assign</a>") + "<td>";\n    html += "<td>";\n\n\n    html += "</tr>";\n    return html;\n}\n\nfunction printInfo()\n{\n    if (!gltf) return;\n\n    const startTime = performance.now();\n    const sizes = {};\n    let html = "<div style=\\"overflow:scroll;width:100%;height:100%\\">";\n\n    html += "generator:" + gltf.json.asset.generator;\n\n    if (!gltf.json.materials || gltf.json.materials.length == 0)\n    {\n        html += "<h3>Materials</h3>";\n        html += "No materials";\n    }\n    else\n    {\n        html += "<h3>Materials (" + gltf.json.materials.length + ")</h3>";\n        html += "<table class=\\"table treetable\\">";\n        html += "<tr>";\n        html += " <th>Index</th>";\n        html += " <th>Name</th>";\n        html += " <th>Color</th>";\n        html += " <th>Function</th>";\n        html += " <th></th>";\n        html += "</tr>";\n        for (var i = 0; i < gltf.json.materials.length; i++)\n        {\n            html += printMaterial(gltf.json.materials[i], i);\n        }\n        html += "</table>";\n    }\n\n    html += "<h3>Nodes (" + gltf.nodes.length + ")</h3>";\n    html += "<table class=\\"table treetable\\">";\n\n    html += "<tr>";\n    html += " <th colspan=\\"21\\">Name</th>";\n    html += " <th>Mesh</th>";\n    html += " <th>Skin</th>";\n    html += " <th>Material</th>";\n    html += " <th>Anim</th>";\n    html += " <th>Expose</th>";\n    html += " <th></th>";\n    html += "</tr>";\n\n    for (var i = 0; i < gltf.nodes.length; i++)\n    {\n        if (!gltf.nodes[i].isChild)\n            html = printNode(html, gltf.nodes[i], 1);\n    }\n    html += "</table>";\n\n    html += "<h3>Meshes (" + gltf.json.meshes.length + ")</h3>";\n\n    html += "<table class=\\"table treetable\\">";\n    html += "<tr>";\n    html += " <th>Name</th>";\n    html += " <th>Node</th>";\n    html += " <th>Material</th>";\n    html += " <th>Vertices</th>";\n    html += " <th>Attributes</th>";\n    html += "</tr>";\n\n\n    let sizeBufferViews = [];\n    sizes.meshes = 0;\n\n    for (var i = 0; i < gltf.json.meshes.length; i++)\n    {\n        html += "<tr>";\n        html += "<td>" + gltf.json.meshes[i].name + "</td>";\n\n\n        html += "<td>";\n        let count = 0;\n        let nodename = "";\n        for (var j = 0; j < gltf.json.nodes.length; j++)\n        {\n            if (gltf.json.nodes[j].mesh == i)\n            {\n                count++;\n                if (count == 1)\n                {\n                    nodename = gltf.json.nodes[j].name;\n                }\n            }\n        }\n        if (count > 1) html += (count) + " nodes (" + nodename + " ...)";\n        else html += nodename;\n        html += "</td>";\n\n\n        html += "<td>";\n        for (var j = 0; j < gltf.json.meshes[i].primitives.length; j++)\n        {\n            if (gltf.json.meshes[i].primitives[j].material)\n            {\n                html += gltf.json.materials[gltf.json.meshes[i].primitives[j].material].name + " ";\n            }\n            else html += "None";\n        }\n        html += "</td>";\n\n        html += "<td>";\n        let numVerts = 0;\n        for (var j = 0; j < gltf.json.meshes[i].primitives.length; j++)\n        {\n            // html+=gltf.json.meshes[i].primitives[j].indices;\n            if (gltf.json.meshes[i].primitives[j].attributes.POSITION)\n            {\n                numVerts += parseInt(gltf.json.accessors[gltf.json.meshes[i].primitives[j].attributes.POSITION].count);\n            }\n        }\n        html += numVerts;\n        html += "</td>";\n\n        html += "<td>";\n        for (let j = 0; j < gltf.json.meshes[i].primitives.length; j++)\n        {\n            if (j > 0)html += ", ";\n            html += Object.keys(gltf.json.meshes[i].primitives[j].attributes);\n        }\n        html += "</td>";\n\n        html += "</tr>";\n\n\n        for (let j = 0; j < gltf.json.meshes[i].primitives.length; j++)\n        {\n            let bufView = gltf.json.accessors[gltf.json.meshes[i].primitives[j].indices].bufferView;\n\n            if (sizeBufferViews.indexOf(bufView) == -1)\n            {\n                sizeBufferViews.push(bufView);\n                if (gltf.json.bufferViews[bufView])sizes.meshes += gltf.json.bufferViews[bufView].byteLength;\n            }\n\n            for (let k in gltf.json.meshes[i].primitives[j].attributes)\n            {\n                const attr = gltf.json.meshes[i].primitives[j].attributes[k];\n                const bufView2 = gltf.json.accessors[attr].bufferView;\n\n                if (sizeBufferViews.indexOf(bufView2) == -1)\n                {\n                    sizeBufferViews.push(bufView2);\n                    if (gltf.json.bufferViews[bufView2])sizes.meshes += gltf.json.bufferViews[bufView2].byteLength;\n                }\n            }\n        }\n    }\n    html += "</table>";\n\n\n    if (gltf.json.animations)\n    {\n        html += "<h3>Animations (" + gltf.json.animations.length + ")</h3>";\n        html += "<table class=\\"table treetable\\">";\n        html += "<tr>";\n        html += "  <th>Name</th>";\n        html += "  <th>Target node</th>";\n        html += "  <th>Path</th>";\n        html += "  <th>Interpolation</th>";\n        html += "  <th>Keys</th>";\n        html += "</tr>";\n\n        sizes.animations = 0;\n\n        for (let i = 0; i < gltf.json.animations.length; i++)\n        {\n            for (let j = 0; j < gltf.json.animations[i].samplers.length; j++)\n            {\n                let bufView = gltf.json.accessors[gltf.json.animations[i].samplers[j].input].bufferView;\n                if (sizeBufferViews.indexOf(bufView) == -1)\n                {\n                    sizeBufferViews.push(bufView);\n                    sizes.animations += gltf.json.bufferViews[bufView].byteLength;\n                }\n\n                bufView = gltf.json.accessors[gltf.json.animations[i].samplers[j].output].bufferView;\n                if (sizeBufferViews.indexOf(bufView) == -1)\n                {\n                    sizeBufferViews.push(bufView);\n                    sizes.animations += gltf.json.bufferViews[bufView].byteLength;\n                }\n            }\n\n\n            for (let j = 0; j < gltf.json.animations[i].channels.length; j++)\n            {\n                html += "<tr>";\n                html += "  <td>" + gltf.json.animations[i].name + " (" + i + ")</td>";\n\n                html += "  <td>" + gltf.nodes[gltf.json.animations[i].channels[j].target.node].name + "</td>";\n                html += "  <td>";\n                html += gltf.json.animations[i].channels[j].target.path + " ";\n                html += "  </td>";\n\n                const smplidx = gltf.json.animations[i].channels[j].sampler;\n                const smplr = gltf.json.animations[i].samplers[smplidx];\n\n                html += "  <td>" + smplr.interpolation + "</td>";\n\n\n                html += "  <td>" + gltf.json.accessors[smplr.output].count;\n\n                html += "&nbsp;&nbsp;<a onclick=\\"gui.corePatch().getOpById(\'" + op.id + "\').showAnim(\'" + i + "\',\'" + j + "\')\\" class=\\"icon icon-search\\"></a>";\n\n                html += "</td>";\n\n\n                html += "</tr>";\n            }\n        }\n        html += "</table>";\n    }\n    else\n    {\n        html += "<h3>Animations (0)</h3>";\n    }\n\n    if (gltf.json.images)\n    {\n        html += "<h3>Images (" + gltf.json.images.length + ")</h3>";\n        html += "<table class=\\"table treetable\\">";\n\n        html += "<tr>";\n        html += "  <th>name</th>";\n        html += "  <th>type</th>";\n        html += "  <th>func</th>";\n\n        html += "</tr>";\n\n        sizes.images = 0;\n\n        for (var i = 0; i < gltf.json.images.length; i++)\n        {\n            if (gltf.json.images[i].bufferView)\n                sizes.images += gltf.json.bufferViews[gltf.json.images[i].bufferView].byteLength;\n\n            html += "<tr>";\n            html += "<td>" + gltf.json.images[i].name + "</td>";\n            html += "<td>" + gltf.json.images[i].mimeType + "</td>";\n            html += "<td>";\n\n            let name = gltf.json.images[i].name;\n            if (name === undefined)name = gltf.json.images[i].bufferView;\n\n            html += "<a onclick=\\"gui.corePatch().getOpById(\'" + op.id + "\').exposeTexture(\'" + name + "\')\\" class=\\"treebutton\\">Expose</a>";\n            html += "</td>";\n\n            html += "<tr>";\n        }\n        html += "</table>";\n    }\n\n\n    if (gltf.json.cameras)\n    {\n        html += "<h3>Cameras (" + gltf.json.cameras.length + ")</h3>";\n        html += "<table class=\\"table treetable\\">";\n\n        html += "<tr>";\n        html += "  <th>name</th>";\n        html += "  <th>type</th>";\n        html += "  <th>info</th>";\n        html += "</tr>";\n\n        for (var i = 0; i < gltf.json.cameras.length; i++)\n        {\n            html += "<tr>";\n            html += "<td>" + gltf.json.cameras[i].name + "</td>";\n            html += "<td>" + gltf.json.cameras[i].type + "</td>";\n            html += "<td>";\n            html += "yfov: " + Math.round(gltf.json.cameras[i].perspective.yfov * 100) / 100;\n            html += ", ";\n            html += "zfar: " + Math.round(gltf.json.cameras[i].perspective.zfar * 100) / 100;\n            html += ", ";\n            html += "znear: " + Math.round(gltf.json.cameras[i].perspective.znear * 100) / 100;\n            html += "</td>";\n\n            html += "<tr>";\n        }\n        html += "</table>";\n    }\n\n    if (gltf.json.skins)\n    {\n        html += "<h3>Skins (" + gltf.json.skins.length + ")</h3>";\n        html += "<table class=\\"table treetable\\">";\n\n        html += "<tr>";\n        html += "  <th>name</th>";\n        html += "  <th></th>";\n        html += "  <th>total joints</th>";\n        html += "</tr>";\n\n        for (var i = 0; i < gltf.json.skins.length; i++)\n        {\n            html += "<tr>";\n            html += "<td>" + gltf.json.skins[i].name + "</td>";\n            html += "<td>" + "</td>";\n            html += "<td>" + gltf.json.skins[i].joints.length + "</td>";\n            html += "<td>";\n            html += "</td>";\n            html += "<tr>";\n        }\n        html += "</table>";\n    }\n\n\n    let sizeBin = 0;\n\n    if (gltf.json.buffers)\n        sizeBin = gltf.json.buffers[0].byteLength;\n\n    html += "<h3>Binary Data (" + readableSize(sizeBin) + ")</h3>";\n\n    html += "<table class=\\"table treetable\\">";\n    html += "<tr>";\n    html += "  <th>name</th>";\n    html += "  <th>size</th>";\n    html += "  <th>%</th>";\n    html += "</tr>";\n    let sizeUnknown = sizeBin;\n    for (var i in sizes)\n    {\n        // html+=i+\':\'+Math.round(sizes[i]/1024);\n        html += "<tr>";\n        html += "<td>" + i + "</td>";\n        html += "<td>" + readableSize(sizes[i]) + " </td>";\n        html += "<td>" + Math.round(sizes[i] / sizeBin * 100) + "% </td>";\n        html += "<tr>";\n        sizeUnknown -= sizes[i];\n    }\n\n    if (sizeUnknown != 0)\n    {\n        html += "<tr>";\n        html += "<td>unknown</td>";\n        html += "<td>" + readableSize(sizeUnknown) + " </td>";\n        html += "<td>" + Math.round(sizeUnknown / sizeBin * 100) + "% </td>";\n        html += "<tr>";\n    }\n\n    html += "</table>";\n    html += "</div>";\n\n    tab = new CABLES.UI.Tab("GLTF", { "icon": "cube", "infotext": "tab_gltf", "padding": true, "singleton": true });\n    gui.mainTabs.addTab(tab, true);\n\n    tab.addEventListener("onClose", closeTab);\n    tab.html(html);\n    gui.maintabPanel.show(true);\n}\n\nfunction readableSize(n)\n{\n    if (n > 1024) return Math.round(n / 1024) + " kb";\n    if (n > 1024 * 500) return Math.round(n / 1024) + " mb";\n    else return n + " bytes";\n}\n',inc_skin_js:'const GltfSkin = class\n{\n    constructor(node)\n    {\n        this._mod=null;\n        this._node=node;\n    }\n\n    renderFinish(cgl)\n    {\n        cgl.popModelMatrix();\n        this._mod.unbind();\n\n    }\n\n    renderStart(cgl,time)\n    {\n        if(!this._mod)\n        {\n            this._mod = new CGL.ShaderModifier(cgl, op.name);\n\n            this._mod.addModule({\n                "priority": -2,\n                "name": "MODULE_VERTEX_POSITION",\n                "srcHeadVert": attachments.skin_head_vert || "",\n                "srcBodyVert": attachments.skin_vert || ""\n            });\n\n            this._mod.addUniformVert("m4[]", "MOD_boneMats", []);//bohnenmatze\n            const tr = vec3.create();\n        }\n\n        let arr = []; // TODO make member\n\n        const skinIdx = this._node.skin;\n        const arrLength = gltf.json.skins[skinIdx].joints.length * 16;\n\n        if (arr.length != arrLength) arr.length = arrLength;\n\n        const invBindMatrix = mat4.create();\n        const m = mat4.create();\n        const nodeSkin = gltf.nodes[this._node.skin];\n\n        // console.log("yo",this._node.skin)\n        // this._node.render(cgl, false, true, true, false, false, time);\n\n        for (let i = 0; i < gltf.json.skins[skinIdx].joints.length; i++)\n        {\n            const jointIdx = gltf.json.skins[skinIdx].joints[i];\n            const nodeJoint = gltf.nodes[jointIdx];\n\n            for (let j = 0; j < 16; j++)\n                invBindMatrix[j] = gltf.accBuffers[gltf.json.skins[skinIdx].inverseBindMatrices][i * 16 + j];\n\n            mat4.mul(m, nodeJoint.modelMatAbs(), invBindMatrix);\n\n            for (let j = 0; j < m.length; j++) arr[i * 16 + j] = m[j];\n        }\n\n        this._mod.setUniformValue("MOD_boneMats", arr);\n        this._mod.define("SKIN_NUM_BONES", gltf.json.skins[skinIdx].joints.length);\n        this._mod.bind();\n\n        // draw mesh...\n        cgl.pushModelMatrix();\n        mat4.identity(cgl.mMatrix);\n\n    // console.log("draw skin...",time)\n\n    }\n};\n',skin_vert:"int index=int(attrJoints.x);\nvec4 newPos = (MOD_boneMats[index] * pos) * attrWeights.x;\nvec3 newNorm = (vec4((MOD_boneMats[index] * vec4(norm.xyz, 0.0)) * attrWeights.x).xyz);\n\nindex=int(attrJoints.y);\nnewPos += (MOD_boneMats[index] * pos) * attrWeights.y;\nnewNorm = (vec4((MOD_boneMats[index] * vec4(norm.xyz, 0.0)) * attrWeights.y).xyz)+newNorm;\n\nindex=int(attrJoints.z);\nnewPos += (MOD_boneMats[index] * pos) * attrWeights.z;\nnewNorm = (vec4((MOD_boneMats[index] * vec4(norm.xyz, 0.0)) * attrWeights.z).xyz)+newNorm;\n\nindex=int(attrJoints.w);\nnewPos += (MOD_boneMats[index] * pos) * attrWeights.w ;\nnewNorm = (vec4((MOD_boneMats[index] * vec4(norm.xyz, 0.0)) * attrWeights.w).xyz)+newNorm;\n\npos=newPos;\nnorm=normalize(newNorm.xyz);\n\n\n",skin_head_vert:"\nIN vec4 attrWeights;\nIN vec4 attrJoints;\nUNI mat4 MOD_boneMats[SKIN_NUM_BONES];\n"};const a=class{constructor(e,t){this.node=t;this.name=t.name;this.config=e.json.cameras[t.camera];this.pos=vec3.create();this.quat=quat.create();this.quatOr=quat.create();this.vCenter=vec3.create();this.vUp=vec3.create();this.vMat=mat4.create()}updateAnim(e){if(this.node&&this.node._animTrans){vec3.set(this.pos,this.node._animTrans[0].getValue(e),this.node._animTrans[1].getValue(e),this.node._animTrans[2].getValue(e));quat.set(this.quat,this.node._animRot[0].getValue(e),this.node._animRot[1].getValue(e),this.node._animRot[2].getValue(e),this.node._animRot[3].getValue(e))}}start(e){if(te.frameStore.shadowPass)return;this.updateAnim(e);const t=te.getViewPort()[2]/te.getViewPort()[3];te.pushPMatrix();te.pushViewMatrix();let n=mat4.create();mat4.invert(n,this.node.modelMatAbs());this.vMat=n;mat4.identity(te.vMatrix);mat4.mul(te.vMatrix,te.vMatrix,n)}end(){if(te.frameStore.shadowPass)return;te.popPMatrix();te.popViewMatrix()}};const _=8;const O=class{constructor(){this.json={};this.accBuffers=[];this.meshes=[];this.nodes=[];this.shaders=[];this.timing=[];this.cams=[];this.startTime=performance.now();this.bounds=new CGL.BoundingBox;this.loaded=Date.now();this.accBuffersDelete=[]}getNode(t){for(let e=0;e<this.nodes.length;e++){if(this.nodes[e].name==t)return this.nodes[e]}}unHideAll(){for(let e=0;e<this.nodes.length;e++){this.nodes[e].unHide()}}};function C(e){if(window.TextDecoder)return new TextDecoder("utf-8").decode(e);let t,n,a,r;let i,s;t="";a=e.length;n=0;while(n<a){r=e[n++];switch(r>>4){case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:t+=String.fromCharCode(r);break;case 12:case 13:i=e[n++];t+=String.fromCharCode((r&31)<<6|i&63);break;case 14:i=e[n++];s=e[n++];t+=String.fromCharCode((r&15)<<12|(i&63)<<6|(s&63)<<0);break}}return t}function T(e,t,n,a){const r={};if(a>=e.byteLength){console.log("could not read chunk...");return}r.size=e.getUint32(a+0,ee);r.type=C(t.subarray(a+4,a+4+4));if(r.type=="BIN\0"){r.dataView=new DataView(n,a+8,r.size)}else if(r.type=="JSON"){const i=C(t.subarray(a+8,a+8+r.size));try{const s=JSON.parse(i);r.data=s;F.set(s.asset.generator)}catch(e){}}else{}return r}function A(t){const a={};for(let e=0;e<t.json.animations.length;e++){const r=t.json.animations[e];for(let e=0;e<r.channels.length;e++){const i=r.channels[e];const s=t.nodes[i.target.node];const o=r.samplers[i.sampler];const n=t.json.accessors[o.input];const l=t.accBuffers[o.input];const u=t.json.accessors[o.output];const m=t.accBuffers[o.output];t.accBuffersDelete.push(o.output,o.input);if(l&&m){let n=1;if(u.type=="VEC2")n=2;else if(u.type=="VEC3")n=3;else if(u.type=="VEC4")n=4;else b.warn("unknown accOut.type",u.type);const f=[];a[r.name]=true;for(let e=0;e<n;e++){const c=new CABLES.TL.Anim;f.push(c)}if(o.interpolation=="LINEAR"){}else if(o.interpolation=="STEP")for(let e=0;e<n;e++)f[e].defaultEasing=CABLES.EASING_LINEAR;else b.warn("unknown interpolation",o.interpolation);if(l[0]!==0)for(let e=0;e<n;e++)f[e].setValue(0,m[0*n+e]);for(let t=0;t<l.length;t++){se=Math.max(l[t],se);for(let e=0;e<n;e++){f[e].setValue(l[t],m[t*n+e])}}s.setAnim(i.target.path,r.name,f)}else{b.warn("loadAmins bufferIn undefined ",l===undefined);b.warn("loadAmins bufferOut undefined ",m===undefined);b.warn("loadAmins ",o,u);b.warn("loadAmins num accBuffers",t.accBuffers.length);b.warn("loadAmins num accessors",t.json.accessors.length)}}}K.set(null);K.set(Object.keys(a))}function S(n){if(!n||!n.json.cameras)return;n.cameras=n.cameras||[];for(let t=0;t<n.nodes.length;t++){if(n.nodes[t].hasOwnProperty("camera")){const e=new a(n,n.nodes[t]);n.cameras.push(e)}}}function M(){if(!window.DracoDecoder){setTimeout(()=>{M()},100)}Oe()}function r(e){let r=0,t=0;const i=new O;if(!e)return;const n=new Uint8Array(e);let a=0;const s=C(n.subarray(a,4));a+=4;if(s!="glTF")return;i.timing.push("Start parsing",Math.round(performance.now()-i.startTime));const o=new DataView(e);const l=o.getUint32(a,ee);a+=4;const u=o.getUint32(a,ee);a+=4;X.set(l);const m=[];i.chunks=m;m.push(T(o,n,e,a));a+=m[0].size+_;i.json=m[0].data;Z.set(i.json);H.set(i.json.extensionsUsed||[]);m.push(T(o,n,e,a));i.chunks=m;const f=m[0].data.bufferViews;const c=m[0].data.accessors;i.timing.push("Parse buffers",Math.round(performance.now()-i.startTime));if(i.json.extensionsUsed&&i.json.extensionsUsed.indexOf("KHR_draco_mesh_compression")>-1){if(!window.DracoDecoder){b.setUiError("gltfdraco","GLTF draco compression lib not found / add draco op to your patch!");M();return i}else{i.useDraco=true}}b.setUiError("gltfdraco",null);if(f){for(t=0;t<c.length;t++){const h=c[t];const d=f[h.bufferView];let a=0;if(h.type=="SCALAR")a=1;else if(h.type=="VEC2")a=2;else if(h.type=="VEC3")a=3;else if(h.type=="VEC4")a=4;else if(h.type=="MAT4")a=16;else console.error("unknown accessor type",h.type);if(m[1].dataView){if(d){const g=h.count*a;let e=(d.byteOffset||0)+(h.byteOffset||0);let t=d.byteStride||0;let n=null;if(h.componentType==5126||h.componentType==5125){t=t||4;const p=h.componentType==5125;if(p)n=new Uint32Array(g);else n=new Float32Array(g);for(r=0;r<g;r++){if(p)n[r]=m[1].dataView.getUint32(e,ee);else n[r]=m[1].dataView.getFloat32(e,ee);if(t!=4&&(r+1)%a===0)e+=t-a*4;e+=4}}else if(h.componentType==5123){t=t||2;n=new Uint16Array(g);for(r=0;r<g;r++){n[r]=m[1].dataView.getUint16(e,ee);if(t!=2&&(r+1)%a===0)e+=t-a*2;e+=2}}else if(h.componentType==5121){t=t||1;n=new Uint8Array(g);for(r=0;r<g;r++){n[r]=m[1].dataView.getUint8(e,ee);if(t!=1&&(r+1)%a===0)e+=t-a*1;e+=1}}else{console.error("unknown component type",h.componentType)}i.accBuffers.push(n)}else{}}}}i.timing.push("Parse mesh groups",Math.round(performance.now()-i.startTime));i.json.meshes=i.json.meshes||[];if(i.json.meshes)for(t=0;t<i.json.meshes.length;t++){const v=new E(i,i.json.meshes[t]);i.meshes.push(v)}i.timing.push("Parse nodes",Math.round(performance.now()-i.startTime));for(t=0;t<i.json.nodes.length;t++){if(i.json.nodes[t].children)for(r=0;r<i.json.nodes[t].children.length;r++){i.json.nodes[i.json.nodes[t].children[r]].isChild=true}}for(t=0;t<i.json.nodes.length;t++){const x=new y(i.json.nodes[t],i);i.nodes.push(x)}for(t=0;t<i.nodes.length;t++){const x=i.nodes[t];if(!x.children)continue;for(let e=0;e<x.children.length;e++){i.nodes[x.children[e]].parent=x}}for(t=0;t<i.nodes.length;t++){if(i.nodes[t].skin>-1){i.nodes[t].skinRenderer=new w(i.nodes[t])}}le=true;i.timing.push("load anims",Math.round(performance.now()-i.startTime));if(i.json.animations)A(i);i.timing.push("load cameras",Math.round(performance.now()-i.startTime));if(i.json.cameras)S(i);i.timing.push("finished",Math.round(performance.now()-i.startTime));return i}let s=class{constructor(e,n,i,s){this.test=0;this.name=e;this.material=n.material;this.mesh=null;this.geom=new CGL.Geometry("gltf_"+this.name);this.geom.verticesIndices=[];this.bounds=null;if(n.hasOwnProperty("indices"))this.geom.verticesIndices=i.accBuffers[n.indices];i.loadingMeshes=i.loadingMeshes||0;i.loadingMeshes++;if(i.useDraco&&n.extensions.KHR_draco_mesh_compression){const a=i.chunks[0].data.bufferViews[n.extensions.KHR_draco_mesh_compression.bufferView];const r=a.byteLength;const o=new Int8Array(r);let t=a.byteOffset||0;for(let e=0;e<r;e++){o[e]=i.chunks[1].dataView.getInt8(t,ee);t++}const l=window.DracoDecoder;l.decodeGeometry(o.buffer,t=>{const n=new CGL.Geometry("draco mesh "+e);for(let e=0;e<t.attributes.length;e++){const a=t.attributes[e];if(a.name==="position")n.vertices=a.array;else if(a.name==="normal")n.vertexNormals=a.array;else if(a.name==="uv")n.texCoords=a.array;else if(a.name==="color")this.setGeomVertCols(n,a.array);else if(a.name==="joints")n.setAttribute("attrJoints",Array.from(a.array),4);else if(a.name==="weights"){const r=new Float32Array(a.array.length/a.itemSize*4);for(let t=0;t<a.array.length/a.itemSize;t++){r[t*4]=r[t*4+1]=r[t*4+2]=r[t*4+3]=0;for(let e=0;e<a.itemSize;e++)r[t*4+e]=a.array[t*a.itemSize+e]}n.setAttribute("attrWeights",r,4)}else b.logWarn("unknown draco attrib",a)}t.attributes=null;n.verticesIndices=t.index.array;this.setGeom(n);this.mesh=null;i.loadingMeshes--;if(s)s(this)},e=>{b.logError(e)})}else{i.loadingMeshes--;this.fillGeomAttribs(i,this.geom,n.attributes);if(n.targets){console.log("prim.targets",n.targets.length);for(let e=0;e<n.targets.length;e++){let t=this.geom.copy();if(n.hasOwnProperty("indices"))t.verticesIndices=i.accBuffers[n.indices];this.fillGeomAttribs(i,t,n.targets[e],false);{for(let e=0;e<t.vertices.length;e++)t.vertices[e]+=this.geom.vertices[e];t.calculateNormals();for(let e=0;e<t.vertices.length;e++)t.vertices[e]-=this.geom.vertices[e]}this.geom.morphTargets.push(t)}}if(s)s(this)}}setGeomVertCols(e,n){if(n instanceof Float32Array){let t=false;for(let e=0;e<n.length;e++){if(n[e]>1){t=true;continue}}if(t)for(let e=0;e<n.length;e++)n[e]/=65535;e.vertexColors=n}else if(n instanceof Uint16Array){const t=new Float32Array(n.length);for(let e=0;e<n.length;e++)t[e]=n[e]/65535;e.vertexColors=t}else e.vertexColors=n}fillGeomAttribs(e,t,n,a){if(n.hasOwnProperty("POSITION"))t.vertices=e.accBuffers[n.POSITION];if(n.hasOwnProperty("NORMAL"))t.vertexNormals=e.accBuffers[n.NORMAL];if(n.hasOwnProperty("TEXCOORD_0"))t.texCoords=e.accBuffers[n.TEXCOORD_0];if(n.hasOwnProperty("TANGENT"))t.tangents=e.accBuffers[n.TANGENT];if(n.hasOwnProperty("COLOR_0"))this.setGeomVertCols(t,e.accBuffers[n.COLOR_0]);if(n.hasOwnProperty("TEXCOORD_1"))t.setAttribute("attrTexCoord1",e.accBuffers[n.TEXCOORD_1],2);if(n.hasOwnProperty("TEXCOORD_2"))t.setAttribute("attrTexCoord2",e.accBuffers[n.TEXCOORD_2],2);if(n.hasOwnProperty("TEXCOORD_3"))t.setAttribute("attrTexCoord3",e.accBuffers[n.TEXCOORD_3],2);if(n.hasOwnProperty("TEXCOORD_4"))t.setAttribute("attrTexCoord4",e.accBuffers[n.TEXCOORD_4],2);if(n.hasOwnProperty("WEIGHTS_0")){t.setAttribute("attrWeights",e.accBuffers[n.WEIGHTS_0],4)}if(n.hasOwnProperty("JOINTS_0")){if(!e.accBuffers[n.JOINTS_0])console.log("no !gltf.accBuffers[attribs.JOINTS_0]");t.setAttribute("attrJoints",e.accBuffers[n.JOINTS_0],4)}if(n.hasOwnProperty("POSITION"))e.accBuffersDelete.push(n.POSITION);if(n.hasOwnProperty("NORMAL"))e.accBuffersDelete.push(n.NORMAL);if(n.hasOwnProperty("TEXCOORD_0"))e.accBuffersDelete.push(n.TEXCOORD_0);if(n.hasOwnProperty("TANGENT"))e.accBuffersDelete.push(n.TANGENT);if(n.hasOwnProperty("COLOR_0"))e.accBuffersDelete.push(n.COLOR_0);if(n.hasOwnProperty("TEXCOORD_1"))e.accBuffersDelete.push(n.TEXCOORD_1);if(n.hasOwnProperty("TEXCOORD_2"))e.accBuffersDelete.push(n.TEXCOORD_2);if(n.hasOwnProperty("TEXCOORD_3"))e.accBuffersDelete.push(n.TEXCOORD_3);if(n.hasOwnProperty("TEXCOORD_4"))e.accBuffersDelete.push(n.TEXCOORD_4);if(a!==false)if(t&&t.verticesIndices)this.setGeom(t)}setGeom(n){this.morphGeom=n.copy();if(G.get()=="X-ZY"){for(let t=0;t<n.vertexNormals.length;t+=3){let e=n.vertexNormals[t+2];n.vertexNormals[t+2]=n.vertexNormals[t+1];n.vertexNormals[t+1]=-e}}if(R.get()=="XZ-Y"){for(let t=0;t<n.vertices.length;t+=3){let e=n.vertices[t+2];n.vertices[t+2]=-n.vertices[t+1];n.vertices[t+1]=e}}if(!n.vertexNormals.length||D.get())n.calculateNormals();if((!n.biTangents||n.biTangents.length==0)&&n.tangents){const t=vec3.create();const e=vec3.create();const a=n.tangents;n.tangents=new Float32Array(a.length/4*3);n.biTangents=new Float32Array(a.length/4*3);for(let e=0;e<a.length;e+=4){const r=e/4*3;vec3.cross(t,[n.vertexNormals[r],n.vertexNormals[r+1],n.vertexNormals[r+2]],[a[e],a[e+1],a[e+2]]);vec3.div(t,t,[a[e+3],a[e+3],a[e+3]]);vec3.normalize(t,t);n.biTangents[r+0]=t[0];n.biTangents[r+1]=t[1];n.biTangents[r+2]=t[2];n.tangents[r+0]=a[e+0];n.tangents[r+1]=a[e+1];n.tangents[r+2]=a[e+2]}}if(n.tangents.length===0||D.get())n.calcTangentsBitangents();this.geom=n;this.bounds=n.getBounds()}render(t,e){if(!this.mesh&&this.geom&&this.geom.verticesIndices){let e=this.geom;if(this.geom.vertices.length/3>64e3){e=this.geom.copy();e.unIndex(false,true)}this.mesh=new CGL.Mesh(t,e);this.mesh._geom=null}else{if(this.geom&&this.geom.morphTargets.length){this.test=oe*11.7;if(this.test>=this.geom.morphTargets.length-1)this.test=0;const a=this.geom.morphTargets[Math.floor(this.test)];const r=this.geom.morphTargets[Math.floor(this.test+1)];if(a&&a.vertices){if(this.morphGeom.vertexNormals.length!=a.vertexNormals.length)this.morphGeom.vertexNormals=new Float32Array(a.vertexNormals.length);const i=this.test%1;for(let e=0;e<this.morphGeom.vertices.length;e++){this.morphGeom.vertices[e]=this.geom.vertices[e]+(1-i)*a.vertices[e]+i*r.vertices[e];this.morphGeom.vertexNormals[e]=(1-i)*a.vertexNormals[e]+i*r.vertexNormals[e]}this.mesh.updateNormals(this.morphGeom);this.mesh.updateVertices(this.morphGeom)}}const n=!e&&this.material!=-1&&ie.shaders[this.material];if(n)t.pushShader(ie.shaders[this.material]);if(this.mesh)this.mesh.render(t.getShader(),e);if(n)t.popShader()}}};const E=class{constructor(t,e){this.bounds=new CGL.BoundingBox;this.meshes=[];this.name=e.name;const n=e.primitives;for(let e=0;e<n.length;e++){const a=new s(this.name,n[e],t,e=>{this.bounds.apply(e.bounds)});this.meshes.push(a)}}render(t,n){for(let e=0;e<this.meshes.length;e++){this.meshes[e].render(t,n)}}};const y=class{constructor(e,t){this.isChild=e.isChild||false;this.name=e.name;if(e.hasOwnProperty("camera"))this.camera=e.camera;this.hidden=false;this.mat=mat4.create();this._animMat=mat4.create();this._tempMat=mat4.create();this._tempQuat=quat.create();this._tempRotmat=mat4.create();this.mesh=null;this.children=[];this._node=e;this._gltf=t;this.absMat=mat4.create();this.addTranslate=null;this.updateMatrix();this._animActions={}}get skin(){if(this._node.hasOwnProperty("skin"))return this._node.skin;else return-1}hasSkin(){if(this._node.hasOwnProperty("skin"))return this._gltf.json.skins[this._node.skin].name||"unknown";return false}updateMatrix(){mat4.identity(this.mat);if(this._node.translation)mat4.translate(this.mat,this.mat,this._node.translation);if(this._node.rotation){const e=mat4.create();this._rot=this._node.rotation;mat4.fromQuat(e,this._node.rotation);mat4.mul(this.mat,this.mat,e)}if(this._node.scale){this._scale=this._node.scale;mat4.scale(this.mat,this.mat,this._scale)}if(this._node.hasOwnProperty("mesh")){this.mesh=this._gltf.meshes[this._node.mesh]}if(this._node.children){for(let e=0;e<this._node.children.length;e++){this._gltf.json.nodes[e].isChild=true;if(this._gltf.nodes[this._node.children[e]])this._gltf.nodes[this._node.children[e]].isChild=true;this.children.push(this._node.children[e])}}}unHide(){this.hidden=false;for(let e=0;e<this.children.length;e++)if(this.children[e].unHide)this.children[e].unHide()}calcBounds(t,e,n){const a=mat4.create();if(e)mat4.copy(a,e);if(this.mat)mat4.mul(a,a,this.mat);if(this.mesh){const r=this.mesh.bounds.copy();r.mulMat4(a);n.apply(r);if(n.changed){re.push(r._min[0]||0,r._min[1]||0,r._min[2]||0);re.push(r._max[0]||0,r._max[1]||0,r._max[2]||0)}}for(let e=0;e<this.children.length;e++){if(t.nodes[this.children[e]]&&t.nodes[this.children[e]].calcBounds){const i=t.nodes[this.children[e]].calcBounds(t,a,n);n.apply(i)}}if(n.changed)return n;else return null}setAnimAction(t){if(t&&!this._animActions[t])return console.log("no action found: ",t);for(let e in this._animActions[t]){if(e=="translation")this._animTrans=this._animActions[t][e];else if(e=="rotation")this._animRot=this._animActions[t][e];else if(e=="scale")this._animScale=this._animActions[t][e];else console.warn("unknown anim path",e,this._animActions[t][e])}}setAnim(e,t,n){this._animActions[t]=this._animActions[t]||{};if(this._animActions[t][e])b.warn("animation action path already exists",t,e,this._animActions[t][e]);this._animActions[t][e]=n;if(e=="translation")this._animTrans=n;else if(e=="rotation")this._animRot=n;else if(e=="scale")this._animScale=n;else console.warn("unknown anim path",e,n)}modelMatLocal(){return this._animMat||this.mat}modelMatAbs(){return this.absMat}transform(e,t){if(!t)t=oe;if(!this._animTrans&&!this._animRot&&!this._animScale){mat4.mul(e.mMatrix,e.mMatrix,this.mat)}else{mat4.identity(this._animMat);const n=true;if(n&&this._animTrans){mat4.translate(this._animMat,this._animMat,[this._animTrans[0].getValue(t),this._animTrans[1].getValue(t),this._animTrans[2].getValue(t)])}else if(this.translation)mat4.translate(this._animMat,this._animMat,this.translation);if(n&&this._animRot){CABLES.TL.Anim.slerpQuaternion(t,this._tempQuat,this._animRot[0],this._animRot[1],this._animRot[2],this._animRot[3]);mat4.fromQuat(this._tempMat,this._tempQuat);mat4.mul(this._animMat,this._animMat,this._tempMat)}else if(this._rot){mat4.fromQuat(this._tempRotmat,this._rot);mat4.mul(this._animMat,this._animMat,this._tempRotmat)}if(n&&this._animScale){mat4.scale(this._animMat,this._animMat,[this._animScale[0].getValue(t),this._animScale[1].getValue(t),this._animScale[2].getValue(t)])}else if(this._scale)mat4.scale(this._animMat,this._animMat,this._scale);mat4.mul(e.mMatrix,e.mMatrix,this._animMat)}if(this.addTranslate)mat4.translate(e.mMatrix,e.mMatrix,this.addTranslate);mat4.copy(this.absMat,e.mMatrix)}render(t,n,a,r,i,s,o){if(!n)t.pushModelMatrix();if(o===undefined)o=ie.time;if(!n||this.skinRenderer)this.transform(t,o);if(this.hidden&&!s){}else{if(this.skinRenderer){this.skinRenderer.renderStart(t,o);if(!a)this.mesh.render(t,r);this.skinRenderer.renderFinish(t)}else{if(this.mesh&&!a){this.mesh.render(t,r)}}}if(!i&&!this.hidden)for(let e=0;e<this.children.length;e++)if(ie.nodes[this.children[e]]){ie.nodes[this.children[e]].render(t,n,a,r,i,s,o)}if(!n)t.popModelMatrix()}};let c=null;function h(){if(c)gui.mainTabs.closeTab(c.id);c=null}function d(n,a,r){if(!ie)return;n+='<tr class="row">';let i="";let s="";for(let t=1;t<r;t++){s+="&nbsp;&nbsp;&nbsp;";let e="identBg";if(t==1)e="identBgLevel0";i+='<td class="ident '+e+'" ><div style=""></div></td>'}let e=CABLES.uuid();n+=i;n+='<td colspan="'+(21-r)+'">';if(a.mesh&&a.mesh.meshes.length)n+='<span class="icon icon-cube"></span>&nbsp;';else n+='<span class="icon icon-circle"></span> &nbsp;';n+=a.name+"</td><td></td>";if(a.mesh){n+="<td>";for(let e=0;e<a.mesh.meshes.length;e++){n+=a.mesh.meshes[e].name}n+="</td>";n+="<td>";n+=a.hasSkin()||"-";n+="</td>";n+="<td>";let t=0;for(let e=0;e<a.mesh.meshes.length;e++){if(a.mesh.meshes[e].material){n+=ie.json.materials[a.mesh.meshes[e].material].name;t++}}if(t==0)n+="none";n+="</td>"}else{n+="<td>-</td><td>-</td><td>-</td>"}n+="<td>";if(a._animRot||a._animScale||a._animTrans){if(a._animRot)n+="Rot ";if(a._animScale)n+="Scale ";if(a._animTrans)n+="Trans "}else n+="None";n+="</td>";n+="<td>";let t="";if(a.hidden)t="node-hidden";n+="<a onclick=\"gui.corePatch().getOpById('"+b.id+"').exposeNode('"+a.name+"','transform')\" class=\"treebutton\">Transform</a>";n+=" <a onclick=\"gui.corePatch().getOpById('"+b.id+"').exposeNode('"+a.name+"','hierarchy')\" class=\"treebutton\">Hierarchy</a>";n+=" <a onclick=\"gui.corePatch().getOpById('"+b.id+"').exposeNode('"+a.name+'\')" class="treebutton">Node</a>';if(a.hasSkin())n+=" <a onclick=\"gui.corePatch().getOpById('"+b.id+"').exposeNode('"+a.name+'\',false,{skin:true});" class="treebutton">Skin</a>';n+="</td><td>";n+='&nbsp;<span class="icon iconhover icon-eye '+t+'" onclick="gui.corePatch().getOpById(\''+b.id+"').toggleNodeVisibility('"+a.name+"');this.classList.toggle('node-hidden');\"></span>";n+="</td>";n+="</tr>";if(a.children){for(let e=0;e<a.children.length;e++)n=d(n,ie.nodes[a.children[e]],r+1)}return n}function g(t,e){let n="<tr>";n+=" <td>"+e+"</td>";n+=" <td>"+t.name+"</td>";n+=" <td>";if(t.pbrMetallicRoughness&&t.pbrMetallicRoughness.baseColorFactor){let e="";e+=""+Math.round(t.pbrMetallicRoughness.baseColorFactor[0]*255);e+=","+Math.round(t.pbrMetallicRoughness.baseColorFactor[1]*255);e+=","+Math.round(t.pbrMetallicRoughness.baseColorFactor[2]*255);n+='<div style="width:15px;height:15px;;background-color:rgb('+e+')">&nbsp;</a>'}n+=' <td style="">'+(ie.shaders[e]?"-":"<a onclick=\"gui.corePatch().getOpById('"+b.id+"').assignMaterial('"+t.name+'\')" class="treebutton">Assign</a>')+"<td>";n+="<td>";n+="</tr>";return n}function e(){if(!ie)return;const e=performance.now();const a={};let r='<div style="overflow:scroll;width:100%;height:100%">';r+="generator:"+ie.json.asset.generator;if(!ie.json.materials||ie.json.materials.length==0){r+="<h3>Materials</h3>";r+="No materials"}else{r+="<h3>Materials ("+ie.json.materials.length+")</h3>";r+='<table class="table treetable">';r+="<tr>";r+=" <th>Index</th>";r+=" <th>Name</th>";r+=" <th>Color</th>";r+=" <th>Function</th>";r+=" <th></th>";r+="</tr>";for(var i=0;i<ie.json.materials.length;i++){r+=g(ie.json.materials[i],i)}r+="</table>"}r+="<h3>Nodes ("+ie.nodes.length+")</h3>";r+='<table class="table treetable">';r+="<tr>";r+=' <th colspan="21">Name</th>';r+=" <th>Mesh</th>";r+=" <th>Skin</th>";r+=" <th>Material</th>";r+=" <th>Anim</th>";r+=" <th>Expose</th>";r+=" <th></th>";r+="</tr>";for(var i=0;i<ie.nodes.length;i++){if(!ie.nodes[i].isChild)r=d(r,ie.nodes[i],1)}r+="</table>";r+="<h3>Meshes ("+ie.json.meshes.length+")</h3>";r+='<table class="table treetable">';r+="<tr>";r+=" <th>Name</th>";r+=" <th>Node</th>";r+=" <th>Material</th>";r+=" <th>Vertices</th>";r+=" <th>Attributes</th>";r+="</tr>";let s=[];a.meshes=0;for(var i=0;i<ie.json.meshes.length;i++){r+="<tr>";r+="<td>"+ie.json.meshes[i].name+"</td>";r+="<td>";let e=0;let t="";for(var o=0;o<ie.json.nodes.length;o++){if(ie.json.nodes[o].mesh==i){e++;if(e==1){t=ie.json.nodes[o].name}}}if(e>1)r+=e+" nodes ("+t+" ...)";else r+=t;r+="</td>";r+="<td>";for(var o=0;o<ie.json.meshes[i].primitives.length;o++){if(ie.json.meshes[i].primitives[o].material){r+=ie.json.materials[ie.json.meshes[i].primitives[o].material].name+" "}else r+="None"}r+="</td>";r+="<td>";let n=0;for(var o=0;o<ie.json.meshes[i].primitives.length;o++){if(ie.json.meshes[i].primitives[o].attributes.POSITION){n+=parseInt(ie.json.accessors[ie.json.meshes[i].primitives[o].attributes.POSITION].count)}}r+=n;r+="</td>";r+="<td>";for(let e=0;e<ie.json.meshes[i].primitives.length;e++){if(e>0)r+=", ";r+=Object.keys(ie.json.meshes[i].primitives[e].attributes)}r+="</td>";r+="</tr>";for(let t=0;t<ie.json.meshes[i].primitives.length;t++){let e=ie.json.accessors[ie.json.meshes[i].primitives[t].indices].bufferView;if(s.indexOf(e)==-1){s.push(e);if(ie.json.bufferViews[e])a.meshes+=ie.json.bufferViews[e].byteLength}for(let e in ie.json.meshes[i].primitives[t].attributes){const l=ie.json.meshes[i].primitives[t].attributes[e];const u=ie.json.accessors[l].bufferView;if(s.indexOf(u)==-1){s.push(u);if(ie.json.bufferViews[u])a.meshes+=ie.json.bufferViews[u].byteLength}}}}r+="</table>";if(ie.json.animations){r+="<h3>Animations ("+ie.json.animations.length+")</h3>";r+='<table class="table treetable">';r+="<tr>";r+="  <th>Name</th>";r+="  <th>Target node</th>";r+="  <th>Path</th>";r+="  <th>Interpolation</th>";r+="  <th>Keys</th>";r+="</tr>";a.animations=0;for(let n=0;n<ie.json.animations.length;n++){for(let t=0;t<ie.json.animations[n].samplers.length;t++){let e=ie.json.accessors[ie.json.animations[n].samplers[t].input].bufferView;if(s.indexOf(e)==-1){s.push(e);a.animations+=ie.json.bufferViews[e].byteLength}e=ie.json.accessors[ie.json.animations[n].samplers[t].output].bufferView;if(s.indexOf(e)==-1){s.push(e);a.animations+=ie.json.bufferViews[e].byteLength}}for(let e=0;e<ie.json.animations[n].channels.length;e++){r+="<tr>";r+="  <td>"+ie.json.animations[n].name+" ("+n+")</td>";r+="  <td>"+ie.nodes[ie.json.animations[n].channels[e].target.node].name+"</td>";r+="  <td>";r+=ie.json.animations[n].channels[e].target.path+" ";r+="  </td>";const m=ie.json.animations[n].channels[e].sampler;const f=ie.json.animations[n].samplers[m];r+="  <td>"+f.interpolation+"</td>";r+="  <td>"+ie.json.accessors[f.output].count;r+="&nbsp;&nbsp;<a onclick=\"gui.corePatch().getOpById('"+b.id+"').showAnim('"+n+"','"+e+'\')" class="icon icon-search"></a>';r+="</td>";r+="</tr>"}}r+="</table>"}else{r+="<h3>Animations (0)</h3>"}if(ie.json.images){r+="<h3>Images ("+ie.json.images.length+")</h3>";r+='<table class="table treetable">';r+="<tr>";r+="  <th>name</th>";r+="  <th>type</th>";r+="  <th>func</th>";r+="</tr>";a.images=0;for(var i=0;i<ie.json.images.length;i++){if(ie.json.images[i].bufferView)a.images+=ie.json.bufferViews[ie.json.images[i].bufferView].byteLength;r+="<tr>";r+="<td>"+ie.json.images[i].name+"</td>";r+="<td>"+ie.json.images[i].mimeType+"</td>";r+="<td>";let e=ie.json.images[i].name;if(e===undefined)e=ie.json.images[i].bufferView;r+="<a onclick=\"gui.corePatch().getOpById('"+b.id+"').exposeTexture('"+e+'\')" class="treebutton">Expose</a>';r+="</td>";r+="<tr>"}r+="</table>"}if(ie.json.cameras){r+="<h3>Cameras ("+ie.json.cameras.length+")</h3>";r+='<table class="table treetable">';r+="<tr>";r+="  <th>name</th>";r+="  <th>type</th>";r+="  <th>info</th>";r+="</tr>";for(var i=0;i<ie.json.cameras.length;i++){r+="<tr>";r+="<td>"+ie.json.cameras[i].name+"</td>";r+="<td>"+ie.json.cameras[i].type+"</td>";r+="<td>";r+="yfov: "+Math.round(ie.json.cameras[i].perspective.yfov*100)/100;r+=", ";r+="zfar: "+Math.round(ie.json.cameras[i].perspective.zfar*100)/100;r+=", ";r+="znear: "+Math.round(ie.json.cameras[i].perspective.znear*100)/100;r+="</td>";r+="<tr>"}r+="</table>"}if(ie.json.skins){r+="<h3>Skins ("+ie.json.skins.length+")</h3>";r+='<table class="table treetable">';r+="<tr>";r+="  <th>name</th>";r+="  <th></th>";r+="  <th>total joints</th>";r+="</tr>";for(var i=0;i<ie.json.skins.length;i++){r+="<tr>";r+="<td>"+ie.json.skins[i].name+"</td>";r+="<td>"+"</td>";r+="<td>"+ie.json.skins[i].joints.length+"</td>";r+="<td>";r+="</td>";r+="<tr>"}r+="</table>"}let t=0;if(ie.json.buffers)t=ie.json.buffers[0].byteLength;r+="<h3>Binary Data ("+p(t)+")</h3>";r+='<table class="table treetable">';r+="<tr>";r+="  <th>name</th>";r+="  <th>size</th>";r+="  <th>%</th>";r+="</tr>";let n=t;for(var i in a){r+="<tr>";r+="<td>"+i+"</td>";r+="<td>"+p(a[i])+" </td>";r+="<td>"+Math.round(a[i]/t*100)+"% </td>";r+="<tr>";n-=a[i]}if(n!=0){r+="<tr>";r+="<td>unknown</td>";r+="<td>"+p(n)+" </td>";r+="<td>"+Math.round(n/t*100)+"% </td>";r+="<tr>"}r+="</table>";r+="</div>";c=new CABLES.UI.Tab("GLTF",{icon:"cube",infotext:"tab_gltf",padding:true,singleton:true});gui.mainTabs.addTab(c,true);c.addEventListener("onClose",h);c.html(r);gui.maintabPanel.show(true)}function p(e){if(e>1024)return Math.round(e/1024)+" kb";if(e>1024*500)return Math.round(e/1024)+" mb";else return e+" bytes"}const w=class{constructor(e){this._mod=null;this._node=e}renderFinish(e){e.popModelMatrix();this._mod.unbind()}renderStart(e,t){if(!this._mod){this._mod=new CGL.ShaderModifier(e,b.name);this._mod.addModule({priority:-2,name:"MODULE_VERTEX_POSITION",srcHeadVert:f.skin_head_vert||"",srcBodyVert:f.skin_vert||""});this._mod.addUniformVert("m4[]","MOD_boneMats",[]);const l=vec3.create()}let n=[];const a=this._node.skin;const r=ie.json.skins[a].joints.length*16;if(n.length!=r)n.length=r;const i=mat4.create();const s=mat4.create();const o=ie.nodes[this._node.skin];for(let t=0;t<ie.json.skins[a].joints.length;t++){const u=ie.json.skins[a].joints[t];const m=ie.nodes[u];for(let e=0;e<16;e++)i[e]=ie.accBuffers[ie.json.skins[a].inverseBindMatrices][t*16+e];mat4.mul(s,m.modelMatAbs(),i);for(let e=0;e<s.length;e++)n[t*16+e]=s[e]}this._mod.setUniformValue("MOD_boneMats",n);this._mod.define("SKIN_NUM_BONES",ie.json.skins[a].joints.length);this._mod.bind();e.pushModelMatrix();mat4.identity(e.mMatrix)}};const t=b.inString("data"),n=b.inTrigger("Render"),o=b.inUrl("glb File",[".glb"]),l=b.inBool("Draw",true),u=b.inDropDown("Camera",["None"],"None"),m=b.inString("Animation",""),v=b.inTriggerButton("Show Structure"),x=b.inSwitch("Center",["None","XYZ","XZ"],"XYZ"),L=b.inBool("Rescale",true),I=b.inFloat("Rescale Size",2.5),P=b.inFloat("Time"),N=b.inBool("Sync to timeline",false),j=b.inBool("Loop",true),G=b.inSwitch("Normals Format",["XYZ","X-ZY"],"XYZ"),R=b.inSwitch("Vertices Format",["XYZ","XZ-Y"],"XYZ"),D=b.inBool("Calc Normals",false),B=b.inObject("Materials"),U=b.inArray("Hide Nodes"),V=b.inBool("Active",true),k=b.outTrigger("Render Before"),z=b.outTrigger("Next"),F=b.outString("Generator"),X=b.outNumber("GLTF Version"),H=b.outArray("GLTF Extensions Used"),Y=b.outNumber("Anim Length",0),W=b.outNumber("Anim Time",0),Z=b.outObject("Json"),K=b.outArray("Anims"),q=b.outArray("BoundingPoints"),J=b.outObject("Bounds"),Q=b.outTrigger("Finished"),$=b.outBool("Loading");b.setPortGroup("Timing",[P,N,j]);const ee=true;const te=b.patch.cgl;o.onChange=R.onChange=D.onChange=G.onChange=Oe;let ne=false;let ae=null;let re=[];let ie=null;let se=0;let oe=0;let le=true;let ue=null;let me=null;let fe=null;const ce=vec3.create();let he=0;let de=false;const ge=vec3.create();v.onTriggered=e;t.setUiAttribs({hideParam:true,hidePort:true});t.onChange=Se;U.onChange=Ae;m.onChange=Ee;b.setPortGroup("Transform",[L,I,x]);x.onChange=ve;function pe(){const t=["None"];if(ie){for(let e=0;e<ie.nodes.length;e++){if(ie.nodes[e].camera>=0){t.push(ie.nodes[e].name)}}}u.uiAttribs.values=t}function ve(){de=x.get()!="None";if(ie&&ie.bounds){ge.set(ie.bounds.center);ge[0]=-ge[0];ge[1]=-ge[1];ge[2]=-ge[2];if(x.get()=="XZ")ge[1]=-ie.bounds.minY}}L.onChange=function(){I.setUiAttribs({greyout:!L.get()})};B.onChange=function(){le=true};b.onDelete=function(){h()};N.onChange=function(){P.setUiAttribs({greyout:N.get()})};u.onChange=xe;function xe(){ae=null;if(!ie)return;for(let e=0;e<ie.nodes.length;e++){if(ie.nodes[e].name==u.get())ae=new a(ie,ie.nodes[e])}}n.onTriggered=function(){if(!ne)return;if(!V.get())return;if(N.get())oe=b.patch.timer.getTime();else oe=Math.max(0,P.get());if(j.get()){oe%=se;if(oe<he)Q.trigger()}else{if(se>0&&oe>=se)Q.trigger()}he=oe;te.pushModelMatrix();W.set(oe||0);if(ne&&ie&&ie.bounds){if(L.get()){let e=I.get()/ie.bounds.maxAxis;ie.scale=e;vec3.set(ce,e,e,e);mat4.scale(te.mMatrix,te.mMatrix,ce)}if(de){mat4.translate(te.mMatrix,te.mMatrix,ge)}}te.frameStore.currentScene=ie;k.trigger();if(ne){if(le)Ce();if(ae)ae.start(oe);if(ie){ie.time=oe;{if(ie.bounds&&te.shouldDrawHelpers(b)){if(CABLES.UI.renderHelper)te.pushShader(CABLES.GL_MARKER.getDefaultShader(te));else te.pushShader(CABLES.GL_MARKER.getSelectedShader(te));ie.bounds.render(te);te.popShader()}if(l.get()){for(let e=0;e<ie.nodes.length;e++)if(!ie.nodes[e].isChild)ie.nodes[e].render(te)}else{for(let e=0;e<ie.nodes.length;e++)if(!ie.nodes[e].isChild)ie.nodes[e].render(te,false,true)}}}}z.trigger();te.frameStore.currentScene=null;te.popModelMatrix();if(ae)ae.end()};function be(){if(ie.loadingMeshes>0){setTimeout(be,100);return}le=true;Y.set(se);ie.bounds=new CGL.BoundingBox;if(!ie)b.setUiError("urlerror",'could not load gltf:<br/>"'+o.get()+'"',2);else b.setUiError("urlerror",null);for(let e=0;e<ie.nodes.length;e++){const t=ie.nodes[e];t.updateMatrix();if(!t.isChild)t.calcBounds(ie,null,ie.bounds)}if(ie.bounds)J.set(ie.bounds);Ae();if(c)e();pe();xe();q.set(re);if(ie){b.setUiAttrib({extendTitle:CABLES.basename(o.get())});ie.loaded=Date.now()}if(ie){for(let e=0;e<ie.nodes.length;e++){if(!ie.nodes[e].isChild){ie.nodes[e].render(te,false,true,true,false,true,0)}}for(let e=0;e<ie.nodes.length;e++){const t=ie.nodes[e];t.children=Le(t.children)}}ve();Ee();$.set(false);te.patch.loading.finished(me);me=null;if(ie.chunks.length>1)ie.chunks[1]=null;if(ie.chunks.length>2)ie.chunks[2]=null;if(ie.accBuffersDelete){for(let e=0;e<ie.accBuffersDelete.length;e++){ie.accBuffers[ie.accBuffersDelete[e]]=null}}ne=true}function _e(e){if(!V.get())return;if(!me)me=te.patch.loading.start("gltf"+o.get(),o.get());let t=b.patch.getFilePath(String(o.get()));if(e)t+="?rnd="+CABLES.generateUUID();ne=false;$.set(true);const n=new XMLHttpRequest;n.open("GET",t,true);n.responseType="arraybuffer";h();te.patch.loading.addAssetLoadingTask(()=>{n.onload=e=>{re=[];se=0;const t=n.response;ie=r(t);be()};n.send(null)})}b.onFileChanged=function(e){ie.accBuffersDelete[i];if(e&&e.length>3&&o.get()&&o.get().indexOf(e)>-1)Oe(true)};b.onFileChanged=function(e){if(o.get()&&o.get().indexOf(e)>-1){Oe(true)}};V.onChange=()=>{if(V.get())Oe();if(!V.get()){ie=null}};function Oe(e){clearTimeout(ue);ue=setTimeout(function(){_e(e)},30)}function Ce(){if(!ie)return;ie.shaders={};if(B.links.length==1&&B.get()){const n=B.links[0].portOut.parent;const a=n.getPort("Shader");const r=n.getPort("Material Name");console.log(B.get());if(!a&&!r){const i=B.get();for(let t in i){console.log("matname",t);if(i[t]&&ie.json.materials)for(let e=0;e<ie.json.materials.length;e++){console.log("gltf.json.materials[i].name",ie.json.materials[e].name);if(ie.json.materials[e].name==t){if(ie.shaders[e]){n.warn("double material assignment:",name)}ie.shaders[e]=i[t];console.log("shader found!",ie.shaders[e])}}}}}if(B.get()){for(let e=0;e<B.links.length;e++){const t=B.links[e].portOut.parent;const a=t.getPort("Shader");const r=t.getPort("Material Name");if(a&&r&&a.get()){const name=r.get();if(ie.json.materials)for(let e=0;e<ie.json.materials.length;e++)if(ie.json.materials[e].name==name){if(ie.shaders[e]){t.warn("double material assignment:",name)}ie.shaders[e]=a.get()}}}}le=false;if(c)e()}function Te(){const t=U.get();if(!ie||!fe||!fe.hiddenNodes)return;if(!t){return}for(let e=0;e<t.length;e++){const n=ie.getNode(t[e]);if(n)n.hidden=true}}function Ae(){if(!fe)Se();if(!ie)return;ie.unHideAll();if(fe&&fe.hiddenNodes){for(const e in fe.hiddenNodes){const t=ie.getNode(e);if(t)t.hidden=true;else b.verbose("node to be hidden not found",e,t)}}Te()}function Se(){fe=t.get();if(!fe||fe==="")fe={};else fe=JSON.parse(fe);if(ie)Ae();return fe}function Me(){t.set(JSON.stringify(fe))}function Ee(){if(ie&&ie.nodes){for(let e=0;e<ie.nodes.length;e++){ie.nodes[e].setAnimAction(m.get())}}}function ye(t,n){for(let e=0;e<ie.nodes.length;e++){if(ie.nodes[e].children.indexOf(n)>=0){t.push(ie.nodes[e]);if(ie.nodes[e].isChild)ye(t,e)}}}b.exposeTexture=function(e){const t=gui.corePatch().addOp("Ops.Gl.GLTF.GltfTexture");t.getPort("Name").set(e);we(t,1);b.patch.link(b,z.name,t,"Render");gui.patchView.centerSelectOp(t.id,true);gui.patchView.testCollision(t)};function we(e,t){t=t||1;e.setUiAttrib({translate:{x:b.uiAttribs.translate.x,y:b.uiAttribs.translate.y+t*CABLES.GLUI.glUiConfig.newOpDistanceY}})}b.exposeNode=function(n,e,a){let t=e=="hierarchy";if(t){let r=[];for(let e=0;e<ie.nodes.length;e++){if(ie.nodes[e].name==n){let t=[];const i=ie.nodes[e];ye(t,e);t=t.reverse();t.push(i,i);let n=z.name;let a=b;for(let e=0;e<t.length;e++){const s=gui.corePatch().addOp("Ops.Gl.GLTF.GltfNode_v2");s.getPort("Node Name").set(t[e].name);b.patch.link(a,n,s,"Render");we(s,e);if(e==t.length-1){s.getPort("Transformation").set(false)}else{s.getPort("Draw Mesh").set(false);s.getPort("Draw Childs").set(false)}n="Next";a=s;r.push(s);gui.patchView.testCollision(s)}}}for(let e=0;e<r.length;e++){r[e].selectChilds()}}else{let t="Ops.Gl.GLTF.GltfNode_v2";if(a&&a.skin)t="Ops.Gl.GLTF.GltfSkin";if(e=="transform")t="Ops.Gl.GLTF.GltfNodeTransform_v2";gui.serverOps.loadOpLibs(t,()=>{let e=gui.corePatch().addOp(t);e.getPort("Node Name").set(n);we(e);b.patch.link(b,z.name,e,"Render");gui.patchView.centerSelectOp(e.id,true);gui.patchView.testCollision(e)})}CABLES.UI.MODAL.hide()};b.assignMaterial=function(e){const t=gui.corePatch().addOp("Ops.Gl.GLTF.GltfSetMaterial");t.getPort("Material Name").set(e);b.patch.link(b,B.name,t,"Material");gui.patchView.centerSelectOp(t.id,true);we(t);gui.patchView.testCollision(t);CABLES.UI.MODAL.hide()};b.toggleNodeVisibility=function(e){const t=ie.getNode(e);t.hidden=!t.hidden;fe.hiddenNodes=fe.hiddenNodes||{};if(t)if(t.hidden)fe.hiddenNodes[e]=true;else delete fe.hiddenNodes[e];Me()};b.showAnim=function(e,t){console.log("showanim",t);console.log(ie.json.animations[e].channels[t]);const n=ie.json.animations[e];const a=ie.json.animations[e].channels[t];const r=ie.nodes[a.target.node];const i=n.samplers[a.sampler];const s=ie.json.accessors[i.input];const o=ie.accBuffers[i.input];const l=ie.json.accessors[i.output];const u=ie.accBuffers[i.output];console.log({channel:a,sampler:i,bufferIn:o,bufferOut:u})};function Le(n){const a={},r=[];for(let e=0,t=n.length;e<t;++e){if(!a.hasOwnProperty(n[e])){r.push(n[e]);a[n[e]]=1}}return r}};Ops.Gl.GLTF.GltfScene_v3.prototype=new CABLES.Op;CABLES.OPS["a9c59d94-8aea-4c20-ab5d-63ce46ecfa16"]={f:Ops.Gl.GLTF.GltfScene_v3,objName:"Ops.Gl.GLTF.GltfScene_v3"};Ops.Gl.Texture_v2=function(){CABLES.Op.apply(this,arguments);const a=this;const e={};const r=a.inUrl("File",[".jpg",".png",".webp",".jpeg",".avif"]),t=a.inSwitch("Filter",["nearest","linear","mipmap"]),n=a.inValueSelect("Wrap",["repeat","mirrored repeat","clamp to edge"],"clamp to edge"),i=a.inSwitch("Anisotropic",[0,1,2,4,8,16],0),s=a.inValueBool("Flip",false),o=a.inValueBool("Pre Multiplied Alpha",false),l=a.inValueBool("Active",true),u=a.inBool("Save Memory",true),m=a.outTexture("Texture"),f=a.outValue("Width"),c=a.outValue("Height"),h=a.outValue("Aspect Ratio"),d=a.outValue("Loaded",false),g=a.outValue("Loading",false);a.setPortGroup("Size",[f,c]);o.setUiAttribs({hidePort:true});a.toWorkPortsNeedToBeLinked(m);const p=a.patch.cgl;let v=null;let x=null;let b=null;let _=0;let O=0;let C=0;let T=0;r.onChange=s.onChange=function(){S()};i.onChange=t.onChange=E;n.onChange=y;o.onChange=function(){S()};t.set("mipmap");n.set("repeat");m.set(CGL.Texture.getEmptyTexture(p));l.onChange=function(){if(l.get()){if(v!=r.get()||!b)S();else m.set(b)}else{m.set(CGL.Texture.getEmptyTexture(p));f.set(CGL.Texture.getEmptyTexture(p).width);c.set(CGL.Texture.getEmptyTexture(p).height);if(b)b.delete();b=null}};const A=function(){const e=CGL.Texture.getTempTexture(p);m.set(e)};function S(e){clearTimeout(T);T=setTimeout(function(){M(e)},30)}function M(e){if(!l.get())return;if(!x)x=p.patch.loading.start("textureOp",r.get());let t=a.patch.getFilePath(String(r.get()));if(e)t+="?rnd="+CABLES.uuid();if(String(r.get()).indexOf("data:")==0)t=r.get();let n=false;if(v!=r.get())n=true;v=r.get();if(r.get()&&r.get().length>1){d.set(false);g.set(true);a.setUiAttrib({extendTitle:CABLES.basename(t)});if(n)a.refreshParams();p.patch.loading.addAssetLoadingTask(()=>{a.setUiError("urlerror",null);CGL.Texture.load(p,t,function(e,t){if(e){A();a.setUiError("urlerror",'could not load texture:<br/>"'+r.get()+'"',2);p.patch.loading.finished(x);return}m.set(t);f.set(t.width);c.set(t.height);h.set(t.width/t.height);if(!t.isPowerOfTwo())a.setUiError("npot","Texture dimensions not power of two! - Texture filtering will not work in WebGL 1.",0);else a.setUiError("npot",null);if(b)b.delete();b=t;m.set(null);m.set(b);g.set(false);d.set(true);if(u.get())b.image=null;p.patch.loading.finished(x)},{anisotropic:C,wrap:O,flip:s.get(),unpackAlpha:o.get(),filter:_})})}else{p.patch.loading.finished(x);A()}}function E(){if(t.get()=="nearest")_=CGL.Texture.FILTER_NEAREST;else if(t.get()=="linear")_=CGL.Texture.FILTER_LINEAR;else if(t.get()=="mipmap")_=CGL.Texture.FILTER_MIPMAP;else if(t.get()=="Anisotropic")_=CGL.Texture.FILTER_ANISOTROPIC;C=parseFloat(i.get());S()}function y(){if(n.get()=="repeat")O=CGL.Texture.WRAP_REPEAT;if(n.get()=="mirrored repeat")O=CGL.Texture.WRAP_MIRRORED_REPEAT;if(n.get()=="clamp to edge")O=CGL.Texture.WRAP_CLAMP_TO_EDGE;S()}a.onFileChanged=function(e){if(r.get()&&r.get().indexOf(e)>-1){m.set(null);m.set(CGL.Texture.getTempTexture(p));M(true)}}};Ops.Gl.Texture_v2.prototype=new CABLES.Op;CABLES.OPS["790f3702-9833-464e-8e37-6f0f813f7e16"]={f:Ops.Gl.Texture_v2,objName:"Ops.Gl.Texture_v2"};Ops.Html.FontFile_v2=function(){CABLES.Op.apply(this,arguments);const a=this;const e={};const r=a.inUrl("file",[".otf",".ttf",".woff",".woff2"]),i=a.inString("family"),s=a.outValue("Loaded"),o=a.outTrigger("Loaded Trigger");let l=null;r.onChange=function(){s.set(false);t()};i.onChange=t;let u;function t(){if(r.get()&&i.get()){if(document.fonts){u=new FontFace(i.get(),"url("+a.patch.getFilePath(String(r.get()))+")");l=a.patch.cgl.patch.loading.start("FontFile",r.get());document.fonts.add(u);u.load();u.loaded.then(e=>{s.set(true);o.trigger();a.patch.cgl.patch.loading.finished(l);a.patch.emitEvent("fontLoaded",i.get())},e=>{a.setUiError("loadingerror","Font loading error!"+u.status)})}else{const e=a.patch.getFilePath(String(r.get()));const t="".endl()+"@font-face".endl()+"{".endl()+'  font-family: "'+i.get()+'";'.endl()+'  src: url("'+e+'") format("truetype");'.endl()+"}";const n=document.createElement("style");n.type="text/css";n.innerHTML=t;document.getElementsByTagName("head")[document.getElementsByTagName("head").length-1].appendChild(n)}}}};Ops.Html.FontFile_v2.prototype=new CABLES.Op;CABLES.OPS["68177370-116e-4c76-aef3-3b10d68e7227"]={f:Ops.Html.FontFile_v2,objName:"Ops.Html.FontFile_v2"};Ops.Html.FontFile=function(){CABLES.Op.apply(this,arguments);const a=this;const e={};const r=a.inFile("file"),i=a.inValueString("family"),s=a.outValue("Loaded"),o=a.outTrigger("Loaded Trigger");r.onChange=function(){s.set(false);t()};i.onChange=t;var l;function t(){if(r.get()&&i.get()){if(document.fonts){l=new FontFace(i.get(),"url("+a.patch.getFilePath(String(r.get()))+")");document.fonts.add(l);l.load();l.loaded.then(e=>{s.set(true);o.trigger()},e=>{console.error("Font loading error! Current status",l.status)})}else{var e=a.patch.getFilePath(String(r.get()));var t="".endl()+"@font-face".endl()+"{".endl()+'  font-family: "'+i.get()+'";'.endl()+'  src: url("'+e+'") format("truetype");'.endl()+"}";var n=document.createElement("style");n.type="text/css";n.innerHTML=t;document.getElementsByTagName("head")[document.getElementsByTagName("head").length-1].appendChild(n)}}}};Ops.Html.FontFile.prototype=new CABLES.Op;CABLES.OPS["0cf90109-cccd-4633-9c77-8aaf53eae15c"]={f:Ops.Html.FontFile,objName:"Ops.Html.FontFile"};Ops.Gl.TextureEffects.ChromaticAberration=function(){CABLES.Op.apply(this,arguments);const t=this;const e={chromatic_frag:"\nIN vec2 texCoord;\nUNI sampler2D tex;\nUNI float pixel;\nUNI float onePixel;\nUNI float amount;\nUNI float lensDistort;\n\n#ifdef MASK\nUNI sampler2D texMask;\n#endif\n\n{{CGL.BLENDMODES}}\n\nvoid main()\n{\n   vec4 base=texture(tex,texCoord);\n   vec4 col=texture(tex,texCoord);\n\n   vec2 tc=texCoord;;\n   float pix = pixel;\n   if(lensDistort>0.0)\n   {\n       float dist = distance(texCoord, vec2(0.5,0.5));\n       tc-=0.5;\n       tc *=smoothstep(-0.9,1.0*lensDistort,1.0-dist);\n       tc+=0.5;\n   }\n\n    #ifdef MASK\n        vec4 m=texture(texMask,texCoord);\n        pix*=m.r*m.a;\n    #endif\n\n    #ifdef SMOOTH\n    #ifdef WEBGL2\n        float numSamples=round(pix/onePixel/4.0+1.0);\n        col.r=0.0;\n        col.b=0.0;\n\n        for(float off=0.0;off<numSamples;off++)\n        {\n            float diff=(pix/numSamples)*off;\n            col.r+=texture(tex,vec2(tc.x+diff,tc.y)).r/numSamples;\n            col.b+=texture(tex,vec2(tc.x-diff,tc.y)).b/numSamples;\n        }\n    #endif\n    #endif\n\n    #ifndef SMOOTH\n        col.r=texture(tex,vec2(tc.x+pix,tc.y)).r;\n        col.b=texture(tex,vec2(tc.x-pix,tc.y)).b;\n    #endif\n\n//   outColor = col;\n   outColor= cgl_blend(base,col,amount);\n\n}\n"};const n=t.inTrigger("render"),a=CGL.TextureEffect.AddBlendSelect(t,"Blend Mode","normal"),r=t.inValueSlider("Amount",1),i=t.inValue("Pixel",5),s=t.inValueSlider("Lens Distort",0),o=t.inValueBool("Smooth",false),l=t.inTexture("Mask"),u=t.outTrigger("trigger");const m=t.patch.cgl;const f=new CGL.Shader(m,"chromatic");CGL.TextureEffect.setupBlending(t,f,a,r);f.setSource(f.getDefaultVertexShader(),e.chromatic_frag);const c=new CGL.Uniform(f,"t","tex",0),h=new CGL.Uniform(f,"f","pixel",0),d=new CGL.Uniform(f,"f","onePixel",0),g=new CGL.Uniform(f,"t","texMask",1),p=new CGL.Uniform(f,"f","amount",r),v=new CGL.Uniform(f,"f","lensDistort",s);o.onChange=function(){if(o.get())f.define("SMOOTH");else f.removeDefine("SMOOTH")};l.onChange=function(){if(l.get())f.define("MASK");else f.removeDefine("MASK")};n.onTriggered=function(){if(!CGL.TextureEffect.checkOpInEffect(t))return;var e=m.currentTextureEffect.getCurrentSourceTexture();h.setValue(i.get()*(1/e.width));d.setValue(1/e.width);m.pushShader(f);m.currentTextureEffect.bind();m.setTexture(0,e.tex);if(l.get())m.setTexture(1,l.get().tex);m.currentTextureEffect.finish();m.popShader();u.trigger()}};Ops.Gl.TextureEffects.ChromaticAberration.prototype=new CABLES.Op;CABLES.OPS["38ac43a1-1757-48f4-9450-29f07ac0d376"]={f:Ops.Gl.TextureEffects.ChromaticAberration,objName:"Ops.Gl.TextureEffects.ChromaticAberration"};Ops.Gl.CanvasInfo=function(){CABLES.Op.apply(this,arguments);const e=this;const t={};const n=e.outValue("width"),a=e.outValue("height"),r=e.outValue("Pixel Ratio"),i=e.outValue("Aspect Ratio"),s=e.outBool("Landscape");let o=e.patch.cgl;o.addEventListener("resize",l);l();function l(){a.set(o.canvasHeight);n.set(o.canvasWidth);r.set(e.patch.cgl.pixelDensity);i.set(o.canvasWidth/o.canvasHeight);s.set(o.canvasWidth>o.canvasHeight?1:0)}};Ops.Gl.CanvasInfo.prototype=new CABLES.Op;CABLES.OPS["94e499e5-b4ee-4861-ab48-6ab5098b2cc3"]={f:Ops.Gl.CanvasInfo,objName:"Ops.Gl.CanvasInfo"};Ops.Math.Compare.LessThan=function(){CABLES.Op.apply(this,arguments);const e=this;const t={};const n=e.inValue("number1");const a=e.inValue("number2");const r=e.outValue("result");n.onChange=i;a.onChange=i;i();function i(){r.set(n.get()<a.get())}};Ops.Math.Compare.LessThan.prototype=new CABLES.Op;CABLES.OPS["04fd113f-ade1-43fb-99fa-f8825f8814c0"]={f:Ops.Math.Compare.LessThan,objName:"Ops.Math.Compare.LessThan"};Ops.Value.NumberSwitchBoolean=function(){CABLES.Op.apply(this,arguments);const e=this;const t={};const n=e.inValueBool("Boolean"),a=e.inValue("Value false",0),r=e.inValue("Value true",1),i=e.outValue("Result");n.onChange=r.onChange=a.onChange=s;e.setPortGroup("Output Values",[r,a]);function s(){if(n.get())i.set(r.get());else i.set(a.get())}};Ops.Value.NumberSwitchBoolean.prototype=new CABLES.Op;CABLES.OPS["637c5fa8-840d-4535-96ab-3d27b458a8ba"]={f:Ops.Value.NumberSwitchBoolean,objName:"Ops.Value.NumberSwitchBoolean"};Ops.Math.Sum=function(){CABLES.Op.apply(this,arguments);const e=this;const t={};const n=e.inValueFloat("number1",1),a=e.inValueFloat("number2",1),r=e.outValue("result");n.onChange=a.onChange=i;i();function i(){const e=n.get()+a.get();if(!isNaN(e))r.set(e)}};Ops.Math.Sum.prototype=new CABLES.Op;CABLES.OPS["c8fb181e-0b03-4b41-9e55-06b6267bc634"]={f:Ops.Math.Sum,objName:"Ops.Math.Sum"};Ops.Math.DeltaSum=function(){CABLES.Op.apply(this,arguments);const e=this;const t={};const o=e.inValue("Delta Value"),n=e.inValue("Default Value",0),l=e.inValue("Multiply",1),a=e.inTriggerButton("Reset"),i=e.inValueBool("Limit",false),u=e.inValue("Min",0),m=e.inValue("Max",100),f=e.inValue("Rubberband",0),s=e.outValue("Absolute Value");o.changeAlways=true;e.setPortGroup("Limit",[i,u,m,f]);let c=0;let h=CABLES.now();let d=null;i.onChange=g;n.onChange=a.onTriggered=r;m.onChange=u.onChange=v;g();function r(){let e=n.get();if(i.get()){e=Math.max(u.get(),e);e=Math.min(m.get(),e)}c=e;s.set(c)}function g(){u.setUiAttribs({greyout:!i.get()});m.setUiAttribs({greyout:!i.get()});f.setUiAttribs({greyout:!i.get()});v()}function p(){const e=u.get();const t=m.get();if(c<e)c=e;if(c>t)c=t;s.set(c)}function v(){if(i.get()){const e=u.get();const t=m.get();const n=f.get();const a=u.get()-n;const r=m.get()+n;if(c<a)c=a;if(c>r)c=r;if(n!==0){clearTimeout(d);d=setTimeout(p.bind(this),300)}}s.set(c)}o.onChange=function(){let e=o.get();const t=f.get();if(t!==0){const n=u.get();const a=m.get();const r=u.get()-t;const i=m.get()+t;if(c<n){const s=Math.abs(c-r)/t;e*=s*s}if(c>a){const s=Math.abs(i-c)/t;e*=s*s}}h=CABLES.now();c+=e*l.get();v()}};Ops.Math.DeltaSum.prototype=new CABLES.Op;CABLES.OPS["d9d4b3db-c24b-48da-b798-9e6230d861f7"]={f:Ops.Math.DeltaSum,objName:"Ops.Math.DeltaSum"};Ops.Gl.TextureEffects.ImageCompose_v2=function(){CABLES.Op.apply(this,arguments);const e=this;const t={imgcomp_frag:"UNI float a;\nvoid main()\n{\n   outColor= vec4(0.0,0.0,0.0,a);\n}\n"};const n=e.inTrigger("Render"),a=e.inBool("Use viewport size",true),r=e.inValueInt("Width",640),i=e.inValueInt("Height",480),s=e.inSwitch("Filter",["nearest","linear","mipmap"],"linear"),o=e.inValueSelect("Wrap",["clamp to edge","repeat","mirrored repeat"],"repeat"),l=e.inValueBool("HDR"),u=e.inValueBool("Transparent",false),m=e.outTrigger("Next"),f=e.outTexture("texture_out"),c=e.outValue("Aspect Ratio");const h=e.patch.cgl;e.setPortGroup("Texture Size",[a,r,i]);e.setPortGroup("Texture Settings",[o,s,l,u]);f.set(CGL.Texture.getEmptyTexture(h));let d=null;let g=null;let p=8,v=8;const x=[0,0,0,0];let b=true;let _=CGL.Texture.FILTER_LINEAR;let O=CGL.Texture.WRAP_CLAMP_TO_EDGE;const C=0;const T=0;o.onChange=y;s.onChange=w;n.onTriggered=e.preRender=E;w();y();M();function A(){if(d)d.delete();if(g)g.delete();if(l.get()&&s.get()=="mipmap")e.setUiError("fpmipmap","Don't use mipmap and HDR at the same time, many systems do not support this.");else e.setUiError("fpmipmap",null);d=new CGL.TextureEffect(h,{isFloatingPointTexture:l.get()});g=new CGL.Texture(h,{name:"image_compose_v2_"+e.id,isFloatingPointTexture:l.get(),filter:_,wrap:O,width:Math.ceil(r.get()),height:Math.ceil(i.get())});d.setSourceTexture(g);f.set(CGL.Texture.getEmptyTexture(h));b=false}l.onChange=function(){b=true};function S(){if(!d)A();if(a.get()){p=h.getViewPort()[2];v=h.getViewPort()[3]}else{p=Math.ceil(r.get());v=Math.ceil(i.get())}if((p!=g.width||v!=g.height)&&(p!==0&&v!==0)){g.setSize(p,v);c.set(p/v);d.setSourceTexture(g);f.set(CGL.Texture.getEmptyTexture(h));f.set(g)}if(f.get()&&_!=CGL.Texture.FILTER_NEAREST){if(!f.get().isPowerOfTwo())e.setUiError("hintnpot","texture dimensions not power of two! - texture filtering when scaling will not work on ios devices.",0);else e.setUiError("hintnpot",null,0)}else e.setUiError("hintnpot",null,0)}function M(){r.setUiAttribs({greyout:a.get()});i.setUiAttribs({greyout:a.get()})}a.onChange=function(){M()};e.preRender=function(){E()};function E(){if(!d||b)A();const e=h.getViewPort();x[0]=e[0];x[1]=e[1];x[2]=e[2];x[3]=e[3];h.pushBlend(false);S();h.currentTextureEffect=d;d.setSourceTexture(g);let t=CGL.Texture.getBlackTexture(h);if(u.get())t=CGL.Texture.getEmptyTexture(h);d.startEffect(t);m.trigger();f.set(d.getCurrentSourceTexture());d.endEffect();h.setViewPort(x[0],x[1],x[2],x[3]);h.popBlend(false);h.currentTextureEffect=null}function y(){if(o.get()=="repeat")O=CGL.Texture.WRAP_REPEAT;if(o.get()=="mirrored repeat")O=CGL.Texture.WRAP_MIRRORED_REPEAT;if(o.get()=="clamp to edge")O=CGL.Texture.WRAP_CLAMP_TO_EDGE;b=true}function w(){if(s.get()=="nearest")_=CGL.Texture.FILTER_NEAREST;if(s.get()=="linear")_=CGL.Texture.FILTER_LINEAR;if(s.get()=="mipmap")_=CGL.Texture.FILTER_MIPMAP;b=true}};Ops.Gl.TextureEffects.ImageCompose_v2.prototype=new CABLES.Op;CABLES.OPS["a5b43d4c-a9ea-4eaf-9ed0-f257d222659d"]={f:Ops.Gl.TextureEffects.ImageCompose_v2,objName:"Ops.Gl.TextureEffects.ImageCompose_v2"};Ops.Html.BackgroundImage_v2=function(){CABLES.Op.apply(this,arguments);const t=this;const e={};const n=t.inObject("Element"),a=t.inValueBool("active",true),r=t.inUrl("image file"),i=t.inValueSelect("Size",["auto","length","cover","contain","initial","inherit","75%","50%","40%","30%","25%","20%","10%"],"cover"),s=t.inValueSelect("Repeat",["no-repeat","repeat","repeat-x","repeat-y"],"no-repeat"),o=t.inValueSelect("Position",["left top","left center","left bottom","right top","right center","right bottom","center top","center center","center bottom"],"center center"),l=t.outObject("HTML Element");t.onLoadedValueSet=t.onLoaded=o.onChange=i.onChange=n.onChange=s.onChange=a.onChange=r.onChange=c;let u=null;let m=null;t.onFileChanged=function(e){if(r.get()&&r.get().indexOf(e)>-1){if(u)u.style["background-image"]="none";m=CABLES.uuid();c()}};function f(){if(u){u.style["background-image"]="none";u.style["background-size"]="initial";u.style["background-position"]="initial";u.style["background-repeat"]="initial"}}function c(){if(!n.get()){f();return}t.setUiAttrib({extendTitle:CABLES.basename(r.get())});u=n.get();if(u&&u.style&&r.get()){if(!a.get()){u.style["background-image"]="none"}else{let e="";if(m)e="?cb="+m;u.style["background-image"]="url("+t.patch.getFilePath(String(r.get()))+e+")";u.style["background-size"]=i.get();u.style["background-position"]=o.get();u.style["background-repeat"]=s.get()}}l.set(n.get())}};Ops.Html.BackgroundImage_v2.prototype=new CABLES.Op;CABLES.OPS["081c4328-984d-4acd-8758-5d1379cc3a30"]={f:Ops.Html.BackgroundImage_v2,objName:"Ops.Html.BackgroundImage_v2"};Ops.Html.DivElement_v2=function(){CABLES.Op.apply(this,arguments);const e=this;const t={};const n=e.inString("Text","Hello Div"),a=e.inString("Id"),r=e.inString("Class"),i=e.inValueEditor("Style","position:absolute;\nz-index:100;","css"),s=e.inValueBool("Interactive",false),o=e.inValueBool("Visible",true),l=e.inValueBool("Convert Line Breaks",false),u=e.inValueBool("Propagate Click-Events",true),m=e.outObject("DOM Element"),f=e.outValue("Hover"),c=e.outTrigger("Clicked");let h=null;let d=null;let g="block";const p=document.createElement("div");p.dataset.op=e.id;p.classList.add("cablesEle");const v=e.patch.cgl.canvas.parentElement;v.appendChild(p);m.set(p);r.onChange=S;l.onChange=n.onChange=_;i.onChange=C;s.onChange=w;o.onChange=b;_();C();P();w();e.onDelete=O;m.onLinkChanged=C;function x(e){if(!e){p.style.visibility="hidden";g=p.style.display||"block";p.style.display="none"}else{if(g=="none")g="block";p.style.visibility="visible";p.style.display=g}}function b(){x(o.get())}function _(){let e=n.get();if(d===e)return;d=e;if(e&&l.get())e=e.replace(/(?:\r\n|\r|\n)/g,"<br>");if(p.innerHTML!=e)p.innerHTML=e;m.set(null);m.set(p)}function O(){if(p)A();if(p&&p.parentNode)p.parentNode.removeChild(p)}function C(){if(i.get()!=p.style){p.setAttribute("style",i.get());b();m.set(null);m.set(p)}if(!p.parentElement){v.appendChild(p)}P()}let T="";function A(){const t=(r.get()||"").split(" ");for(let e=0;e<t.length;e++){if(t[e])p.classList.remove(t[e])}T=""}function S(){const t=(r.get()||"").split(" ");const n=(T||"").split(" ");let a=false;for(let e=0;e<n.length;e++){if(n[e]&&t.indexOf(n[e].trim())==-1){a=true;p.classList.remove(n[e])}}for(let e=0;e<t.length;e++){if(t[e]){p.classList.add(t[e].trim())}}T=r.get();P()}function M(e){f.set(true)}function E(e){f.set(false)}function y(e){if(!u.get()){e.stopPropagation()}c.trigger()}function w(){L();if(s.get())I()}a.onChange=function(){p.id=a.get()};function L(){if(h){h.removeEventListener("pointerdown",y);h.removeEventListener("pointerleave",E);h.removeEventListener("pointerenter",M);h=null}}function I(){if(h)L();h=p;if(h){h.addEventListener("pointerdown",y);h.addEventListener("pointerleave",E);h.addEventListener("pointerenter",M)}}e.addEventListener("onEnabledChange",function(e){x(p.style.visibility!="visible")});function P(){if(r.get()&&i.get()){e.setUiError("error","DIV uses external and inline CSS",1)}else{e.setUiError("error",null)}}};Ops.Html.DivElement_v2.prototype=new CABLES.Op;CABLES.OPS["db36db6d-83e4-4d27-b84c-8a20067aaffc"]={f:Ops.Html.DivElement_v2,objName:"Ops.Html.DivElement_v2"};Ops.Html.HyperLink_v2=function(){CABLES.Op.apply(this,arguments);const e=this;const t={};const n=e.inTriggerButton("Open"),a=e.inString("URL","https://cables.gl"),r=e.inString("Target Name","_self"),i=e.inString("Specs","");n.onTriggered=function(){window.open(a.get(),r.get(),i.get())}};Ops.Html.HyperLink_v2.prototype=new CABLES.Op;CABLES.OPS["a669d4f7-1e35-463c-bf8b-08c9f1b68e04"]={f:Ops.Html.HyperLink_v2,objName:"Ops.Html.HyperLink_v2"};Ops.Gl.TextureEffects.PseudoLensFlares=function(){CABLES.Op.apply(this,arguments);const t=this;const e={lensflares_frag:"UNI sampler2D tex;\n// UNI sampler2D texInput;\nUNI float haloWidth;\nUNI int numGhosts;\nUNI float dispersal;\nUNI float amountGhosts;\nUNI float amountHalo;\nUNI sampler2D texLookup;\n\nIN vec2 texCoord;\n\nvec3 lumi(vec3 c)\n{\n   return vec3(sqrt(c.r*c.r*0.241+c.g*c.g*0.691+c.b*c.b*0.068));\n}\n\nvec4 myTexture(sampler2D tex,vec2 coords)\n{\n    vec4 c=texture(tex, coords);\n    c.rgb=lumi(c.rgb);\n    return c;\n}\n\nvoid main()\n{\n    vec2 texcoord = -texCoord + vec2(1.0);\n    // vec2 texelSize = 1.0 / vec2(textureSize(texInput, 0));\n    vec2 ghostVec = (vec2(0.5) - texcoord) * (0.5*dispersal);\n    vec4 result = vec4(0.0,0.0,0.0,1.0);//texture(tex,texCoord);\n\n\n\n    // ghosts\n    for (int i = 0; i < numGhosts; ++i)\n    {\n        vec2 offset = fract(texcoord + ghostVec * float(i));\n        float weightA = length(vec2(0.5) - offset) / length(vec2(0.5));\n        weightA = pow(1. - weightA, 10.0);\n        result += myTexture(tex, offset)*weightA*amountGhosts;\n    }\n\n    // halo\n    vec2 haloVec = normalize(ghostVec) * haloWidth;\n    float weight = length(vec2(0.5) - fract(texcoord + haloVec)) / length(vec2(0.5));\n\n    weight = pow(1.0 - weight, 5.0);\n    result += myTexture(tex, texcoord + haloVec) * weight * amountHalo;\n\n    #ifdef TEX_LOOPUP\n        result *= texture(texLookup, vec2(length(vec2(0.5) - texcoord) / length(vec2(0.5)),0.5));\n    #endif\n\n    outColor=result;\n}\n\n"};const n=t.inTrigger("render"),a=t.inValueSlider("Ghosts",1),r=t.inValueInt("Num Ghosts",3),i=t.inValueSlider("Dispersal",.5),s=t.inValueSlider("Halo",1),o=t.inValueSlider("Halo Width",.5),l=t.inTexture("Color Lookup"),u=t.outTrigger("trigger");const m=t.patch.cgl,f=new CGL.Shader(m,t.name);f.setSource(f.getDefaultVertexShader(),e.lensflares_frag||"");const c=new CGL.Uniform(f,"t","tex",0),h=new CGL.Uniform(f,"t","texLookup",1),d=new CGL.Uniform(f,"f","haloWidth",o),g=new CGL.Uniform(f,"i","numGhosts",r),p=new CGL.Uniform(f,"f","dispersal",i),v=new CGL.Uniform(f,"f","amountGhosts",a),x=new CGL.Uniform(f,"f","amountHalo",s);l.onChange=function(){if(l.get())f.define("TEX_LOOPUP");else f.removeDefine("TEX_LOOPUP")};n.onTriggered=function(){if(!CGL.TextureEffect.checkOpInEffect(t))return;let e=m.currentTextureEffect.getCurrentSourceTexture();m.pushShader(f);m.currentTextureEffect.bind();m.setTexture(0,e.tex);if(l.get())m.setTexture(1,l.get().tex);m.currentTextureEffect.finish();m.popShader();u.trigger()}};Ops.Gl.TextureEffects.PseudoLensFlares.prototype=new CABLES.Op;CABLES.OPS["9e4a5694-ed59-4401-9f7b-123a627924c5"]={f:Ops.Gl.TextureEffects.PseudoLensFlares,objName:"Ops.Gl.TextureEffects.PseudoLensFlares"};window.addEventListener("load",function(e){CABLES.jsLoaded=new Event("CABLES.jsLoaded");document.dispatchEvent(CABLES.jsLoaded)});this.CGL=this.CGL||{},this.CGL.COREMODULES=this.CGL.COREMODULES||{},this.CGL.COREMODULES.Shadermodifier=function(n){var a={};function r(e){if(a[e])return a[e].exports;var t=a[e]={i:e,l:!1,exports:{}};return n[e].call(t.exports,t,t.exports,r),t.l=!0,t.exports}return r.m=n,r.c=a,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var a in t)r.d(n,a,function(e){return t[e]}.bind(null,a));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,n){"use strict";n.r(t);CGL.ShaderModifier=class{constructor(e,t,n){this._cgl=e,this._name=t,this._origShaders={},this._uniforms=[],this._structUniforms=[],this._definesToggled={},this._defines={},this._mods=[],this._textures=[],this._boundShader=null,this._changedDefines=!0,this._changedUniforms=!0,this._modulesChanged=!1,this.needsTexturePush=!1,this._lastShader=null,1==this._cgl.glVersion&&(this._cgl.gl.getExtension("OES_texture_float"),this._cgl.gl.getExtension("OES_texture_float_linear"),this._cgl.gl.getExtension("OES_texture_half_float"),this._cgl.gl.getExtension("OES_texture_half_float_linear"))}bind(){const n=this._cgl.getShader();if(!n)return;this._boundShader=this._origShaders[n.id];let a=!1;if(this._boundShader&&this._lastShader!=this._boundShader.shader&&(this._boundShader.shader.hasModule(this._mods[0].id)||(a=!0)),(a||!this._boundShader||n.lastCompile!=this._boundShader.lastCompile||this._modulesChanged||n._needsRecompile)&&(this._boundShader&&this._boundShader.shader.dispose(),n._needsRecompile&&n.compile(),this._boundShader=this._origShaders[n.id]={lastCompile:n.lastCompile,orig:n,shader:n.copy()},1==this._cgl.glVersion&&(this._boundShader.shader.enableExtension("GL_OES_standard_derivatives"),this._boundShader.shader.enableExtension("GL_OES_texture_float"),this._boundShader.shader.enableExtension("GL_OES_texture_float_linear"),this._boundShader.shader.enableExtension("GL_OES_texture_half_float"),this._boundShader.shader.enableExtension("GL_OES_texture_half_float_linear")),this._addModulesToShader(this._boundShader.shader),this._updateDefinesShader(this._boundShader.shader),this._updateUniformsShader(this._boundShader.shader)),this._changedDefines&&this._updateDefines(),this._changedUniforms&&this._updateUniforms(),this._cgl.pushShader(this._boundShader.shader),this._boundShader.shader.copyUniformValues(this._boundShader.orig),this.needsTexturePush){for(let t=0;t<this._textures.length;t+=1){const a=this._textures[t][0],e=this._textures[t][1],r=this._textures[t][2];if(this._getUniform(a)){const n=this.getPrefixedName(a),i=this._boundShader.shader.getUniform(n);i&&this._boundShader.shader.pushTexture(i,e,r)}}this.needsTexturePush=!1,this._textures.length=0}this._modulesChanged=!1}unbind(){this._boundShader&&this._cgl.popShader(),this._boundShader=null}_addModulesToShader(t){let n;this._mods.length>1&&(n=this._mods[0]);for(let e=0;e<this._mods.length;e++)t.addModule(this._mods[e],n)}_removeModulesFromShader(t){for(const e in this._origShaders)this._origShaders[e].shader.removeModule(t)}addModule(e){this._mods.push(e),this._modulesChanged=!0}removeModule(t){const n=[];for(let e=0;e<this._mods.length;e++)this._mods[e].title==t&&(this._removeModulesFromShader(this._mods[e]),n.push(e));for(let e=n.length-1;e>=0;e-=1)this._mods.splice(n[e],1);this._modulesChanged=!0}_updateUniformsShader(r){for(let e=0;e<this._uniforms.length;e++){const t=this._uniforms[e],n=this.getPrefixedName(t.name);if(!r.hasUniform(n)&&!t.structName){let e=null;"both"===t.shaderType?(e=r.addUniformBoth(t.type,n,t.v1,t.v2,t.v3,t.v4),e.comment="mod: "+this._name):"frag"===t.shaderType?(e=r.addUniformFrag(t.type,n,t.v1,t.v2,t.v3,t.v4),e.comment="mod: "+this._name):"vert"===t.shaderType&&(e=r.addUniformVert(t.type,n,t.v1,t.v2,t.v3,t.v4),e.comment="mod: "+this._name)}}for(let a=0;a<this._structUniforms.length;a+=1){const e=this._structUniforms[a];let t=e.uniformName,n=e.structName;const i=e.members;e.propertyName;t=this.getPrefixedName(e.uniformName),n=this.getPrefixedName(e.structName),"frag"===e.shaderType&&r.addUniformStructFrag(n,t,i),"vert"===e.shaderType&&r.addUniformStructVert(n,t,i),"both"===e.shaderType&&r.addUniformStructBoth(n,t,i)}}_updateUniforms(){for(const e in this._origShaders)this._updateUniformsShader(this._origShaders[e].shader);this._changedUniforms=!1}_setUniformValue(e,t,n){const a=e.getUniform(t);a&&a.setValue(n)}setUniformValue(e,t){if(!this._getUniform(e))return;const n=this.getPrefixedName(e);for(const e in this._origShaders)this._setUniformValue(this._origShaders[e].shader,n,t)}hasUniform(e){return this._getUniform(e)}_getUniform(t){for(let e=0;e<this._uniforms.length;e++){if(this._uniforms[e].name==t)return this._uniforms[e];if(this._uniforms[e].structName&&this._uniforms[e].propertyName==t)return this._uniforms[e]}return!1}_getStructUniform(t){for(let e=0;e<this._structUniforms.length;e+=1)if(this._structUniforms[e].uniformName===t)return this._structUniforms[e];return null}_isStructUniform(t){for(let e=0;e<this._uniforms.length;e++){if(this._uniforms[e].name==t)return!1;if(this._uniforms[e].structName&&this._uniforms[e].propertyName==t)return!0}return!1}addUniform(t,n,a,r,i,s,o,l,u,m){if(!this._getUniform(n)){let e="both";m&&(e=m),this._uniforms.push({type:t,name:n,v1:a,v2:r,v3:i,v4:s,structUniformName:o,structName:l,propertyName:u,shaderType:e}),this._changedUniforms=!0}}addUniformFrag(e,t,n,a,r,i){this.addUniform(e,t,n,a,r,i,null,null,null,"frag"),this._changedUniforms=!0}addUniformVert(e,t,n,a,r,i){this.addUniform(e,t,n,a,r,i,null,null,null,"vert"),this._changedUniforms=!0}addUniformBoth(e,t,n,a,r,i){this.addUniform(e,t,n,a,r,i,null,null,null,"both"),this._changedUniforms=!0}addUniformStruct(t,n,a,r){for(let e=0;e<a.length;e+=1){const i=a[e];"2i"!==i.type&&"i"!==i.type&&"3i"!==i.type||"both"!==r||console.error("Adding an integer struct member to both shaders can potentially error. Please use different structs for each shader. Error occured in struct:",t," with member:",i.name," of type:",i.type,"."),this._getUniform(n+"."+i.name)||this.addUniform(i.type,n+"."+i.name,i.v1,i.v2,i.v3,i.v4,n,t,i.name,r)}this._getStructUniform(n)||this._structUniforms.push({structName:t,uniformName:n,members:a,shaderType:r})}addUniformStructVert(e,t,n){this.addUniformStruct(e,t,n,"vert")}addUniformStructFrag(e,t,n){this.addUniformStruct(e,t,n,"frag")}addUniformStructBoth(e,t,n){this.addUniformStruct(e,t,n,"both")}pushTexture(e,t,n){if(!t)throw new Error("no texture given to texturestack");this._textures.push([e,t,n]),this.needsTexturePush=!0}_removeUniformFromShader(e,t){t.hasUniform(e)&&t.removeUniform(e)}removeUniform(n){if(this._getUniform(n)){for(let t=this._uniforms.length-1;t>=0;t-=1){const e=n;if(this._uniforms[t].name==n&&!this._uniforms[t].structName){for(const n in this._origShaders)this._removeUniformFromShader(this.getPrefixedName(e),this._origShaders[n].shader);this._uniforms.splice(t,1)}}this._changedUniforms=!0}}removeUniformStruct(n){if(this._getStructUniform(n)){for(let e=this._structUniforms.length-1;e>=0;e-=1){const t=this._structUniforms[e];if(t.uniformName===n){for(const n in this._origShaders)for(let e=0;e<t.members.length;e+=1){const a=t.members[e];this._removeUniformFromShader(this.getPrefixedName(a.name),this._origShaders[n].shader)}this._structUniforms.splice(e,1)}}this._changedUniforms=!0}}getPrefixedName(e){const t=this._mods[0].group;if(void 0!==t)return 0==e.indexOf("MOD_")&&(e="mod"+t+"_"+(e=e.substr("MOD_".length))),e}_updateDefinesShader(n){for(const t in this._defines){const e=this.getPrefixedName(t);null!==this._defines[t]&&void 0!==this._defines[t]?n.define(e,this._defines[t]):n.removeDefine(e)}for(const t in this._definesToggled){const e=this.getPrefixedName(t);n.toggleDefine(e,this._definesToggled[t])}}_updateDefines(){for(const e in this._origShaders)this._updateDefinesShader(this._origShaders[e].shader);this._changedDefines=!1}define(e,t){this._defines[e]=t,this._changedDefines=!0}removeDefine(e){this._defines[e]=null,this._changedDefines=!0}hasDefine(e){return null!==this._defines[e]&&void 0!==this._defines[e]}toggleDefine(e,t){this._changedDefines=!0,this._definesToggled[e]=t}currentShader(){return this._boundShader.shader}dispose(){}}}]).Shadermodifier;